{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\handleGoTrade.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\handleGoTrade.ts","mtime":1614851376273},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gQHRzLW5vY2hlY2sKaW1wb3J0IGFjdGlvbnMgZnJvbSAncmVkdXgvYWN0aW9ucyc7CmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50L21vbWVudCc7Cgp2YXIgZ2V0U3dhcEJ5SWRTYWZlID0gZnVuY3Rpb24gZ2V0U3dhcEJ5SWRTYWZlKHN3YXBJRCkgewogIHRyeSB7CiAgICB2YXIgcmV0dXJuZWRTd2FwID0gYWN0aW9ucy5jb3JlLmdldFN3YXBCeUlkKHN3YXBJRCk7CiAgICByZXR1cm4gcmV0dXJuZWRTd2FwOwogIH0gY2F0Y2ggKG5vRmxvd0Vycm9yKSB7CiAgICByZXR1cm4gZmFsc2U7CiAgfQp9OwoKdmFyIGdldERlY2xpbmVkRXhpc3RlZFN3YXBJbmRleCA9IGZ1bmN0aW9uIGdldERlY2xpbmVkRXhpc3RlZFN3YXBJbmRleChfcmVmKSB7CiAgdmFyIGN1cnJlbmN5ID0gX3JlZi5jdXJyZW5jeSwKICAgICAgZGVjbGluZSA9IF9yZWYuZGVjbGluZTsKICB2YXIgZGF0ZSA9IERhdGUubm93KCkgLyAxMDAwOwogIHZhciBpbmRleE9mRGVjbGluZSA9IGRlY2xpbmUubGVuZ3RoIC0gMTsKCiAgaWYgKGluZGV4T2ZEZWNsaW5lID49IDApIHsKICAgIGZvciAodmFyIGkgPSAwOyBpIDw9IGluZGV4T2ZEZWNsaW5lOyBpKyspIHsKICAgICAgdmFyIGRlY2xpbmVTd2FwID0gZ2V0U3dhcEJ5SWRTYWZlKGRlY2xpbmVbaV0pOwoKICAgICAgaWYgKGRlY2xpbmVTd2FwKSB7CiAgICAgICAgdmFyIGl0ZW1TdGF0ZSA9IGRlY2xpbmVTd2FwLmZsb3cuc3RhdGU7CiAgICAgICAgdmFyIHZhbHVlcyA9IGl0ZW1TdGF0ZS51dHhvU2NyaXB0VmFsdWVzOwoKICAgICAgICBpZiAodmFsdWVzKSB7CiAgICAgICAgICB2YXIgaXNGaW5pc2hlZCA9IGl0ZW1TdGF0ZS5pc0ZpbmlzaGVkLAogICAgICAgICAgICAgIGlzUmVmdW5kZWQgPSBpdGVtU3RhdGUuaXNSZWZ1bmRlZCwKICAgICAgICAgICAgICBpc1N0b3BwZWRTd2FwID0gaXRlbVN0YXRlLmlzU3RvcHBlZFN3YXA7IC8vQAoKICAgICAgICAgIHZhciBsb2NrVGltZSA9IG1vbWVudC51bml4KHZhbHVlcy5sb2NrVGltZSB8fCBkYXRlKS5faSAvIDEwMDA7CiAgICAgICAgICB2YXIgdGltZVNpbmNlTG9jayA9IGRhdGUgLSBsb2NrVGltZTsKCiAgICAgICAgICBpZiAoaXNGaW5pc2hlZCB8fCBpc1JlZnVuZGVkIHx8IGlzU3RvcHBlZFN3YXAgfHwgdGltZVNpbmNlTG9jayA+IDI1OTIwMCkgewogICAgICAgICAgICAvLyAyNTkyMDAgMyDQtNC90Y8g0LIg0YHQtdC60YPQvdC00LDRhQogICAgICAgICAgICBhY3Rpb25zLmNvcmUuZm9yZ2V0T3JkZXJzKGRlY2xpbmVbaV0pOwogICAgICAgICAgfSBlbHNlIGlmIChkZWNsaW5lU3dhcC5zZWxsQ3VycmVuY3kgPT09IGN1cnJlbmN5LnRvVXBwZXJDYXNlKCkgLy9ACiAgICAgICAgICAmJiAhZGVjbGluZVN3YXAuaXNTd2FwRXhpc3QgJiYgIWRlY2xpbmVTd2FwLmlzTXkpIHsKICAgICAgICAgICAgcmV0dXJuIGk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQoKICByZXR1cm4gZmFsc2U7Cn07CgpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0RGVjbGluZWRFeGlzdGVkU3dhcEluZGV4OiBnZXREZWNsaW5lZEV4aXN0ZWRTd2FwSW5kZXgKfTs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/helpers/handleGoTrade.ts"],"names":["actions","moment","getSwapByIdSafe","swapID","returnedSwap","core","getSwapById","noFlowError","getDeclinedExistedSwapIndex","currency","decline","date","Date","now","indexOfDecline","length","i","declineSwap","itemState","flow","state","values","utxoScriptValues","isFinished","isRefunded","isStoppedSwap","lockTime","unix","_i","timeSinceLock","forgetOrders","sellCurrency","toUpperCase","isSwapExist","isMy"],"mappings":"AAAA;AAEA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AAClC,MAAI;AACF,QAAMC,YAAY,GAAGJ,OAAO,CAACK,IAAR,CAAaC,WAAb,CAAyBH,MAAzB,CAArB;AACA,WAAOC,YAAP;AACD,GAHD,CAGE,OAAOG,WAAP,EAAoB;AACpB,WAAO,KAAP;AACD;AACF,CAPD;;AAQA,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,OAA2B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC7D,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,KAAa,IAA1B;AAEA,MAAMC,cAAc,GAAGJ,OAAO,CAACK,MAAR,GAAiB,CAAxC;;AAEA,MAAID,cAAc,IAAI,CAAtB,EAAyB;AACvB,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,cAArB,EAAqCE,CAAC,EAAtC,EAA0C;AACxC,UAAMC,WAAW,GAAGf,eAAe,CAACQ,OAAO,CAACM,CAAD,CAAR,CAAnC;;AAEA,UAAIC,WAAJ,EAAiB;AACf,YAAMC,SAAS,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,KAAnC;AACA,YAAMC,MAAM,GAAGH,SAAS,CAACI,gBAAzB;;AAEA,YAAID,MAAJ,EAAY;AAAA,cACFE,UADE,GACwCL,SADxC,CACFK,UADE;AAAA,cACUC,UADV,GACwCN,SADxC,CACUM,UADV;AAAA,cACsBC,aADtB,GACwCP,SADxC,CACsBO,aADtB,EAGV;;AACA,cAAMC,QAAQ,GAAGzB,MAAM,CAAC0B,IAAP,CAAYN,MAAM,CAACK,QAAP,IAAmBf,IAA/B,EAAqCiB,EAArC,GAA0C,IAA3D;AACA,cAAMC,aAAa,GAAGlB,IAAI,GAAGe,QAA7B;;AAEA,cAAIH,UAAU,IAAIC,UAAd,IAA4BC,aAA5B,IAA6CI,aAAa,GAAG,MAAjE,EAAyE;AAAE;AACzE7B,YAAAA,OAAO,CAACK,IAAR,CAAayB,YAAb,CAA0BpB,OAAO,CAACM,CAAD,CAAjC;AACD,WAFD,MAEO,IAAIC,WAAW,CAACc,YAAZ,KAA6BtB,QAAQ,CAACuB,WAAT,EAA7B,CACT;AADS,aAEN,CAACf,WAAW,CAACgB,WAFP,IAGN,CAAChB,WAAW,CAACiB,IAHX,EAGiB;AACtB,mBAAOlB,CAAP;AACD;AACF;AACF;AACF;AACF;;AACD,SAAO,KAAP;AACD,CAjCD;;AAmCA,eAAe;AACbR,EAAAA,2BAA2B,EAA3BA;AADa,CAAf","sourcesContent":["// @ts-nocheck\r\nimport SwapApp, { util } from 'swap.app'\r\nimport actions from 'redux/actions'\r\nimport moment from 'moment/moment'\r\n\r\n\r\nconst getSwapByIdSafe = (swapID) => {\r\n  try {\r\n    const returnedSwap = actions.core.getSwapById(swapID)\r\n    return returnedSwap\r\n  } catch (noFlowError) {\r\n    return false\r\n  }\r\n}\r\nconst getDeclinedExistedSwapIndex = ({ currency, decline }) => {\r\n  const date = Date.now() / 1000\r\n\r\n  const indexOfDecline = decline.length - 1\r\n\r\n  if (indexOfDecline >= 0) {\r\n    for (let i = 0; i <= indexOfDecline; i++) {\r\n      const declineSwap = getSwapByIdSafe(decline[i])\r\n\r\n      if (declineSwap) {\r\n        const itemState = declineSwap.flow.state\r\n        const values = itemState.utxoScriptValues\r\n\r\n        if (values) {\r\n          const { isFinished, isRefunded, isStoppedSwap } = itemState\r\n\r\n          //@\r\n          const lockTime = moment.unix(values.lockTime || date)._i / 1000\r\n          const timeSinceLock = date - lockTime\r\n\r\n          if (isFinished || isRefunded || isStoppedSwap || timeSinceLock > 259200) { // 259200 3 дня в секундах\r\n            actions.core.forgetOrders(decline[i])\r\n          } else if (declineSwap.sellCurrency === currency.toUpperCase()\r\n            //@\r\n            && !declineSwap.isSwapExist\r\n            && !declineSwap.isMy) {\r\n            return i\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return false\r\n}\r\n\r\nexport default {\r\n  getDeclinedExistedSwapIndex,\r\n}\r\n"]}]}