{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.swap\\Room.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.swap\\Room.ts","mtime":1614842913767},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7CmltcG9ydCBTd2FwQXBwLCB7IEV2ZW50cyB9IGZyb20gJ3N3YXAuYXBwJzsKCnZhciBSb29tID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAvLyBUT0RPIGFkZCBkZXN0cm95IG1ldGhvZCB3aXRoIGFsbCBldmVudHMgdW5zdWJzY3JpYmUgKHdoZW4gc3dhcCBpcyBmaW5pc2hlZCkKICBmdW5jdGlvbiBSb29tKGFwcCwgX3JlZikgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgc3dhcElkID0gX3JlZi5zd2FwSWQsCiAgICAgICAgcGFydGljaXBhbnRQZWVyID0gX3JlZi5wYXJ0aWNpcGFudFBlZXI7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFJvb20pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAic3dhcElkIiwgdm9pZCAwKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgInBlZXIiLCB2b2lkIDApOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiX2V2ZW50cyIsIHZvaWQgMCk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJhcHAiLCB2b2lkIDApOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZ2V0T25saW5lUGFydGljaXBhbnQiLCBmdW5jdGlvbiAoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgdmFyIG9ubGluZSA9IF90aGlzLmFwcC5zZXJ2aWNlcy5yb29tLmNvbm5lY3Rpb24uaGFzUGVlcihfdGhpcy5wZWVyKTsKCiAgICAgICAgaWYgKCFvbmxpbmUpIHsKICAgICAgICAgIF90aGlzLl9ldmVudHMuZGlzcGF0Y2goJ3BhcnRpY2lwYW50IGlzIG9mZmxpbmUnLCBfdGhpcy5wZWVyKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBvbmxpbmU7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUud2FybihlcnIpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfSk7CgogICAgdGhpcy5zd2FwSWQgPSBzd2FwSWQ7CiAgICB0aGlzLnBlZXIgPSBwYXJ0aWNpcGFudFBlZXI7CiAgICB0aGlzLl9ldmVudHMgPSBuZXcgRXZlbnRzKCk7CiAgICB0aGlzLmFwcCA9IG51bGw7CgogICAgdGhpcy5fYXR0YWNoU3dhcEFwcChhcHApOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFJvb20sIFt7CiAgICBrZXk6ICJfYXR0YWNoU3dhcEFwcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2F0dGFjaFN3YXBBcHAoYXBwKSB7CiAgICAgIFN3YXBBcHAucmVxdWlyZWQoYXBwKTsKICAgICAgdGhpcy5hcHAgPSBhcHA7CiAgICB9CiAgfSwgewogICAga2V5OiAib24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uKGV2ZW50TmFtZSwgaGFuZGxlcikgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuYXBwLnNlcnZpY2VzLnJvb20ub24oZXZlbnROYW1lLCBmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICB2YXIgZnJvbVBlZXIgPSBfcmVmMi5mcm9tUGVlciwKICAgICAgICAgICAgc3dhcElkID0gX3JlZjIuc3dhcElkLAogICAgICAgICAgICB2YWx1ZXMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZjIsIFsiZnJvbVBlZXIiLCAic3dhcElkIl0pOwoKICAgICAgICBkZWJ1Zygnc3dhcC52ZXJib3NlOnJvb20nKSgib24gIi5jb25jYXQoZXZlbnROYW1lLCAiIGZyb20gIikuY29uY2F0KGZyb21QZWVyLCAiIGF0IHN3YXAgIikuY29uY2F0KHN3YXBJZCkpOwoKICAgICAgICBpZiAoZnJvbVBlZXIgPT09IF90aGlzMi5wZWVyICYmIHN3YXBJZCA9PT0gX3RoaXMyLnN3YXBJZCkgewogICAgICAgICAgaGFuZGxlcih2YWx1ZXMpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAib25jZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gb25jZShldmVudE5hbWUsIGhhbmRsZXIpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICB0aGlzLmFwcC5zZXJ2aWNlcy5yb29tLm9uKGV2ZW50TmFtZSwgZnVuY3Rpb24gKF9yZWYzKSB7CiAgICAgICAgdmFyIGZyb21QZWVyID0gX3JlZjMuZnJvbVBlZXIsCiAgICAgICAgICAgIHN3YXBJZCA9IF9yZWYzLnN3YXBJZCwKICAgICAgICAgICAgdmFsdWVzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYzLCBbImZyb21QZWVyIiwgInN3YXBJZCJdKTsKCiAgICAgICAgZGVidWcoJ3N3YXAudmVyYm9zZTpyb29tJykoIm9uY2UgIi5jb25jYXQoZXZlbnROYW1lLCAiIGZyb20gIikuY29uY2F0KGZyb21QZWVyLCAiIGF0IHN3YXAgIikuY29uY2F0KHN3YXBJZCkpOwoKICAgICAgICBpZiAoZnJvbVBlZXIgPT09IHNlbGYucGVlciAmJiBzd2FwSWQgPT09IHNlbGYuc3dhcElkKSB7CiAgICAgICAgICB0aGlzLnVuc3Vic2NyaWJlKCk7CiAgICAgICAgICBoYW5kbGVyKHZhbHVlcyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZW5kTWVzc2FnZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UobWVzc2FnZSkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5nZXRPbmxpbmVQYXJ0aWNpcGFudCgpKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczMuc2VuZE1lc3NhZ2UobWVzc2FnZSk7CiAgICAgICAgfSwgMzAwMCk7CiAgICAgIH0KCiAgICAgIHZhciBldmVudCA9IG1lc3NhZ2UuZXZlbnQsCiAgICAgICAgICBkYXRhID0gbWVzc2FnZS5kYXRhOwogICAgICB0aGlzLmFwcC5zZXJ2aWNlcy5yb29tLnNlbmRDb25maXJtYXRpb24odGhpcy5wZWVyLCB7CiAgICAgICAgZXZlbnQ6IGV2ZW50LAogICAgICAgIGFjdGlvbjogJ2FjdGl2ZScsCiAgICAgICAgZGF0YTogX29iamVjdFNwcmVhZCh7CiAgICAgICAgICBzd2FwSWQ6IHRoaXMuc3dhcElkCiAgICAgICAgfSwgZGF0YSkKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUm9vbTsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgUm9vbTs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.swap/Room.ts"],"names":["debug","SwapApp","Events","Room","app","swapId","participantPeer","online","services","room","connection","hasPeer","peer","_events","dispatch","err","console","warn","_attachSwapApp","required","eventName","handler","on","fromPeer","values","self","unsubscribe","message","getOnlineParticipant","setTimeout","sendMessage","event","data","sendConfirmation","action"],"mappings":"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","sourcesContent":["import debug from 'debug'\r\nimport SwapApp, { Events } from 'swap.app'\r\n\r\n\r\nclass Room {\r\n\r\n  swapId: string\r\n  peer: any\r\n  _events: any\r\n  app: any\r\n\r\n  // TODO add destroy method with all events unsubscribe (when swap is finished)\r\n\r\n  constructor(app, { swapId, participantPeer }) {\r\n    this.swapId           = swapId\r\n    this.peer  = participantPeer\r\n    this._events          = new Events()\r\n    this.app              = null\r\n\r\n    this._attachSwapApp(app)\r\n  }\r\n\r\n  _attachSwapApp(app) {\r\n    SwapApp.required(app)\r\n\r\n    this.app = app\r\n  }\r\n\r\n  getOnlineParticipant = () => {\r\n    try {\r\n      const online = this.app.services.room.connection.hasPeer(this.peer)\r\n\r\n      if (!online) {\r\n        this._events.dispatch('participant is offline', this.peer)\r\n      }\r\n\r\n      return online\r\n    } catch (err) {\r\n      console.warn(err)\r\n      return false\r\n    }\r\n  }\r\n\r\n  on(eventName, handler) {\r\n    this.app.services.room.on(eventName, ({ fromPeer, swapId, ...values }) => {\r\n      debug('swap.verbose:room')(`on ${eventName} from ${fromPeer} at swap ${swapId}`)\r\n      if (fromPeer === this.peer && swapId === this.swapId) {\r\n        handler(values)\r\n      }\r\n    })\r\n  }\r\n\r\n  once(eventName, handler) {\r\n    const self = this\r\n\r\n    this.app.services.room.on(eventName, function ({ fromPeer, swapId, ...values }) {\r\n      debug('swap.verbose:room')(`once ${eventName} from ${fromPeer} at swap ${swapId}`)\r\n      if (fromPeer === self.peer && swapId === self.swapId) {\r\n        this.unsubscribe()\r\n        handler(values)\r\n      }\r\n    })\r\n  }\r\n\r\n  sendMessage(message) {\r\n    if (!this.getOnlineParticipant()) {\r\n      setTimeout(() => {\r\n        this.sendMessage(message)\r\n      }, 3000)\r\n    }\r\n\r\n    const { event, data } = message\r\n\r\n    this.app.services.room.sendConfirmation(this.peer, {\r\n      event,\r\n      action: 'active',\r\n      data: {\r\n        swapId: this.swapId,\r\n        ...data,\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default Room\r\n"]}]}