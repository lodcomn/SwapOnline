{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\History\\Row\\Row.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\History\\Row\\Row.tsx","mtime":1614842914185},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/History/Row/Row.tsx"],"names":["React","Fragment","cx","connect","cssModules","styles","FormattedMessage","actions","constants","links","Link","ethToken","getFullOrigin","CommentRow","Tooltip","getCurrencyKey","Address","AddressFormat","isDark","localStorage","getItem","Row","tokensData","user","allowMultiple","props","type","activeFiat","getExchangeRate","toLowerCase","then","exCurrencyRate","setState","invoiceData","address","toAddress","amount","destAddress","fromAddress","invoice","walletData","core","getWallet","currency","balance","unconfirmedBalance","modals","open","Withdraw","hiddenCoinsList","onReady","payed","Confirm","onAccept","invoices","cancelInvoice","id","cancelled","history","uniqhash","confirmTx","link","multisign","Share","title","shareLink","push","direction","value","directionType","txType","parseFloat","Number","toFixed","toUpperCase","hash","hiddenList","viewType","dataInd","ind","state","comment","comments","returnDefaultComment","showFiat","Object","keys","forEach","key","includes","infoAboutCurrency","getFiatBalance","propsHash","confirmations","date","substrAddress","slice","txInfo","getFiat","paymentAddress","statusStyleName","statusStyleAmount","hasInvoiceButtons","txid","status","invoiceStatusClass","invoiceStatusText","txLink","isEthToken","name","number","invoiceNumber","label","contact","display","alignItems","Short","totalCount","handlePayInvoice","handleCancelInvoice","isHolder","handleSendConfirmLink","handleConfirmTx","PureComponent"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport cx from 'classnames'\r\nimport { connect } from 'redaction'\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './Row.scss'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport actions from 'redux/actions'\r\nimport { constants, links } from 'helpers'\r\nimport { Link } from 'react-router-dom'\r\nimport ethToken from 'helpers/ethToken'\r\nimport { getFullOrigin } from 'helpers/links'\r\n\r\nimport CommentRow from 'components/Comment/Comment'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport getCurrencyKey from 'helpers/getCurrencyKey'\r\nimport Address from 'components/ui/Address/Address'\r\nimport { AddressFormat } from 'domain/address'\r\n\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\n@connect(({\r\n  user: { tokensData },\r\n}) => ({\r\n  tokensData,\r\n}))\r\n@cssModules(styles, { allowMultiple: true })\r\n\r\nexport default class Row extends React.PureComponent<any, any> {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const { hash, type, hiddenList, invoiceData, viewType } = props\r\n    const dataInd = invoiceData && invoiceData.id\r\n    const ind = `${dataInd || hash}-${type}`\r\n\r\n    this.state = {\r\n      viewType: (viewType || 'transaction'),\r\n      exCurrencyRate: 0,\r\n      comment: actions.comments.returnDefaultComment(hiddenList, ind),\r\n      cancelled: false,\r\n      payed: false,\r\n      showFiat: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { type, tokensData } = this.props\r\n    /*\r\n    * request fiat balance if token have currency price\r\n    */\r\n    Object.keys(tokensData).forEach(key => {\r\n      if (key.includes(type)) {\r\n        if (tokensData[key].infoAboutCurrency) {\r\n          this.getFiatBalance(type)\r\n        } else {\r\n          this.setState({\r\n            showFiat: false\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  getFiatBalance = async (type) => {\r\n    const { activeFiat } = this.props\r\n\r\n    if (activeFiat) {\r\n      actions.user.getExchangeRate(type, activeFiat.toLowerCase()).then((exCurrencyRate) => {\r\n        this.setState(() => ({\r\n          exCurrencyRate,\r\n        }))\r\n      })\r\n    }\r\n  }\r\n\r\n  handlePayInvoice = async () => {\r\n    const {\r\n      invoiceData: {\r\n        type,\r\n        toAddress: address,\r\n        amount,\r\n        destAddress,\r\n        fromAddress,\r\n      },\r\n      invoiceData: invoice,\r\n    } = this.props\r\n\r\n    const walletData = actions.core.getWallet({\r\n      address,\r\n      currency: type,\r\n    })\r\n    if (walletData) {\r\n      const {\r\n        currency,\r\n        balance,\r\n        unconfirmedBalance\r\n      } = walletData\r\n      actions.modals.open(constants.modals.Withdraw, {\r\n        currency,\r\n        address,\r\n        balance,\r\n        unconfirmedBalance,\r\n        toAddress: destAddress || fromAddress,\r\n        amount,\r\n        invoice,\r\n        hiddenCoinsList: [],\r\n        onReady: () => {\r\n          this.setState({\r\n            payed: true,\r\n          })\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  handleCancelInvoice = async () => {\r\n    const { invoiceData } = this.props\r\n\r\n    actions.modals.open(constants.modals.Confirm, {\r\n      onAccept: async () => {\r\n        await actions.invoices.cancelInvoice(invoiceData.id)\r\n        this.setState({\r\n          cancelled: true,\r\n        })\r\n      },\r\n    })\r\n  }\r\n\r\n  handleSendConfirmLink = () => {\r\n    const {\r\n      history,\r\n      confirmTx: {\r\n        uniqhash,\r\n      },\r\n    } = this.props\r\n\r\n    const link = `${getFullOrigin()}${links.multisign}/btc/confirm/${uniqhash}`\r\n\r\n    // history.push(shareLink)\r\n    actions.modals.open(constants.modals.Share, {\r\n      link,\r\n      title: `Confirm multisignature transaction`,\r\n    })\r\n  }\r\n\r\n  handleConfirmTx = () => {\r\n    const {\r\n      history,\r\n      confirmTx: {\r\n        uniqhash,\r\n      },\r\n    } = this.props\r\n\r\n    const shareLink = `${links.multisign}/btc/confirm/${uniqhash}`\r\n\r\n    history.push(shareLink)\r\n  }\r\n\r\n  parseFloat = (direction, value, directionType, type) => {\r\n    const { txType } = this.props\r\n    switch (type) {\r\n      case 'btc (sms-protected)': type = 'BTC'\r\n        break\r\n      case 'btc (pin-protected)': type = 'BTC'\r\n        break\r\n      case 'btc (multisig)': type = 'BTC'\r\n        break\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {direction === directionType ?\r\n          <div styleName=\"amount\">{`+ ${parseFloat(Number(value).toFixed(5))}`} {type.toUpperCase()}\r\n            {txType === 'INVOICE' ? <span styleName=\"smallTooltip\"><Tooltip id='RowTooltipInvoice'>Invoice</Tooltip></span> : ''}\r\n          </div> :\r\n          <div styleName=\"amount\">{`- ${parseFloat(Number(value).toFixed(5))}`} {type.toUpperCase()}</div>\r\n        }\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      activeFiat,\r\n      address,\r\n      type,\r\n      direction,\r\n      value,\r\n      hash: propsHash,\r\n      confirmations,\r\n      txType,\r\n      invoiceData,\r\n      date,\r\n      confirmTx,\r\n    } = this.props\r\n\r\n    const {\r\n      showFiat,\r\n    } = this.state\r\n\r\n    const substrAddress = address ? `${address.slice(0, 2)}...${address.slice(-2)}` : ''\r\n    const hash = (invoiceData && invoiceData.txInfo) ? invoiceData.txInfo : propsHash\r\n\r\n    const { exCurrencyRate, cancelled, payed } = this.state\r\n    const getFiat = value * exCurrencyRate\r\n    \r\n    const paymentAddress = invoiceData\r\n      ? invoiceData.destAddress\r\n        ? invoiceData.destAddress\r\n        : invoiceData.fromAddress\r\n      : ''\r\n\r\n    const statusStyleName = cx('status', {\r\n      'in': direction === 'in',\r\n      'out': direction !== 'in',\r\n      'self': direction === 'self',\r\n    })\r\n    let statusStyleAmount = statusStyleName\r\n\r\n    if (invoiceData) {\r\n      statusStyleAmount = cx('status', {\r\n        'in': direction !== 'in',\r\n        'out': direction === 'in',\r\n        'self': direction === 'self',\r\n      })\r\n    }\r\n\r\n    const hasInvoiceButtons = (invoiceData && !invoiceData.txid && direction === 'in' && invoiceData.status === 'new' && !cancelled && !payed)\r\n    let invoiceStatusClass = 'confirm green'\r\n    let invoiceStatusText = <FormattedMessage id=\"HistoryRowInvoiceStatusNew\" defaultMessage=\"Пока не оплачен\" />\r\n    if (invoiceData && ((invoiceData.status === 'ready') || payed)) {\r\n      invoiceStatusClass = 'confirm'\r\n      invoiceStatusText = <FormattedMessage id=\"RowHistoryInvoicePayed\" defaultMessage=\"Оплачен\" />\r\n    }\r\n    if (invoiceData && ((invoiceData.status === 'cancelled') || cancelled)) {\r\n      invoiceStatusClass = 'confirm red'\r\n      invoiceStatusText = <FormattedMessage id=\"RowHistoryInvoiceCancelled\" defaultMessage=\"Отклонен\" />\r\n    }\r\n    /* eslint-disable */\r\n    let txLink = `/${getCurrencyKey(type, false)}/tx/${hash}`\r\n    if (ethToken.isEthToken({ name: type })) {\r\n      txLink = `/token/${type}/tx/${hash}`\r\n    }\r\n\r\n    if (txType === 'INVOICE' && invoiceData.uniqhash) {\r\n      txLink = `${links.invoice}/${invoiceData.uniqhash}`\r\n    }\r\n\r\n    if (txType === 'CONFIRM' && confirmTx.uniqhash) {\r\n      txLink = `${links.multisign}/btc/confirm/${confirmTx.uniqhash}`\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <tr styleName={`historyRow ${isDark ? 'dark' : ''}`}>\r\n          <td>\r\n            <div styleName={`${statusStyleAmount} circleIcon`}>\r\n              <div styleName='arrowWrap'>\r\n                <Link to={txLink}>\r\n                  <svg width='12' height='15' viewBox='0 0 12 15' fill='none'>\r\n                    <path d='M6 15V3' stroke='#8E9AA3' strokeWidth='2' />\r\n                    <path d='M11 7L6 2L1 7' stroke='#8E9AA3' strokeWidth='2' />\r\n                  </svg>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div styleName=\"historyInfo\">\r\n              <div>\r\n                {txType === 'INVOICE' ?\r\n                  <>\r\n                    <Link to={txLink}>\r\n                      <FormattedMessage\r\n                        id=\"RowHistoryInvoce\"\r\n                        defaultMessage=\"Invoice #{number}\"\r\n                        values={{\r\n                          number: `${invoiceData.id}-${invoiceData.invoiceNumber}`,\r\n                        }}\r\n                      />\r\n                    </Link>\r\n                    <div styleName={`${invoiceStatusClass} cell`}>\r\n                      {invoiceStatusText}\r\n                    </div>\r\n                  </> :\r\n                  <>\r\n                    <Link to={txLink}>\r\n                      {(txType === 'CONFIRM') ? (\r\n                        <FormattedMessage id=\"RowHistory_Confirm_Sending\" defaultMessage=\"Sent\" />\r\n                      ) : (\r\n                          <>\r\n                            {\r\n                              direction === 'in'\r\n                                ? <FormattedMessage id=\"RowHistory281\" defaultMessage=\"Received {address}\" values={{\r\n                                  address: substrAddress ? <span><FormattedMessage id=\"fromRow\" defaultMessage=\"from\" /> {substrAddress}</span> : \"\"\r\n                                }} />\r\n                                : (\r\n                                  direction !== 'self'\r\n                                    ? <FormattedMessage id=\"RowHistory282\" defaultMessage=\"Sent {address}\" values={{\r\n                                      address: substrAddress ? <span><FormattedMessage id=\"toRow\" defaultMessage=\"to\" /> {substrAddress}</span> : \"\"\r\n                                    }} />\r\n                                    : <FormattedMessage id=\"RowHistory283\" defaultMessage=\"Self\" />\r\n                                )\r\n                            }\r\n                          </>\r\n                        )}\r\n                    </Link>\r\n                    {(txType === 'CONFIRM') ? (\r\n                      <>\r\n                        {confirmTx.status === 'pending' && (\r\n                          <div styleName=\"unconfirmed cell\">\r\n                            <FormattedMessage id=\"RowHistory_Confirm_InProgress\" defaultMessage=\"Pending\" />\r\n                          </div>\r\n                        )}\r\n                        {confirmTx.status === 'reject' && (\r\n                          <div styleName=\"confirm red\">\r\n                            <FormattedMessage id=\"RowHistory_Confirm_Rejected\" defaultMessage=\"Rejected\" />\r\n                          </div>\r\n                        )}\r\n                        {confirmTx.status === 'cancel' && (\r\n                          <div styleName=\"confirm red\">\r\n                            <FormattedMessage id=\"RowHistory_Confirm_Cancelled\" defaultMessage=\"Canceled\" />\r\n                          </div>\r\n                        )}\r\n                      </>\r\n                    ) : (\r\n                        <div styleName={confirmations > 0 ? 'confirm cell' : 'unconfirmed cell'}>\r\n                          {confirmations > 0 ? confirmations > 6 ?\r\n                            <FormattedMessage id=\"RowHistory34\" defaultMessage=\"Received\" /> :\r\n                            <a href=\"#\"><FormattedMessage id=\"RowHistory341\" defaultMessage=\"Confirmed\" /></a> :\r\n                            <FormattedMessage id=\"RowHistory342\" defaultMessage=\"Unconfirmed\" />\r\n                          }\r\n                        </div>\r\n                      )}\r\n                  </>\r\n                }\r\n              </div>\r\n              <CommentRow\r\n                label={invoiceData && invoiceData.label}\r\n                date={date}\r\n                showComment={true}\r\n                commentKey={hash}\r\n              />\r\n              {invoiceData && invoiceData.contact &&\r\n                <div styleName='invoiceContactWrapper'>\r\n                  <FormattedMessage\r\n                    id=\"RowHistoryInvoiceContact\"\r\n                    defaultMessage='Contact:'\r\n                  />{' '}\r\n                  <span styleName='contact'>{invoiceData.contact}</span>\r\n                </div>\r\n              }\r\n\r\n              {txType === 'INVOICE' && direction === 'in' &&\r\n                <div styleName='addressWrapper'>\r\n                  <FormattedMessage\r\n                    id=\"RowHistoryInvoiceAddress\"\r\n                    defaultMessage='Payment address:'\r\n                  />{' '}\r\n                  <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Address address={paymentAddress} format={AddressFormat.Short} />\r\n                    <span styleName='requests'>({invoiceData.totalCount})</span>\r\n                  </div>\r\n                </div>\r\n              }\r\n            </div>\r\n            {hasInvoiceButtons &&\r\n              <div styleName=\"btnWrapper\">\r\n                <button onClick={this.handlePayInvoice}>\r\n                  <FormattedMessage id='RowHistoryPayInvoice' defaultMessage='Pay' />\r\n                </button>\r\n                <button onClick={this.handleCancelInvoice}>\r\n                  <FormattedMessage id='RowHistoryCancelInvoice' defaultMessage='Decline' />\r\n                </button>\r\n              </div>\r\n            }\r\n            {txType === 'CONFIRM' && confirmTx.status === 'pending' && (\r\n              <div styleName=\"confirmWrapper\">\r\n                {(confirmTx.isHolder) ? (\r\n                  <>\r\n                    <span>\r\n                      <FormattedMessage\r\n                        id=\"RowHistory_ConfirmTX_NeedConfirm\"\r\n                        defaultMessage=\"Confirmation of another participant is required\" />\r\n                    </span>\r\n                    <button onClick={this.handleSendConfirmLink}>\r\n                      <FormattedMessage\r\n                        id=\"RowHistory_ConfirmTX_SendLink\"\r\n                        defaultMessage=\"Send link\"\r\n                      />\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                    <>\r\n                      <span>\r\n                        <FormattedMessage\r\n                          id=\"RowHistory_ConfirmTX_NeedYourSign\"\r\n                          defaultMessage=\"Your signature is required\"\r\n                        />\r\n                      </span>\r\n                      <button onClick={this.handleConfirmTx}>\r\n                        <FormattedMessage\r\n                          id=\"RowHistory_ConfirmTX_Sign\"\r\n                          defaultMessage=\"Confirm\"\r\n                        />\r\n                      </button>\r\n                    </>\r\n                  )}\r\n              </div>\r\n            )}\r\n            <div styleName={statusStyleAmount}>\r\n              {invoiceData ? this.parseFloat(direction, value, 'out', type) : this.parseFloat(direction, value, 'in', type)}\r\n              {\r\n                showFiat\r\n                  ? <span styleName='amountUsd'>{`~${getFiat.toFixed(2)}`}{` `}{activeFiat}</span>\r\n                  : null\r\n              }\r\n            </div>\r\n            {/* <LinkTransaction type={type} styleName='address' hash={hash} >{hash}</LinkTransaction> */}\r\n          </td>\r\n        </tr>\r\n      </>\r\n    )\r\n  }\r\n}\r\n"]}]}