{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawBtcPin\\WithdrawBtcPin.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawBtcPin\\WithdrawBtcPin.tsx","mtime":1614850645804},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/WithdrawBtcPin/WithdrawBtcPin.tsx"],"names":["React","Fragment","PropTypes","helpers","actions","Link","connect","cssModules","styles","ownStyle","Modal","FieldLabel","Input","Button","FormattedMessage","injectIntl","defineMessages","redirectTo","lsDataCache","MnemonicInput","langPrefix","langs","title","id","defaultMessage","upMessage","upMessageMnemonic","labelYourPin","labelYourMnemonic","pinCodePlaceHolder","youNotEnterPin","pinCodeNotValid","useMnemonic","confirmButton","shipButton","cancelButton","mnemonicNote","serverIsOffline","mnemonicPlaceHolder","pincodeNote","usePinCode","errorMnemonicInvalid","errorMnemonicIncorrect","WithdrawBtcPin","user","btcData","btcMultisigPinData","allowMultiple","props","name","btcmultisig","enableWalletSMS","modals","close","data","callback","onClose","mnemonic","state","sendOptions","setState","isShipped","error","btc","validateMnemonicWords","trim","checkPinMnemonic","sendPinProtected","result","processSendResult","pinCode","length","serverOffline","password","wallet","amount","from","to","invoice","adminFee","beforeBalances","onReady","answer","txId","txInfoCache","senderAddress","receiverAddress","confirmed","push","key","time","transactions","pullTxBalances","loader","hide","getBalancePin","invoices","markInvoice","address","Function","txInfoUrl","getTxRouter","isMnemonicValid","step","intl","linked","all","formatMessage","handleSend","handleCancel","handleUseMnemonic","handleMnemonicChange","handleSendMnemonic","handleUsePassword","Component","string","object"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\nimport config from 'app-config'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from '../Styles/default.scss'\r\nimport ownStyle from './WithdrawBtcPin.scss'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Button from 'components/controls/Button/Button'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport typeforce from 'swap.app/util/typeforce'\r\nimport { inputReplaceCommaWithDot } from 'helpers/domUtils'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport moment from 'moment/moment'\r\nimport redirectTo from 'helpers/redirectTo'\r\nimport lsDataCache from 'helpers/lsDataCache'\r\nimport MnemonicInput from 'components/forms/MnemonicInput/MnemonicInput'\r\n\r\nconst langPrefix = `WithdrawPINProtected`\r\n\r\nconst langs = defineMessages({\r\n  title: {\r\n    id: `${langPrefix}_Title`,\r\n    defaultMessage: `Confirm withdraw transaction`,\r\n  },\r\n  upMessage: {\r\n    id: `${langPrefix}_UpMessage`,\r\n    defaultMessage: `Для подтверждения транзакции введите пароль`,\r\n  },\r\n  upMessageMnemonic: {\r\n    id: `${langPrefix}_UpMessageMnemonic`,\r\n    defaultMessage: `Для подтверждения транзакции введите секретную фразу (12 слов)`,\r\n  },\r\n  labelYourPin: {\r\n    id: `${langPrefix}_LabelYourPin`,\r\n    defaultMessage: `Your Pin-code`,\r\n  },\r\n  labelYourMnemonic: {\r\n    id: `${langPrefix}_LabelYourMnemonic`,\r\n    defaultMessage: `Your secret phrase`,\r\n  },\r\n  pinCodePlaceHolder: {\r\n    id: `${langPrefix}_PinCodePlaceholder`,\r\n    defaultMessage: `Enter your pin code`,\r\n  },\r\n  youNotEnterPin: {\r\n    id: `${langPrefix}_ErrorNoPinOrSmall`,\r\n    defaultMessage: `Пароль должен быть не менее 4х символов`,\r\n  },\r\n  pinCodeNotValid: {\r\n    id: `${langPrefix}_PinCodeNotValid`,\r\n    defaultMessage: `Вы указали не верный пароль`,\r\n  },\r\n  useMnemonic: {\r\n    id: `${langPrefix}_UseMnemonicButton`,\r\n    defaultMessage: `Использовать секретную фразу`,\r\n  },\r\n  confirmButton: {\r\n    id: `${langPrefix}_Confirm`,\r\n    defaultMessage: `Подтвердить транзакцию`,\r\n  },\r\n  shipButton: {\r\n    id: `${langPrefix}_ShipButton`,\r\n    defaultMessage: `Processing ...`,\r\n  },\r\n  cancelButton: {\r\n    id: `${langPrefix}_Cancel`,\r\n    defaultMessage: `Отмена`,\r\n  },\r\n  mnemonicNote: {\r\n    id: `${langPrefix}_MnemonicUseNote`,\r\n    defaultMessage: `В случае не доступности сервера авторизации, или если вы забыли пароль, Вы можете воспользоваться секретной фразой`,\r\n  },\r\n  serverIsOffline: {\r\n    id: `${langPrefix}_ServerOffline`,\r\n    defaultMessage: `Сервер авторизации не доступен. Попробуйте позже или используйте секретной фразу`,\r\n  },\r\n  mnemonicPlaceHolder: {\r\n    id: `${langPrefix}_MnemonicPlaceholder`,\r\n    defaultMessage: `Enter secret phrase (12 words)`,\r\n  },\r\n  pincodeNote: {\r\n    id: `${langPrefix}_PincodeNote`,\r\n    defaultMessage: `Так-же вы можете подтвердить транзакцию введя пароль`,\r\n  },\r\n  usePinCode: {\r\n    id: `${langPrefix}_ButtonUsePin`,\r\n    defaultMessage: `Использовать пароль`,\r\n  },\r\n  errorMnemonicInvalid: {\r\n    id: `${langPrefix}_ErrorMnemonicInvalid`,\r\n    defaultMessage: `Вы указали не валидную секретную фразу (12 слов)`,\r\n  },\r\n  errorMnemonicIncorrect: {\r\n    id: `${langPrefix}_ErrorMnemonicIncorrect`,\r\n    defaultMessage: `Указаная секретная фраза не подходит к этому кошельку`,\r\n  },\r\n})\r\n\r\n@injectIntl\r\n@connect(({ user: { btcData, btcMultisigPinData } }) => ({\r\n  btcData,\r\n  btcMultisigPinData,\r\n}))\r\n@cssModules({ ...styles, ...ownStyle }, { allowMultiple: true })\r\nexport default class WithdrawBtcPin extends React.Component<any, any> {\r\n  props: any\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    data: PropTypes.object,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const { wallet, invoice, sendOptions, beforeBalances } = props.data\r\n\r\n    this.state = {\r\n      pinCode: '',\r\n      error: false,\r\n      isShipped: false,\r\n      mnemonic: '',\r\n      isMnemonicValid: true,\r\n      serverOffline: false,\r\n      useMnemonic: false,\r\n    }\r\n  }\r\n\r\n  handleFinish = async () => {\r\n    const { name } = this.props\r\n\r\n    actions.btcmultisig.enableWalletSMS()\r\n    actions.modals.close(name)\r\n    if (this.props.data.callback) {\r\n      this.props.data.callback()\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { name, data, onClose } = this.props\r\n\r\n    if (typeof onClose === 'function') {\r\n      onClose()\r\n    }\r\n\r\n    if (typeof data.onClose === 'function') {\r\n      data.onClose()\r\n    }\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  handleSendMnemonic = async () => {\r\n    const { mnemonic } = this.state\r\n\r\n    const {\r\n      data: { sendOptions },\r\n    } = this.props\r\n\r\n    this.setState(\r\n      {\r\n        isShipped: true,\r\n        error: false,\r\n      },\r\n      async () => {\r\n        if (!mnemonic || !actions.btc.validateMnemonicWords(mnemonic.trim())) {\r\n          this.setState({\r\n            error: <FormattedMessage {...langs.errorMnemonicInvalid} />,\r\n            isShipped: false,\r\n          })\r\n          return\r\n        }\r\n        if (!actions.btcmultisig.checkPinMnemonic(mnemonic.trim())) {\r\n          this.setState({\r\n            error: <FormattedMessage {...langs.errorMnemonicIncorrect} />,\r\n            isShipped: false,\r\n          })\r\n          return\r\n        }\r\n\r\n        const result = await actions.btcmultisig.sendPinProtected({\r\n          ...sendOptions,\r\n          mnemonic,\r\n        })\r\n\r\n        this.processSendResult(result)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleSend = async () => {\r\n    const { pinCode } = this.state\r\n\r\n    const {\r\n      data: { sendOptions },\r\n    } = this.props\r\n\r\n    if (!pinCode || pinCode.length < 4) {\r\n      this.setState({\r\n        error: <FormattedMessage {...langs.youNotEnterPin} />,\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        error: false,\r\n        serverOffline: false,\r\n        isShipped: true,\r\n      },\r\n      async () => {\r\n        const result = await actions.btcmultisig.sendPinProtected({\r\n          ...sendOptions,\r\n          password: pinCode,\r\n        })\r\n        this.processSendResult(result)\r\n      }\r\n    )\r\n  }\r\n\r\n  processSendResult = async (result) => {\r\n    const {\r\n      data: {\r\n        wallet,\r\n        sendOptions: { amount, from, to },\r\n        invoice,\r\n        adminFee,\r\n        beforeBalances,\r\n        onReady,\r\n      },\r\n    } = this.props\r\n    if (result && result.answer === 'ok') {\r\n      const { txId } = result\r\n\r\n      // Сохраняем транзакцию в кеш\r\n      const txInfoCache = {\r\n        amount,\r\n        senderAddress: from,\r\n        receiverAddress: to,\r\n        confirmed: false,\r\n      }\r\n\r\n      lsDataCache.push({\r\n        key: `TxInfo_btc_${txId}`,\r\n        time: 3600,\r\n        data: txInfoCache,\r\n      })\r\n\r\n      helpers.transactions.pullTxBalances(txId, amount, beforeBalances, adminFee)\r\n\r\n      actions.loader.hide()\r\n      actions.btcmultisig.getBalancePin()\r\n      if (invoice) {\r\n        await actions.invoices.markInvoice(invoice.id, 'ready', txId, wallet.address)\r\n      }\r\n\r\n      if (onReady instanceof Function) {\r\n        onReady()\r\n      }\r\n\r\n      const txInfoUrl = helpers.transactions.getTxRouter('btc', txId)\r\n      redirectTo(txInfoUrl)\r\n    } else {\r\n      this.setState({\r\n        isShipped: false,\r\n        serverOffline: !result.error,\r\n        error: result.error || `Unknown error`,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleUseMnemonic = () => {\r\n    this.setState({\r\n      isShipped: false,\r\n      error: false,\r\n      useMnemonic: true,\r\n      serverOffline: false,\r\n      mnemonic: '',\r\n    })\r\n  }\r\n\r\n  handleMnemonicChange = (mnemonic) => {\r\n    this.setState({\r\n      mnemonic,\r\n    })\r\n  }\r\n\r\n  handleUsePassword = () => {\r\n    this.setState({\r\n      isShipped: false,\r\n      error: false,\r\n      useMnemonic: false,\r\n      serverOffline: false,\r\n      pinCode: '',\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      pinCode,\r\n      error,\r\n      isShipped,\r\n      mnemonic,\r\n      isMnemonicValid,\r\n      serverOffline,\r\n      useMnemonic,\r\n    } = this.state\r\n\r\n    const step = ''\r\n\r\n    const { name, intl } = this.props\r\n    const linked = Link.all(this, 'pinCode')\r\n\r\n    return (\r\n      <Modal name={name} title={`${intl.formatMessage(langs.title)}`}>\r\n        <div styleName=\"confirmPINModalHolder\">\r\n          {!useMnemonic && (\r\n            <Fragment>\r\n              <p styleName=\"centerInfoBlock\">\r\n                <strong>\r\n                  <FormattedMessage {...langs.upMessage} />\r\n                </strong>\r\n                <br />\r\n              </p>\r\n              <div styleName=\"highLevel\" className=\"ym-hide-content\">\r\n                <FieldLabel>\r\n                  <FormattedMessage {...langs.labelYourPin} />\r\n                </FieldLabel>\r\n                <Input\r\n                  styleName=\"input inputMargin25\"\r\n                  valueLink={linked.pinCode}\r\n                  type=\"password\"\r\n                  placeholder={`${intl.formatMessage(langs.pinCodePlaceHolder)}`}\r\n                  focusOnInit\r\n                />\r\n              </div>\r\n              {error && <div styleName=\"error rednotes\">{error}</div>}\r\n              <div styleName=\"buttonsHolder\">\r\n                <Button blue disabled={isShipped} onClick={this.handleSend}>\r\n                  {isShipped ? (\r\n                    <Fragment>\r\n                      <FormattedMessage {...langs.shipButton} />\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <FormattedMessage {...langs.confirmButton} />\r\n                    </Fragment>\r\n                  )}\r\n                </Button>\r\n                {/*\r\n                //@ */}\r\n                <Button blue disabled={isShipped} onClick={this.handleCancel}>\r\n                  <FormattedMessage {...langs.cancelButton} />\r\n                </Button>\r\n              </div>\r\n              <div styleName=\"mnemonicButtonHolder\">\r\n                {serverOffline && (\r\n                  <div styleName=\"error rednotes\">\r\n                    <FormattedMessage {...langs.serverIsOffline} />\r\n                  </div>\r\n                )}\r\n                <p>\r\n                  <FormattedMessage {...langs.mnemonicNote} />\r\n                </p>\r\n                <Button blue fullWidth disabled={isShipped} onClick={this.handleUseMnemonic}>\r\n                  <FormattedMessage {...langs.useMnemonic} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {useMnemonic && (\r\n            <Fragment>\r\n              <p styleName=\"centerInfoBlock\">\r\n                <strong>\r\n                  <FormattedMessage {...langs.upMessageMnemonic} />\r\n                </strong>\r\n                <br />\r\n              </p>\r\n              <div styleName=\"highLevel\" className=\"ym-hide-content\">\r\n                <FieldLabel>\r\n                  <FormattedMessage {...langs.labelYourMnemonic} />\r\n                </FieldLabel>\r\n                <MnemonicInput onChange={this.handleMnemonicChange} fullWidth={true} />\r\n              </div>\r\n              {error && <div styleName=\"error rednotes\">{error}</div>}\r\n              <div styleName=\"buttonsHolder\">\r\n                <Button blue disabled={isShipped} onClick={this.handleSendMnemonic}>\r\n                  {isShipped ? (\r\n                    <Fragment>\r\n                      <FormattedMessage {...langs.shipButton} />\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <FormattedMessage {...langs.confirmButton} />\r\n                    </Fragment>\r\n                  )}\r\n                </Button>\r\n                {/*\r\n                //@ */}\r\n                <Button blue disabled={isShipped} onClick={this.handleCancel}>\r\n                  <FormattedMessage {...langs.cancelButton} />\r\n                </Button>\r\n              </div>\r\n              <div styleName=\"pinButtonHolder\">\r\n                <p>\r\n                  <FormattedMessage {...langs.pincodeNote} />\r\n                </p>\r\n                <Button blue fullWidth disabled={isShipped} onClick={this.handleUsePassword}>\r\n                  <FormattedMessage {...langs.usePinCode} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}