{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\getWalletLink.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\getWalletLink.ts","mtime":1614851997455},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gQHRzLW5vY2hlY2sKaW1wb3J0IGdldEN1cnJlbmN5S2V5IGZyb20gJy4vZ2V0Q3VycmVuY3lLZXknOwppbXBvcnQgZXRoVG9rZW4gZnJvbSAnLi9ldGhUb2tlbic7CmltcG9ydCBhY3Rpb25zIGZyb20gJ3JlZHV4L2FjdGlvbnMnOwoKdmFyIGdldFdhbGxldExpbmsgPSBmdW5jdGlvbiBnZXRXYWxsZXRMaW5rKGN1cnJlbmN5LCBjaGVja0FkZHJlc3MpIHsKICB2YXIgb3VyV2FsbGV0cyA9IGZhbHNlOwogIHZhciBpc0V0aFRva2VuID0gZXRoVG9rZW4uaXNFdGhUb2tlbih7CiAgICBuYW1lOiBjdXJyZW5jeQogIH0pOwogIHZhciBwcmVmaXggPSBnZXRDdXJyZW5jeUtleShjdXJyZW5jeSwgZmFsc2UpOwoKICBpZiAoaXNFdGhUb2tlbikgewogICAgLy9ACiAgICBvdXJXYWxsZXRzID0gYWN0aW9ucy5ldGguZ2V0QWxsTXlBZGRyZXNzZXMoKTsKICB9IGVsc2UgewogICAgaWYgKGFjdGlvbnNbcHJlZml4XSAmJiB0eXBlb2YgYWN0aW9uc1twcmVmaXhdLmdldEFsbE15QWRkcmVzc2VzID09PSAnZnVuY3Rpb24nKSB7CiAgICAgIG91cldhbGxldHMgPSBhY3Rpb25zW3ByZWZpeF0uZ2V0QWxsTXlBZGRyZXNzZXMoKTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnNvbGUud2FybigiRnVuY3Rpb24gZ2V0QWxsTXlBZGRyZXNzZXMgbm90IGRlZmluZWQgKGN1cnJlbmN5ICIuY29uY2F0KGN1cnJlbmN5LCAiKSIpKTsKICAgIH0KICB9CgogIGlmICghb3VyV2FsbGV0cykgcmV0dXJuIGZhbHNlOyAvL0AKCiAgdmFyIG91ciA9IGNoZWNrQWRkcmVzcy5maWx0ZXIoZnVuY3Rpb24gKGFkZHJlc3MpIHsKICAgIHJldHVybiBvdXJXYWxsZXRzLmluY2x1ZGVzKGFkZHJlc3MudG9Mb3dlckNhc2UoKSk7CiAgfSk7CgogIGlmIChvdXIubGVuZ3RoKSB7CiAgICB2YXIgdGFyZ2V0V2FsbGV0ID0gb3VyWzBdOwogICAgcmV0dXJuIGlzRXRoVG9rZW4gPyAiL3Rva2VuLyIuY29uY2F0KGN1cnJlbmN5LnRvVXBwZXJDYXNlKCksICIvIikuY29uY2F0KHRhcmdldFdhbGxldCkgOiAiLyIuY29uY2F0KHByZWZpeC50b1VwcGVyQ2FzZSgpLCAiLyIpLmNvbmNhdCh0YXJnZXRXYWxsZXQpOwogIH0KCiAgcmV0dXJuIGZhbHNlOwp9OwoKZXhwb3J0IGRlZmF1bHQgZ2V0V2FsbGV0TGluazs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/helpers/getWalletLink.ts"],"names":["getCurrencyKey","ethToken","actions","getWalletLink","currency","checkAddress","ourWallets","isEthToken","name","prefix","eth","getAllMyAddresses","console","warn","our","filter","address","includes","toLowerCase","length","targetWallet","toUpperCase"],"mappings":"AAAA;AACA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAWC,YAAX,EAA4B;AAChD,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAMC,UAAU,GAAGN,QAAQ,CAACM,UAAT,CAAoB;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAApB,CAAnB;AACA,MAAMK,MAAM,GAAGT,cAAc,CAACI,QAAD,EAAW,KAAX,CAA7B;;AAEA,MAAIG,UAAJ,EAAgB;AACd;AACAD,IAAAA,UAAU,GAAGJ,OAAO,CAACQ,GAAR,CAAYC,iBAAZ,EAAb;AACD,GAHD,MAGO;AACL,QAAIT,OAAO,CAACO,MAAD,CAAP,IACC,OAAOP,OAAO,CAACO,MAAD,CAAP,CAAgBE,iBAAvB,KAA6C,UADlD,EAEE;AACAL,MAAAA,UAAU,GAAGJ,OAAO,CAACO,MAAD,CAAP,CAAgBE,iBAAhB,EAAb;AACD,KAJD,MAIO;AACLC,MAAAA,OAAO,CAACC,IAAR,4DAAiET,QAAjE;AACD;AACF;;AAED,MAAI,CAACE,UAAL,EAAiB,OAAO,KAAP,CAlB+B,CAoBhD;;AACA,MAAMQ,GAAG,GAAGT,YAAY,CAACU,MAAb,CAAoB,UAACC,OAAD;AAAA,WAAaV,UAAU,CAACW,QAAX,CAAoBD,OAAO,CAACE,WAAR,EAApB,CAAb;AAAA,GAApB,CAAZ;;AAEA,MAAIJ,GAAG,CAACK,MAAR,EAAgB;AACd,QAAMC,YAAY,GAAGN,GAAG,CAAC,CAAD,CAAxB;AAEA,WAAQP,UAAD,oBACKH,QAAQ,CAACiB,WAAT,EADL,cAC+BD,YAD/B,eAECX,MAAM,CAACY,WAAP,EAFD,cAEyBD,YAFzB,CAAP;AAGD;;AAED,SAAO,KAAP;AACD,CAhCD;;AAmCA,eAAejB,aAAf","sourcesContent":["// @ts-nocheck\r\nimport getCurrencyKey from './getCurrencyKey'\r\nimport ethToken from './ethToken'\r\nimport actions from 'redux/actions'\r\n\r\n\r\nconst getWalletLink = (currency, checkAddress) => {\r\n  let ourWallets = false\r\n  const isEthToken = ethToken.isEthToken({ name: currency })\r\n  const prefix = getCurrencyKey(currency, false)\r\n\r\n  if (isEthToken) {\r\n    //@\r\n    ourWallets = actions.eth.getAllMyAddresses()\r\n  } else {\r\n    if (actions[prefix]\r\n      && typeof actions[prefix].getAllMyAddresses === 'function'\r\n    ) {\r\n      ourWallets = actions[prefix].getAllMyAddresses()\r\n    } else {\r\n      console.warn(`Function getAllMyAddresses not defined (currency ${currency})`)\r\n    }\r\n  }\r\n\r\n  if (!ourWallets) return false\r\n\r\n  //@\r\n  const our = checkAddress.filter((address) => ourWallets.includes(address.toLowerCase()))\r\n\r\n  if (our.length) {\r\n    const targetWallet = our[0]\r\n\r\n    return (isEthToken) ?\r\n      `/token/${currency.toUpperCase()}/${targetWallet}`\r\n      : `/${prefix.toUpperCase()}/${targetWallet}`\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n\r\nexport default getWalletLink\r\n"]}]}