{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\OfferModal\\AddOffer\\AddOffer.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\OfferModal\\AddOffer\\AddOffer.tsx","mtime":1614850799442},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/OfferModal/AddOffer/AddOffer.tsx"],"names":["React","Component","connect","actions","helpers","constants","Link","config","BigNumber","styles","cssModules","Select","ExchangeRateGroup","SelectGroup","Button","Toggle","Tooltip","FormattedMessage","minAmountOffer","coinsWithDynamicFee","TurboIcon","turboSwap","mathConstants","high_precision","low_precision","isNumberStringFormatCorrect","number","stringified","String","firstDotIndex","indexOf","lastDotIndex","lastIndexOf","isDark","localStorage","getItem","AddOffer","currencies","addSelectedItems","user","ethData","btcData","ghostData","nextData","tokensData","items","tokenItems","Object","keys","map","k","allowMultiple","props","state","sellCurrency","buyCurrency","correctMinAmountSell","correctMinAmountBuy","eth","getBalance","ethBalance","setState","currency","concat","filter","item","toUpperCase","balance","unconfirmedBalance","currentBalance","isNaN","isLessThan","plus","balanceWithoutFee","ethToken","isEthToken","name","minus","minimalestAmountForSell","finalBalance","isGreaterThan","toString","isTokenSell","isTokenBuy","includes","estimateFeeValue","method","speed","minimalestAmountForBuy","getExchangeRate","exchangeRateSell","exchangeRateBuy","div","dp","ROUND_CEIL","exchangeRate","Promise","resolve","reject","value","buyAmount","sellAmount","isTurbo","switching","checkPair","checkBalance","updateExchangeRate","handleBuyAmountChange","handleSellAmountChange","getFee","undefined","handleAnyChange","type","manualRate","isSending","newSellAmount","newExchangeRate","dividedBy","newBuyAmount","multipliedBy","tokenDecimals","toLowerCase","ROUND_DOWN","console","error","onNext","handleSellCurrencySelect","pairs","selectPair","selected","check","initialData","isWidget","window","widgetERC20Tokens","length","forEach","key","erc20token","isPartial","btc","checkEthBalance","sellInputValueIsOk","minNeedEthBalance","needEthBalance","linked","all","minimalAmountSell","minimalAmountBuy","isShowSwapModeSwitch","process","env","MAINNET","isTurboAllowed","isAssetSupported","isDisabled","pipe","changeBalance","handleBuyCurrencySelect","handleExchangeRateChange","handleManualRate","textAlign","p","ethAmount","values","index","Boolean","handleNext"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Component } from 'react'\r\n\r\nimport { connect } from 'redaction'\r\nimport actions from 'redux/actions'\r\nimport helpers, { constants } from 'helpers'\r\n\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport config from 'app-config'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\n\r\nimport styles from './AddOffer.scss'\r\nimport cssModules from 'react-css-modules'\r\n\r\nimport Select from './Select/Select'\r\nimport ExchangeRateGroup from './ExchangeRateGroup/ExchangeRateGroup'\r\nimport SelectGroup from './SelectGroup/SelectGroup'\r\n\r\nimport Button from 'components/controls/Button/Button'\r\nimport Toggle from 'components/controls/Toggle/Toggle'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport minAmountOffer from 'helpers/constants/minAmountOffer'\r\nimport coinsWithDynamicFee from 'helpers/constants/coinsWithDynamicFee'\r\nimport TurboIcon from 'shared/components/ui/TurboIcon/TurboIcon'\r\nimport turboSwap from 'common/helpers/turboSwap'\r\n\r\n\r\nconst mathConstants = {\r\n  high_precision: 10e-8,\r\n  low_precision: 10e-5,\r\n}\r\n\r\nconst isNumberStringFormatCorrect = number => {\r\n  const stringified = String(number)\r\n\r\n  const firstDotIndex = stringified.indexOf('.')\r\n  const lastDotIndex = stringified.lastIndexOf('.')\r\n\r\n  // first and last dot positions match, so it has only one dot\r\n  return firstDotIndex === lastDotIndex\r\n}\r\n\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n@connect(\r\n  ({\r\n    currencies,\r\n    addSelectedItems,\r\n    user: { ethData, btcData, ghostData, nextData, tokensData },\r\n  }) => ({\r\n    currencies: currencies.items,\r\n    addSelectedItems: currencies.addSelectedItems,\r\n    items: [ethData, btcData, ghostData, nextData],\r\n    tokenItems: [...Object.keys(tokensData).map(k => (tokensData[k]))],\r\n  })\r\n)\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class AddOffer extends Component<any, any> {\r\n\r\n  isSending: any\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const { items, tokenItems, initialData } = props\r\n\r\n    if (config && config.isWidget) {\r\n      if (window.widgetERC20Tokens && Object.keys(window.widgetERC20Tokens).length) {\r\n        Object.keys(window.widgetERC20Tokens).forEach((key) => {\r\n          minAmountOffer[key] = 1\r\n        })\r\n      } else {\r\n        minAmountOffer[config.erc20token] = 1\r\n      }\r\n    }\r\n\r\n    const { exchangeRate, buyAmount, sellAmount, buyCurrency, sellCurrency } = initialData || {}\r\n\r\n    this.state = {\r\n      balance: null,\r\n      isTokenSell: false,\r\n      isTokenBuy: false,\r\n      isPartial: true,\r\n      isTurbo: false,\r\n      isSending: false,\r\n      manualRate: true,\r\n      buyAmount: buyAmount || '',\r\n      sellAmount: sellAmount || '',\r\n      exchangeRate: exchangeRate || 1,\r\n      buyCurrency: buyCurrency || 'btc',\r\n      sellCurrency: sellCurrency || 'eth',\r\n      minimalestAmountForBuy: minAmountOffer[buyCurrency] || minAmountOffer.btc,\r\n      minimalestAmountForSell: minAmountOffer[sellCurrency] || minAmountOffer.eth,\r\n      ethBalance: 0,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { sellCurrency, buyCurrency, value } = this.state\r\n\r\n    actions.pairs.selectPair(sellCurrency)\r\n    this.checkBalance(sellCurrency)\r\n    this.updateExchangeRate(sellCurrency, buyCurrency)\r\n    this.isEthToken(sellCurrency, buyCurrency)\r\n    this.getFee()\r\n    this.checkEthBalance()\r\n  }\r\n\r\n  getFee = () => {\r\n    const { sellCurrency, buyCurrency } = this.state\r\n\r\n    this.correctMinAmountSell(sellCurrency)\r\n    this.correctMinAmountBuy(buyCurrency)\r\n  }\r\n\r\n  checkEthBalance = async () => {\r\n    const ethBalance = await actions.eth.getBalance()\r\n    this.setState({\r\n      ethBalance,\r\n    })\r\n  }\r\n\r\n  checkBalance = async (sellCurrency) => {\r\n    await actions[sellCurrency].getBalance(sellCurrency)\r\n\r\n    const { items, tokenItems } = this.props\r\n\r\n    const currency = items.concat(tokenItems)\r\n      .filter(item => item.currency === sellCurrency.toUpperCase())[0]\r\n\r\n    let { balance, unconfirmedBalance } = currency\r\n\r\n    balance = new BigNumber(balance)\r\n    unconfirmedBalance = new BigNumber(unconfirmedBalance)\r\n\r\n    const currentBalance = unconfirmedBalance.isNaN() && unconfirmedBalance.isLessThan(0)\r\n      ? balance.plus(unconfirmedBalance)\r\n      : balance\r\n\r\n    const balanceWithoutFee = (helpers.ethToken.isEthToken({ name: this.state.sellCurrency }))\r\n      ? currentBalance\r\n      : currentBalance.minus(this.state.minimalestAmountForSell)\r\n\r\n    const finalBalance = balanceWithoutFee.isGreaterThan(0) ? balanceWithoutFee : new BigNumber(0)\r\n\r\n    this.setState({\r\n      balance: finalBalance.toString(),\r\n    })\r\n  }\r\n\r\n  isEthToken = (sellCurrency, buyCurrency) => {\r\n    const isTokenSell = helpers.ethToken.isEthToken({ name: sellCurrency })\r\n    const isTokenBuy = helpers.ethToken.isEthToken({ name: buyCurrency })\r\n\r\n    this.setState(() => ({\r\n      isTokenBuy,\r\n      isTokenSell,\r\n    }))\r\n  }\r\n\r\n  correctMinAmountSell = async (sellCurrency) => {\r\n    if (coinsWithDynamicFee.includes(sellCurrency) && !helpers.ethToken.isEthToken({ name: sellCurrency })) {\r\n      const minimalestAmountForSell = await helpers[sellCurrency].estimateFeeValue({ method: 'swap', speed: 'fast' })\r\n      this.setState({\r\n        minimalestAmountForSell,\r\n      })\r\n    }\r\n  }\r\n\r\n  correctMinAmountBuy = async (buyCurrency) => {\r\n    if (coinsWithDynamicFee.includes(buyCurrency)) {\r\n      const minimalestAmountForBuy = await helpers[buyCurrency].estimateFeeValue({ method: 'swap', speed: 'fast' })\r\n      this.setState({\r\n        minimalestAmountForBuy,\r\n      })\r\n    }\r\n  }\r\n\r\n  updateExchangeRate = async (sellCurrency, buyCurrency) => {\r\n    const exchangeRateSell: any = await actions.user.getExchangeRate(sellCurrency, 'usd')\r\n    const exchangeRateBuy: any = await actions.user.getExchangeRate(buyCurrency, 'usd')\r\n\r\n    const exchangeRate = sellCurrency === 'swap' || buyCurrency === 'swap'\r\n      ? await actions.user.getExchangeRate(sellCurrency, buyCurrency)\r\n      : new BigNumber(exchangeRateSell).div(exchangeRateBuy).dp(4, BigNumber.ROUND_CEIL)\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.setState({ exchangeRate }, () => resolve(true))\r\n    })\r\n  }\r\n\r\n  handleBuyCurrencySelect = async ({ value }) => {\r\n    const { buyCurrency, sellCurrency, buyAmount, sellAmount } = this.state\r\n\r\n    this.setState({\r\n      isTurbo: false,\r\n    })\r\n\r\n    if (sellCurrency === value) {\r\n      this.switching()\r\n    } else {\r\n      this.checkPair(sellCurrency)\r\n      await this.checkBalance(sellCurrency)\r\n      await this.updateExchangeRate(sellCurrency, value)\r\n\r\n      this.setState(() => ({\r\n        buyCurrency: value,\r\n      }))\r\n\r\n      if (sellAmount > 0 || buyAmount > 0) {\r\n        this.handleBuyAmountChange(buyAmount)\r\n        this.handleSellAmountChange(sellAmount)\r\n      }\r\n      this.isEthToken(sellCurrency, value)\r\n      this.getFee()\r\n    }\r\n  }\r\n\r\n  handleSellCurrencySelect = async ({ value }) => {\r\n    const { buyCurrency, sellCurrency, sellAmount, buyAmount } = this.state\r\n\r\n    this.setState({\r\n      isTurbo: false,\r\n    })\r\n\r\n    if (buyCurrency === value) {\r\n      this.switching()\r\n    } else {\r\n      this.checkPair(value)\r\n      await this.checkBalance(value)\r\n      await this.updateExchangeRate(value, buyCurrency)\r\n\r\n      this.setState(() => ({\r\n        sellCurrency: value,\r\n      }))\r\n\r\n      if (sellAmount > 0 || buyAmount > 0) {\r\n        this.handleBuyAmountChange(buyAmount)\r\n        this.handleSellAmountChange(sellAmount)\r\n      }\r\n      this.isEthToken(value, buyCurrency)\r\n      this.getFee()\r\n    }\r\n  }\r\n\r\n  handleExchangeRateChange = (value) => {\r\n    let { buyAmount, sellAmount } = this.state\r\n\r\n    if (!isNumberStringFormatCorrect(value)) {\r\n      return undefined\r\n    }\r\n\r\n    this.handleAnyChange({\r\n      type: 'rate',\r\n      value,\r\n    })\r\n\r\n    return value\r\n  }\r\n\r\n  handleBuyAmountChange = (value) => {\r\n    if (!isNumberStringFormatCorrect(value)) {\r\n      return undefined\r\n    }\r\n\r\n    this.handleAnyChange({\r\n      type: 'buy',\r\n      value,\r\n    })\r\n\r\n    return value\r\n  }\r\n\r\n  handleSellAmountChange = (value) => {\r\n    if (!isNumberStringFormatCorrect(value)) {\r\n      return undefined\r\n    }\r\n\r\n    this.handleAnyChange({\r\n      type: 'sell',\r\n      value,\r\n    })\r\n\r\n    return value\r\n  }\r\n\r\n  handleAnyChange = ({ type, value }) => {\r\n    const { manualRate, exchangeRate, buyAmount, sellAmount, buyCurrency, sellCurrency } = this.state\r\n\r\n    if (type === 'sell' || type === 'buy') {\r\n      if (!this.isSending) {\r\n        this.setState({ isSending: true })\r\n      }\r\n    }\r\n\r\n    /*\r\n        XR = S / B\r\n        B = S / XR\r\n        S = XR * B\r\n    */\r\n\r\n    switch (type) {\r\n      case 'sell': {\r\n        /*\r\n          S++ -> XR++ -> B (Manual Rate)\r\n          S++ -> XR -> B++ (Auto Rate)\r\n        */\r\n\r\n        const newSellAmount = new BigNumber(value || 0)\r\n\r\n        if (manualRate) {\r\n          const newExchangeRate = new BigNumber(value).dividedBy(buyAmount)\r\n\r\n          this.setState({\r\n            exchangeRate: newExchangeRate.isGreaterThan(0) ? newExchangeRate.toString() : '',\r\n            sellAmount: newSellAmount.toString(),\r\n          })\r\n        } else {\r\n          const newBuyAmount = newSellAmount.multipliedBy(exchangeRate || 0)\r\n            .dp(constants.tokenDecimals[buyCurrency.toLowerCase()], BigNumber.ROUND_DOWN)\r\n\r\n          this.setState({\r\n            sellAmount: newSellAmount.toString(),\r\n            buyAmount: newBuyAmount.toString(),\r\n          })\r\n        }\r\n        break\r\n      }\r\n\r\n      case 'buy': {\r\n        /*\r\n          B++ -> XR-- -> S (Manual Rate)\r\n          B++ -> XR -> S++ (Auto Rate)\r\n        */\r\n\r\n        const newBuyAmount = new BigNumber(value || 0)\r\n\r\n        if (manualRate) {\r\n          const newExchangeRate = new BigNumber(sellAmount).dividedBy(value)\r\n\r\n          this.setState({\r\n            exchangeRate: newExchangeRate.isGreaterThan(0) ? newExchangeRate.toString() : '',\r\n            buyAmount: newBuyAmount.toString(),\r\n          })\r\n        } else {\r\n          const newSellAmount = newBuyAmount.dividedBy(exchangeRate || 0)\r\n            .dp(constants.tokenDecimals[sellCurrency.toLowerCase()], BigNumber.ROUND_DOWN)\r\n\r\n          this.setState({\r\n            sellAmount: newSellAmount.toString(),\r\n            buyAmount: newBuyAmount.toString(),\r\n          })\r\n        }\r\n\r\n        break\r\n      }\r\n\r\n      case 'rate': {\r\n        if (new BigNumber(sellAmount).isGreaterThan(mathConstants.high_precision)) {\r\n          // If user has set sell value change buy value\r\n          /*\r\n            XR++ -> S -> B--\r\n          */\r\n\r\n          const newBuyAmount = new BigNumber(sellAmount).dividedBy(value || 0)\r\n\r\n          this.setState({\r\n            buyAmount: newBuyAmount.toString(),\r\n          })\r\n        } else {\r\n          // Otherwise change sell value if buy value is not null\r\n          /*\r\n            XR++ -> S++ -> B\r\n          */\r\n\r\n          const newSellAmount = new BigNumber(value || 0).multipliedBy(buyAmount)\r\n\r\n          this.setState({\r\n            sellAmount: newSellAmount.toString(),\r\n          })\r\n        }\r\n\r\n        break\r\n      }\r\n      default:\r\n        console.error('Unknown type')\r\n        break\r\n    }\r\n  }\r\n\r\n  handleNext = () => {\r\n    const { onNext } = this.props\r\n\r\n    // actions.analytics.dataEvent('orderbook-addoffer-click-next-button')\r\n    onNext(this.state)\r\n  }\r\n\r\n  changeBalance = (value) => {\r\n    this.setState(() => ({\r\n      sellAmount: new BigNumber(value).toString(),\r\n    }))\r\n\r\n    this.handleSellAmountChange(value)\r\n  }\r\n\r\n  handleManualRate = (value) => {\r\n    if (!value) {\r\n      const { sellCurrency } = this.state\r\n      this.handleSellCurrencySelect({ value: sellCurrency })\r\n    }\r\n    this.setState(() => ({ manualRate: value }))\r\n  }\r\n\r\n  switching = async () => {\r\n    const { sellCurrency, buyCurrency, sellAmount, buyAmount } = this.state\r\n\r\n    this.setState({\r\n      sellAmount: '',\r\n      buyAmount: '',\r\n      sellCurrency: buyCurrency,\r\n      buyCurrency: sellCurrency,\r\n    }, async () => {\r\n      await this.checkBalance(buyCurrency)\r\n      await this.updateExchangeRate(buyCurrency, sellCurrency)\r\n\r\n      actions.pairs.selectPair(buyCurrency)\r\n\r\n      this.isEthToken(this.state.sellCurrency, this.state.buyCurrency)\r\n      this.getFee()\r\n    })\r\n  }\r\n\r\n  checkPair = (value) => {\r\n    const selected = actions.pairs.selectPair(value)\r\n    const check = selected.map(item => item.value).includes(this.state.buyCurrency)\r\n\r\n    if (!check) {\r\n      this.setState(() => ({\r\n        buyCurrency: selected[0].value,\r\n      }))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { currencies, tokenItems, addSelectedItems } = this.props\r\n    const { \r\n      exchangeRate, buyAmount,\r\n      sellAmount, buyCurrency,\r\n      sellCurrency, minimalestAmountForSell,\r\n      minimalestAmountForBuy, balance,\r\n      ethBalance, manualRate,\r\n      isPartial, isTurbo, isTokenSell,\r\n      isTokenBuy, sellInputValueIsOk\r\n    } = this.state\r\n\r\n    // @to-do - fetch eth miner fee for swap\r\n    const minNeedEthBalance = 0.004\r\n    const needEthBalance = (new BigNumber(ethBalance).isLessThan(minNeedEthBalance) && (isTokenBuy || isTokenSell))\r\n    const linked = Link.all(this, 'exchangeRate', 'buyAmount', 'sellAmount')\r\n\r\n    const minimalAmountSell = !isTokenSell\r\n      ? coinsWithDynamicFee.includes(sellCurrency) ? minimalestAmountForSell : minAmountOffer[buyCurrency]\r\n      : 0.001\r\n\r\n    const minimalAmountBuy = !isTokenBuy\r\n      ? coinsWithDynamicFee.includes(buyCurrency) ? minimalestAmountForBuy : minAmountOffer[buyCurrency]\r\n      : 0.001\r\n\r\n    // temporary: hide turboswaps on mainnet\r\n    const isShowSwapModeSwitch = !process.env.MAINNET\r\n\r\n    const isTurboAllowed = turboSwap.isAssetSupported(buyCurrency) && turboSwap.isAssetSupported(sellCurrency)\r\n\r\n    const isDisabled = !exchangeRate\r\n      || !buyAmount && !sellAmount\r\n      || new BigNumber(sellAmount).isGreaterThan(balance)\r\n      || new BigNumber(sellAmount).isLessThan(minimalAmountSell)\r\n      || new BigNumber(buyAmount).isLessThan(minimalAmountBuy)\r\n      || needEthBalance\r\n\r\n    if (linked.sellAmount.value !== '' && linked.sellAmount.value > 0) {\r\n      linked.sellAmount.check((value) => (new BigNumber(value).isGreaterThan(minimalAmountSell)),\r\n        <span>\r\n          <FormattedMessage id=\"transaction444\" defaultMessage=\"Sell amount must be greater than \" />\r\n          {' '}\r\n          {minimalAmountSell}\r\n        </span>\r\n      )\r\n    }\r\n    if (linked.buyAmount.value !== '' && linked.sellAmount.value > 0) {\r\n      linked.buyAmount.check((value) => (new BigNumber(value).isGreaterThan(minimalAmountBuy)),\r\n        <span>\r\n          <FormattedMessage id=\"transaction450\" defaultMessage=\"Buy amount must be greater than \" />\r\n          {' '}\r\n          {minimalAmountBuy}\r\n        </span>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div styleName={`wrapper addOffer ${isDark ? '--dark' : ''} `}>\r\n        <div styleName=\"offerTitle\">\r\n          <FormattedMessage id=\"offerMessageToUser\" defaultMessage=\"You must be online all the time, otherwise your order will not be visible to other users\" />\r\n        </div>\r\n\r\n        <SelectGroup\r\n          isDark={isDark}\r\n          label={<FormattedMessage id=\"addoffer381\" defaultMessage=\"Sell\" />}\r\n          tooltip={<FormattedMessage id=\"partial462\" defaultMessage=\"The amount you have on swap.online or an external wallet that you want to exchange\" />}\r\n          inputValueLink={linked.sellAmount.pipe(this.handleSellAmountChange)}\r\n          dontDisplayError\r\n          selectedValue={sellCurrency}\r\n          onSelect={this.handleSellCurrencySelect}\r\n          id=\"sellAmount\"\r\n          balance={balance}\r\n          currencies={currencies}\r\n          placeholder=\"0.00000000\"\r\n        />\r\n        <Select\r\n          isDark={isDark}\r\n          changeBalance={this.changeBalance}\r\n          balance={balance}\r\n          switching={this.switching}\r\n        />\r\n\r\n        <SelectGroup\r\n          isDark={isDark}\r\n          label={<FormattedMessage id=\"addoffer396\" defaultMessage=\"Buy\" />}\r\n          tooltip={<FormattedMessage id=\"partial478\" defaultMessage=\"The amount you will receive after the exchange\" />}\r\n          inputValueLink={linked.buyAmount.pipe(this.handleBuyAmountChange)}\r\n          dontDisplayError\r\n          selectedValue={buyCurrency}\r\n          onSelect={this.handleBuyCurrencySelect}\r\n          id=\"buyAmount\"\r\n          currencies={addSelectedItems}\r\n          placeholder=\"0.00000000\"\r\n        />\r\n\r\n        <div styleName=\"exchangeRate\">\r\n          <ExchangeRateGroup\r\n            label={<FormattedMessage id=\"addoffer406\" defaultMessage=\"Exchange rate\" />}\r\n            inputValueLink={linked.exchangeRate.pipe(this.handleExchangeRateChange)}\r\n            disabled={!manualRate}\r\n            id=\"exchangeRate\"\r\n            placeholder=\"Enter exchange rate amount\"\r\n            buyCurrency={buyCurrency}\r\n            sellCurrency={sellCurrency}\r\n          />\r\n        </div>\r\n\r\n        <div styleName=\"controlsToggles\">\r\n          <div styleName=\"toggle\">\r\n            {/*\r\n            //@ */}\r\n            <Toggle checked={manualRate} onChange={this.handleManualRate} />\r\n            <div styleName=\"toggleText\">\r\n              <FormattedMessage id=\"AddOffer418\" defaultMessage=\"Custom exchange rate\" />\r\n              {' '}\r\n              <Tooltip id=\"add264\">\r\n                <FormattedMessage id=\"add408\" defaultMessage=\"To change the exchange rate \" />\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n\r\n          <div styleName=\"toggle\">\r\n            {/*\r\n            //@ */}\r\n            <Toggle checked={isPartial} onChange={() => this.setState((state) => ({ isPartial: !state.isPartial }))} />\r\n            <div styleName=\"toggleText\">\r\n              <FormattedMessage id=\"AddOffer423\" defaultMessage=\"Enable partial fills\" />\r\n              {' '}\r\n              <Tooltip id=\"add547\">\r\n                <div style={{ textAlign: 'center' }} >\r\n                  <FormattedMessage\r\n                    id=\"addOfferPartialTooltip\"\r\n                    defaultMessage={`You will receive exchange requests or the {p} amount less than the total amount you want {p} sell. For example you want to sell 1 BTC,\r\n                      other users can send you exchange requests {p}for 0.1, 0.5 BTC`}\r\n                    values={{ p: <br /> }}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </div>\r\n          </div>\r\n\r\n          {isShowSwapModeSwitch &&\r\n            <div styleName=\"toggle\">\r\n              <div styleName=\"toggleText\">\r\n                <FormattedMessage id=\"AtomicSwap_Title\" defaultMessage=\"Atomic swap\" />\r\n              </div>\r\n              {/*\r\n              //@ */}\r\n              <Toggle checked={isTurbo} isDisabled={!isTurboAllowed} onChange={() => this.setState((state) => ({ isTurbo: !state.isTurbo }))} />\r\n              <div styleName=\"toggleText\">\r\n                <TurboIcon />\r\n                <span>\r\n                  <FormattedMessage id=\"TurboSwap_Title\" defaultMessage=\"Turbo swap\" />\r\n                  &nbsp;\r\n                  <a href=\"https://github.com/swaponline/MultiCurrencyWallet/blob/master/docs/TURBO_SWAPS.md\" target=\"_blank\">(?)</a>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n        {needEthBalance && (\r\n          <div styleName=\"Error\">\r\n            {isTokenBuy && (\r\n              <FormattedMessage\r\n                id=\"CreateOffer_BuyToken_NeedEth\"\r\n                defaultMessage=\"Для покупки {buyCurrency} вам нужно иметь {ethAmount} ETH для оплаты коммисии\"\r\n                values={{\r\n                  buyCurrency: buyCurrency.toUpperCase(),\r\n                  ethAmount: minNeedEthBalance,\r\n                }}\r\n              />\r\n            )}\r\n            {isTokenSell && (\r\n              <FormattedMessage\r\n                id=\"CreateOffer_SellToken_NeedEth\"\r\n                defaultMessage=\"Для продажи {sellCurrency} вам нужно иметь {ethAmount} ETH для оплаты коммисии\"\r\n                values={{\r\n                  sellCurrency: sellCurrency.toUpperCase(),\r\n                  ethAmount: minNeedEthBalance,\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n        {\r\n          Object.values(linked).map((item, index) => Boolean(item.error)\r\n            ? <div key={index} styleName=\"Error\">{item.error}</div>\r\n            : ''\r\n          )\r\n        }\r\n        <Button styleName=\"button\" fullWidth blue disabled={isDisabled} onClick={this.handleNext}>\r\n          <FormattedMessage id=\"AddOffer396\" defaultMessage=\"Next\" />\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}]}