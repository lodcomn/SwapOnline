{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\OfferModal\\ConfirmOffer\\ExchangeRate\\ExchangeRate.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\OfferModal\\ConfirmOffer\\ExchangeRate\\ExchangeRate.tsx","mtime":1614842914010},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIjsKaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZiI7Cgp2YXIgX2RlYywgX2NsYXNzOwoKZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9CgppbXBvcnQgUmVhY3QsIHsgUHVyZUNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnOwppbXBvcnQgc3R5bGVzIGZyb20gJy4vRXhjaGFuZ2VSYXRlLnNjc3MnOwppbXBvcnQgUm93IGZyb20gJy4uL1Jvdy9Sb3cnOwppbXBvcnQgVmFsdWUgZnJvbSAnLi4vVmFsdWUvVmFsdWUnOwppbXBvcnQgeyBGb3JtYXR0ZWRNZXNzYWdlLCBpbmplY3RJbnRsLCBkZWZpbmVNZXNzYWdlcyB9IGZyb20gJ3JlYWN0LWludGwnOwppbXBvcnQgQmlnTnVtYmVyIGZyb20gJ2JpZ251bWJlci5qcyc7CnZhciB0aXRsZSA9IGRlZmluZU1lc3NhZ2VzKHsKICBFeGNoYW5nZVJhdGU6IHsKICAgIGlkOiAnRXhjaGFuZ2VSYXRlMTInLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJFeGNoYW5nZSBSYXRlIgogIH0KfSk7CnZhciBFeGNoYW5nZVJhdGUgPSAoX2RlYyA9IENTU01vZHVsZXMoc3R5bGVzKSwgaW5qZWN0SW50bChfY2xhc3MgPSBfZGVjKF9jbGFzcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1B1cmVDb21wb25lbnQpIHsKICBfaW5oZXJpdHMoRXhjaGFuZ2VSYXRlLCBfUHVyZUNvbXBvbmVudCk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoRXhjaGFuZ2VSYXRlKTsKCiAgZnVuY3Rpb24gRXhjaGFuZ2VSYXRlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEV4Y2hhbmdlUmF0ZSk7CgogICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEV4Y2hhbmdlUmF0ZSwgW3sKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLAogICAgICAgICAgc2VsbEN1cnJlbmN5ID0gX3RoaXMkcHJvcHMuc2VsbEN1cnJlbmN5LAogICAgICAgICAgYnV5Q3VycmVuY3kgPSBfdGhpcyRwcm9wcy5idXlDdXJyZW5jeSwKICAgICAgICAgIGV4Y2hhbmdlUmF0ZSA9IF90aGlzJHByb3BzLmV4Y2hhbmdlUmF0ZSwKICAgICAgICAgIGludGwgPSBfdGhpcyRwcm9wcy5pbnRsOwogICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUm93LCB7CiAgICAgICAgdGl0bGU6IGludGwuZm9ybWF0TWVzc2FnZSh0aXRsZS5FeGNoYW5nZVJhdGUpCiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFZhbHVlLCB7CiAgICAgICAgdmFsdWU6IDEsCiAgICAgICAgY3VycmVuY3k6IGJ1eUN1cnJlbmN5CiAgICAgIH0pLCAnICcsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgc3R5bGVOYW1lOiAiZXF1YWwiCiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICBpZDogIkV4Y2hhbmdlUmF0ZTE0IiwKICAgICAgICBkZWZhdWx0TWVzc2FnZTogIj0iCiAgICAgIH0pKSwgJyAnLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChWYWx1ZSwgewogICAgICAgIHZhbHVlOiBuZXcgQmlnTnVtYmVyKGV4Y2hhbmdlUmF0ZSkudG9TdHJpbmcoKSwKICAgICAgICBjdXJyZW5jeTogc2VsbEN1cnJlbmN5CiAgICAgIH0pKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBFeGNoYW5nZVJhdGU7Cn0oUHVyZUNvbXBvbmVudCkpIHx8IF9jbGFzcykgfHwgX2NsYXNzKTsKZXhwb3J0IHsgRXhjaGFuZ2VSYXRlIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/OfferModal/ConfirmOffer/ExchangeRate/ExchangeRate.tsx"],"names":["React","PureComponent","CSSModules","styles","Row","Value","FormattedMessage","injectIntl","defineMessages","BigNumber","title","ExchangeRate","id","defaultMessage","props","sellCurrency","buyCurrency","exchangeRate","intl","formatMessage","toString"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,cAAvC,QAA6D,YAA7D;AACA,OAAOC,SAAP,MAAsB,cAAtB;AAGA,IAAMC,KAAK,GAAGF,cAAc,CAAC;AAC3BG,EAAAA,YAAY,EAAE;AACZC,IAAAA,EAAE,EAAE,gBADQ;AAEZC,IAAAA,cAAc;AAFF;AADa,CAAD,CAA5B;IASqBF,Y,WADpBT,UAAU,CAACC,MAAD,C,EADVI,U;;;;;;;;;;;;;WAGC,kBAAS;AAAA,wBACmD,KAAKO,KADxD;AAAA,UACCC,YADD,eACCA,YADD;AAAA,UACeC,WADf,eACeA,WADf;AAAA,UAC4BC,YAD5B,eAC4BA,YAD5B;AAAA,UAC0CC,IAD1C,eAC0CA,IAD1C;AAEP,0BACE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAEA,IAAI,CAACC,aAAL,CAAmBT,KAAK,CAACC,YAAzB;AAAZ,sBACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,CAAd;AAAiB,QAAA,QAAQ,EAAEK;AAA3B,QADF,EAEG,GAFH,eAGE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,gBAArB;AAAsC,QAAA,cAAc,EAAC;AAArD,QADF,CAHF,EAMG,GANH,eAOE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE,IAAIP,SAAJ,CAAcQ,YAAd,EAA4BG,QAA5B,EAAd;AAAsD,QAAA,QAAQ,EAAEL;AAAhE,QAPF,CADF;AAWD;;;;EAduCd,a;SAArBU,Y","sourcesContent":["import React, { PureComponent } from 'react'\r\n\r\nimport CSSModules from 'react-css-modules'\r\nimport styles from './ExchangeRate.scss'\r\n\r\nimport Row from '../Row/Row'\r\nimport Value from '../Value/Value'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n\r\nconst title = defineMessages({\r\n  ExchangeRate: {\r\n    id: 'ExchangeRate12',\r\n    defaultMessage: `Exchange Rate`,\r\n  },\r\n})\r\n\r\n@injectIntl\r\n@CSSModules(styles)\r\nexport default class ExchangeRate extends PureComponent<any, any> {\r\n  render() {\r\n    const { sellCurrency, buyCurrency, exchangeRate, intl } = this.props\r\n    return (\r\n      <Row title={intl.formatMessage(title.ExchangeRate)}>\r\n        <Value value={1} currency={buyCurrency} />\r\n        {' '}\r\n        <div styleName=\"equal\">\r\n          <FormattedMessage id=\"ExchangeRate14\" defaultMessage=\"=\" />\r\n        </div>\r\n        {' '}\r\n        <Value value={new BigNumber(exchangeRate).toString()} currency={sellCurrency} />\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n"]}]}