{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.app\\SwapApp.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.app\\SwapApp.ts","mtime":1614842913746},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.app/SwapApp.ts"],"names":["constants","StorageFactory","Collection","SwapApp","options","network","NETWORKS","TESTNET","env","services","swaps","Array","flows","_addEnv","_addServices","_addSwaps","_addFlows","whitelistBtc","inited","web3provider","_swapAppInstance","Error","web3","initFlows","swap","attachedSwaps","isExistByKey","id","append","filter","isFinished","coin","address","participant","toLowerCase","indexOf","Object","keys","forEach","name","values","ENV","storage","getWeb3","service","_serviceName","SERVICES","includes","_attachSwapApp","_addService","serviceName","_waitRelationsResolve","_tryInitService","_swapName","COINS","toUpperCase","_initSwap","_addSwap","Flow","flowName","getName","getFromName","getToName","flow","_addFlow","MAINNET","metamask","isEnabled","isConnected","getAddress","auth","accounts","eth","participantMetamaskAddress","cb","waitInit","isInited","setTimeout","makeShared","forceFreshSetup","required","app","isSwapApp","errorMessage","is"],"mappings":"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","sourcesContent":["import constants from './constants'\r\nimport StorageFactory from './StorageFactory'\r\nimport Collection from './Collection'\r\nimport Swap, { Flow } from '../swap.swap'\r\nimport SwapAuth from '../swap.auth'\r\nimport SwapInterface from './SwapInterface'\r\nimport ServiceInterface from './ServiceInterface'\r\nimport SwapRoom from 'swap.room'\r\nimport SwapOrders from 'swap.orders'\r\n\r\n\r\ninterface SwapAppServices {\r\n  auth?: SwapAuth,\r\n  room?: SwapRoom,\r\n  orders?: SwapOrders,\r\n}\r\n\r\ninterface SwapAppOptions {\r\n  network?: string,\r\n  env: any,\r\n  services: SwapAppServices | Array<ServiceInterface>,\r\n  swaps: Array<SwapInterface>,\r\n  flows: Array<Flow>,\r\n  whitelistBtc?: Array<string>,\r\n}\r\n\r\nclass SwapApp {\r\n  // White list BTC. Dont wait confirm\r\n  private whitelistBtc: Array<string> = [\r\n    'mzgKwRsfYLgApStDLwcN9Y6ce9qYPnTJNx', // @eneeseene testnet\r\n    'mst6jZKU973gB6Jhei4WQFg381zb86UgBQ', // @eneeseene testnet btc address\r\n    '17Hf3chwyWeNokLfuBcxEtpRYaYiU5RWBt', // swap.bot mainnet btc address\r\n  ]\r\n  private attachedSwaps: Collection = new Collection()\r\n\r\n  options: any = {}\r\n  inited: boolean = false\r\n  network: any\r\n  env: any\r\n  services: SwapAppServices = {}\r\n  swaps: Array<SwapInterface>\r\n  flows: Array<Flow>\r\n  \r\n\r\n  static _swapAppInstance = null\r\n\r\n  /**\r\n   *\r\n   * @param {object}  options\r\n   * @param {string}  options.network\r\n   * @param {object}  options.env\r\n   * @param {array}   options.services\r\n   * @param {array}   options.swaps\r\n   * @param {array}   options.flows\r\n   */\r\n  constructor(options: SwapAppOptions) {\r\n    this.options = options\r\n    this.network = options.network || constants.NETWORKS.TESTNET\r\n    this.env = {}\r\n    this.services = {}\r\n\r\n    this.swaps = new Array()\r\n    this.flows = new Array()\r\n\r\n    this._addEnv(options.env || {})\r\n    this._addServices(options.services || {})\r\n\r\n    this._addSwaps(options.swaps || [])\r\n    this._addFlows(options.flows || [])\r\n\r\n    if (options.whitelistBtc) this.whitelistBtc = options.whitelistBtc\r\n\r\n    this.inited = true\r\n  }\r\n\r\n  static onInit(cb) {\r\n    const waitInit = () => {\r\n      if (SwapApp._swapAppInstance && SwapApp._swapAppInstance.isInited()) {\r\n        cb()\r\n      } else {\r\n        setTimeout(waitInit, 100)\r\n      }\r\n    }\r\n    waitInit()\r\n  }\r\n\r\n  isInited() {\r\n    return this.inited\r\n  }\r\n\r\n  static init(options: SwapAppOptions, makeShared: boolean = false) {\r\n    if (makeShared) {\r\n      SwapApp._swapAppInstance = new SwapApp(options)\r\n      return SwapApp._swapAppInstance\r\n    }\r\n    return new SwapApp(options)\r\n  }\r\n\r\n  setWeb3Provider(web3provider) {\r\n    if (!SwapApp._swapAppInstance) {\r\n      throw new Error(`Shared instance not initialized. Use SwapApp.setup() first.`)\r\n    }\r\n    SwapApp._swapAppInstance.env.web3 = web3provider\r\n    SwapApp._swapAppInstance.initFlows()\r\n  }\r\n\r\n  initFlows() {\r\n    this._addSwaps(this.options.swaps || [])\r\n    this._addFlows(this.options.flows || [])\r\n  }\r\n\r\n  static setup(options, forceFreshSetup = false) {\r\n    if (SwapApp._swapAppInstance && !forceFreshSetup) {\r\n      throw new Error(`Shared instance already initialized. Use SwapApp.shared() to access it.`)\r\n    }\r\n    SwapApp._swapAppInstance = new SwapApp(options)\r\n  }\r\n\r\n  static shared() {\r\n    SwapApp.required(\r\n      SwapApp._swapAppInstance,\r\n      `Shared instance not initialized. Call SwapApp.setup(config) first.`\r\n    )\r\n    return SwapApp._swapAppInstance\r\n  }\r\n\r\n  attachSwap(swap: Swap) {\r\n    if (!this.attachedSwaps.isExistByKey(swap.id)) {\r\n      this.attachedSwaps.append(swap, swap.id)\r\n    }\r\n  }\r\n\r\n  getActiveSwaps(): Swap[] {\r\n    return this.attachedSwaps.filter((swap: Swap) => {\r\n      return (swap === null)\r\n        ? false\r\n        : !swap.isFinished()\r\n    })\r\n  }\r\n\r\n  getSwapsByAddress(coin: string, address: string): Swap[] {\r\n    return this.attachedSwaps.filter((swap: Swap) => {\r\n      if (swap\r\n        && swap.participant\r\n        && swap.participant[coin.toLowerCase()]\r\n        && swap.participant[coin.toLowerCase()].address\r\n        && swap.participant[coin.toLowerCase()].address.toLowerCase() === address.toLowerCase()\r\n        && !swap.isFinished()\r\n      ) return true\r\n      return false\r\n    })\r\n  }\r\n\r\n  // Check address is whitelisted\r\n  isWhitelistBtc(address: string) {\r\n    return this.whitelistBtc.indexOf(address) !== -1\r\n  }\r\n  // Configure -------------------------------------------------------- /\r\n\r\n  _addEnv(env) {\r\n    Object.keys(env).forEach((name) => {\r\n      if (Object.values(constants.ENV).indexOf(name) < 0) {\r\n        throw new Error(`SwapApp.addEnv(): Only ${Object.values(constants.ENV)} available`)\r\n      }\r\n    })\r\n\r\n    env.storage = new StorageFactory(env.storage)\r\n\r\n    if (!env.getWeb3) {\r\n      env.getWeb3 = () => {\r\n        return this.env.web3\r\n      }\r\n    }\r\n    this.env = env\r\n  }\r\n\r\n  _addService(service) {\r\n    if (!service._serviceName) {\r\n      throw new Error('SwapApp service should contain \"_serviceName\" property')\r\n    }\r\n\r\n    if (!Object.values(constants.SERVICES).includes(service._serviceName)) {\r\n      throw new Error(\r\n        `SwapApp service should contain \"_serviceName\" property should be one of ${Object.values(\r\n          constants.SERVICES\r\n        )}, got \"${service._serviceName}\"`\r\n      )\r\n    }\r\n\r\n    service._attachSwapApp(this)\r\n    this.services[service._serviceName] = service\r\n  }\r\n\r\n  _addServices(services) {\r\n    // add service to app by _serviceName\r\n    services.forEach((service) => this._addService(service))\r\n    // spy expects\r\n    Object.keys(this.services).forEach((serviceName) =>\r\n      this.services[serviceName]._waitRelationsResolve()\r\n    )\r\n    // init services\r\n    Object.keys(this.services).forEach((serviceName) =>\r\n      this.services[serviceName]._tryInitService()\r\n    )\r\n  }\r\n\r\n  _addSwap(swap) {\r\n    if (!swap._swapName) {\r\n      throw new Error('SwapApp swap should contain \"_swapName\" property')\r\n    }\r\n\r\n    if (!Object.values(constants.COINS).includes(swap._swapName.toUpperCase())) {\r\n      throw new Error(\r\n        `SwapApp swap should contain \"_swapName\" property should be one of ${Object.values(\r\n          constants.COINS\r\n        )}, got \"${swap._swapName.toUpperCase()}\"`\r\n      )\r\n    }\r\n\r\n    this.swaps[swap._swapName] = swap\r\n\r\n    if (typeof swap._initSwap === 'function') {\r\n      swap._initSwap(this)\r\n    }\r\n  }\r\n\r\n  _addSwaps(swaps) {\r\n    swaps.forEach((swap) => {\r\n      this._addSwap(swap)\r\n    })\r\n  }\r\n\r\n  _addFlow(Flow) {\r\n    const flowName = Flow.getName()\r\n\r\n    if (flowName !== 'TurboMaker' && flowName !== 'TurboTaker') {\r\n      if (\r\n        !Object.values(constants.COINS).includes(Flow.getFromName()) ||\r\n        !Object.values(constants.COINS).includes(Flow.getToName())\r\n      ) {\r\n        throw new Error(\r\n          `SwapApp flow \"_flowName\" property should contain only: ${Object.values(\r\n            constants.COINS\r\n          )}. Got: \"${flowName.toUpperCase()}\"`\r\n        )\r\n      }\r\n    }\r\n\r\n    this.flows[flowName] = Flow\r\n  }\r\n\r\n  _addFlows(flows) {\r\n    flows.forEach((flow) => {\r\n      this._addFlow(flow)\r\n    })\r\n  }\r\n\r\n  // Public methods --------------------------------------------------- /\r\n\r\n  isMainNet() {\r\n    return this.network.toLowerCase() === constants.NETWORKS.MAINNET\r\n  }\r\n\r\n  isTestNet() {\r\n    return this.network.toLowerCase() === constants.NETWORKS.TESTNET\r\n  }\r\n\r\n  isSwapApp() {\r\n    return true\r\n  }\r\n\r\n  getMyEthAddress() {\r\n    return this.env.metamask && this.env.metamask.isEnabled() && this.env.metamask.isConnected()\r\n      ? this.env.metamask.getAddress()\r\n      : this.services.auth.accounts.eth.address\r\n  }\r\n\r\n  getParticipantEthAddress(swap) {\r\n    const { participant, participantMetamaskAddress } = swap\r\n    return participantMetamaskAddress ? participantMetamaskAddress : participant.eth.address\r\n  }\r\n\r\n  static is(app) {\r\n    return app && app.isSwapApp && app.isSwapApp() && app instanceof SwapApp\r\n  }\r\n\r\n  static required(app, errorMessage = ``) {\r\n    if (!SwapApp.is(app)) {\r\n      throw new Error(`SwapApp required, got: ${app}. ${errorMessage}`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default SwapApp\r\n"]}]}