{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\common\\utils\\coin\\next.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\common\\utils\\coin\\next.ts","mtime":1614842913722},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/common/utils/coin/next.ts"],"names":["apiLooper","BigNumber","next","default","TESTNET","MAINNET","DUST","getApiNext","network","name","servers","nextExplorer","getApiCustom","nextExplorerCustom","getCore","fetchBalance","options","address","API_ENDPOINT","NETWORK","get","checkStatus","answer","balance","undefined","e","ignoreErrors","reportErrors","onSuccess","onFail","console","log","then","fetchUnspents","cacheResponse","broadcastTx","txRaw","post","body","rawtx","fetchTx","hash","txId","fees","rest","multipliedBy","fetchTxInfo","hasAdminFee","txInfo_","vin","vout","senderAddress","addr","amount","value","toNumber","afterBalance","adminFee","adminOutput","filter","out","scriptPubKey","addresses","eq","afterOutput","length","txInfo","receiverAddress","confirmed","confirmations","minerFee","dividedBy","minerFeeCurrency","outputs","map","checkWithdraw","scriptAddress","txs","query","res","valueSat","txid","calculateTxSize","speed","_unspents","unspents","txOut","fixed","defaultTxSize","txIn","txSize","estimateFeeValue","_feeRate","feeRate","inSatoshis","_txSize","method","calculatedFeeValue","maximum","div","dp","ROUND_HALF_EVEN","plus","finalFeeValue","toString","networks","mainnet","messagePrefix","bip32","pubKeyHash","scriptHash","wif","testnet"],"mappings":"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","sourcesContent":["\r\nimport apiLooper from '../apiLooper'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport * as next from 'bitcoinjs-lib'\r\n\r\n// Use front API config\r\nimport { default as TESTNET } from '../../../front/config/testnet/api'\r\nimport { default as MAINNET } from '../../../front/config/testnet/api'\r\n\r\nconst DUST = 546\r\n\r\n// Help function - get api by network\r\nconst getApiNext = (network) => {\r\n  return {\r\n    name: `apiNextMain`,\r\n    servers: (network === `MAINNET`)\r\n      ? MAINNET.nextExplorer\r\n      : TESTNET.nextExplorer\r\n  }\r\n}\r\n\r\nconst getApiCustom = (network) => {\r\n  return {\r\n    name: `apiNextCustom`,\r\n    servers: (network === `MAINNET`)\r\n      ? MAINNET.nextExplorerCustom\r\n      : TESTNET.nextExplorerCustom\r\n  }\r\n}\r\n\r\nconst getCore = () => {\r\n  return next\r\n}\r\n\r\nconst fetchBalance = (options) => {\r\n  const {\r\n    address,\r\n    API_ENDPOINT, // nextExplorerCustom\r\n    NETWORK,\r\n  } = options\r\n\r\n\r\n  return apiLooper.get(API_ENDPOINT || getApiNext(NETWORK), `/address/${address}`, {\r\n    checkStatus: (answer) => {\r\n      try {\r\n        if (answer && answer.balance !== undefined) return true\r\n      } catch (e) { /* */ }\r\n      return false\r\n    },\r\n    ignoreErrors: true,\r\n    reportErrors: (answer, onSuccess, onFail) => {\r\n      console.log('>>>> fetchBalance reportErrors')\r\n      console.log(answer)\r\n      onSuccess({ balance: 0 })\r\n      return true\r\n    },\r\n  }).then(({ balance }) => balance)\r\n}\r\n\r\nconst fetchUnspents = (options) => {\r\n  const {\r\n    address,\r\n    API_ENDPOINT, // nextExplorerCustom\r\n    NETWORK,\r\n  } = options\r\n\r\n  return apiLooper.get(API_ENDPOINT || getApiCustom(NETWORK), `/addr/${address}/utxo`, { cacheResponse: 5000 })\r\n}\r\n\r\nconst broadcastTx = (options) => {\r\n  const {\r\n    txRaw,\r\n    API_ENDPOINT, // nextExplorer\r\n    NETWORK,\r\n  } = options\r\n\r\n  return apiLooper.post(API_ENDPOINT || getApiNext(NETWORK), `/sendrawtransaction`, {\r\n    body: {\r\n      rawtx: txRaw,\r\n    },\r\n  })\r\n}\r\n\r\nconst fetchTx = (options) => {\r\n  const {\r\n    hash,\r\n    cacheResponse,\r\n    API_ENDPOINT, // nextExplorer\r\n    NETWORK,\r\n  } = options\r\n\r\n  return apiLooper.get(API_ENDPOINT || getApiNext(NETWORK), `/tx/${hash}`, {\r\n    cacheResponse,\r\n    checkStatus: (answer) => {\r\n      try {\r\n        if (answer && answer.txId !== undefined) return true\r\n      } catch (e) { /* */ }\r\n      return false\r\n    },\r\n  }).then(({ fees, ...rest }) => ({\r\n    fees: new BigNumber(fees).multipliedBy(1e8),\r\n    ...rest,\r\n  }))\r\n}\r\n\r\n/** to-to - in front has mark (not-working) - need recheck, may be will be fixed **/\r\nconst fetchTxInfo = (options) => {\r\n  const {\r\n    hash,\r\n    cacheResponse,\r\n    API_ENDPOINT, // nextExplorer\r\n    hasAdminFee,\r\n    NETWORK,\r\n  } = options\r\n\r\n  return fetchTx({\r\n    hash,\r\n    cacheResponse,\r\n    API_ENDPOINT,\r\n    NETWORK,\r\n  }).then((txInfo_ : any) => {\r\n    return { ...txInfo_ } /** yes - ^^^^ not working - заглужка **/\r\n    const { vin, vout, ...rest } = txInfo_\r\n    const senderAddress = vin ? vin[0].addr : null\r\n    const amount = vout ? new BigNumber(vout[0].value).toNumber() : null\r\n\r\n    let afterBalance = vout && vout[1] ? new BigNumber(vout[1].value).toNumber() : null\r\n    let adminFee: any = false\r\n\r\n    if (hasAdminFee) {\r\n      const adminOutput = vout.filter((out) => (\r\n        out.scriptPubKey.addresses\r\n        && out.scriptPubKey.addresses[0] === hasAdminFee.address\r\n        && !(new BigNumber(out.value).eq(amount))\r\n      ))\r\n\r\n      const afterOutput = vout.filter((out) => (\r\n        out.addresses\r\n        && out.addresses[0] !== hasAdminFee.address\r\n        && out.addresses[0] !== senderAddress\r\n      ))\r\n\r\n      if (afterOutput.length) {\r\n        afterBalance = new BigNumber(afterOutput[0].value).toNumber()\r\n      }\r\n\r\n      if (adminOutput.length) {\r\n        adminFee = new BigNumber(adminOutput[0].value).toNumber()\r\n      }\r\n    }\r\n\r\n    const txInfo = {\r\n      amount,\r\n      afterBalance,\r\n      senderAddress,\r\n      receiverAddress: vout ? vout[0].scriptPubKey.addresses : null,\r\n      confirmed: !!(rest.confirmations),\r\n      minerFee: rest.fees.dividedBy(1e8).toNumber(),\r\n      adminFee,\r\n      minerFeeCurrency: 'NEXT',\r\n      outputs: vout.map((out) => ({\r\n        amount: new BigNumber(out.value).toNumber(),\r\n        address: out.scriptPubKey.addresses || null,\r\n      })),\r\n      ...rest,\r\n    }\r\n\r\n    return txInfo\r\n  })\r\n}\r\n\r\nconst checkWithdraw = (options) => {\r\n  const {\r\n    scriptAddress,\r\n    API_ENDPOINT, // nextExplorerCustom\r\n    NETWORK,\r\n  } = options\r\n\r\n  return apiLooper.get(API_ENDPOINT || getApiCustom(NETWORK), `/txs/${scriptAddress}`, {\r\n    checkStatus: (answer) => {\r\n      try {\r\n        if (answer && answer.txs !== undefined) return true\r\n      } catch (e) { /* */ }\r\n      return false\r\n    },\r\n    query: 'next_balance',\r\n  }).then((res : any) => {\r\n    if (res.txs.length > 1\r\n      && res.txs[0].vout.length\r\n    ) {\r\n      const address = res.txs[0].vout[0].scriptPubKey.addresses[0]\r\n      const amount = res.txs[0].vout[0].valueSat\r\n\r\n      const {\r\n        txid,\r\n      } = res.txs[0]\r\n      return {\r\n        address,\r\n        txid,\r\n        amount,\r\n      }\r\n    }\r\n    return false\r\n  })\r\n}\r\n\r\nconst calculateTxSize = async (options) => {\r\n  const {\r\n    speed,\r\n    unspents: _unspents,\r\n    address,\r\n    txOut = 2,\r\n    fixed,\r\n    NETWORK,\r\n  } = options\r\n\r\n  const defaultTxSize = 400\r\n\r\n  if (fixed) {\r\n    return defaultTxSize\r\n  }\r\n\r\n  const unspents = _unspents || await fetchUnspents({\r\n    address,\r\n    NETWORK,\r\n  })\r\n\r\n\r\n  const txIn = unspents.length\r\n  const txSize = txIn > 0\r\n    ? txIn * 146 + txOut * 33 + (15 + txIn - txOut)\r\n    : defaultTxSize\r\n\r\n  return txSize\r\n}\r\n\r\nconst estimateFeeValue = async (options) => {\r\n  const {\r\n    feeRate: _feeRate,\r\n    inSatoshis,\r\n    speed,\r\n    address,\r\n    txSize: _txSize,\r\n    fixed,\r\n    method,\r\n    NETWORK,\r\n  } = options\r\n\r\n  const txOut = 2\r\n\r\n\r\n  const txSize = _txSize || await calculateTxSize({\r\n    address,\r\n    speed,\r\n    fixed,\r\n    method,\r\n    txOut,\r\n    NETWORK,\r\n  })\r\n\r\n  const feeRate = _feeRate  || 30 * 1e3 // fast\r\n\r\n  const calculatedFeeValue = BigNumber.maximum(\r\n    DUST,\r\n    new BigNumber(feeRate)\r\n      .multipliedBy(txSize)\r\n      .div(1024)\r\n      .dp(0, BigNumber.ROUND_HALF_EVEN),\r\n  )\r\n\r\n  // Используем комиссию больше рекомендованной на 5 сатоши\r\n  calculatedFeeValue.plus(20)\r\n\r\n  const finalFeeValue = inSatoshis\r\n    ? calculatedFeeValue.toString()\r\n    : calculatedFeeValue.multipliedBy(1e-8).toString()\r\n\r\n  console.log(`Next withdraw fee speed(${speed}) method (${method}) ${finalFeeValue}`)\r\n  return finalFeeValue\r\n}\r\n\r\nconst networks = {\r\n  mainnet: {\r\n    messagePrefix: 'Nextcoin Signed Message:\\n',\r\n    bip32: {\r\n      public:  0x0488B21E,\r\n      private: 0x0488ADE4,\r\n    },\r\n    pubKeyHash: 75,\r\n    scriptHash: 5,\r\n    wif: 128,\r\n  },\r\n  testnet: {\r\n    messagePrefix: 'Nextcoin Signed Message:\\n',\r\n    bip32: {\r\n      public:  0x0488B21E,\r\n      private: 0x0488ADE4,\r\n    },\r\n    pubKeyHash: 75,\r\n    scriptHash: 5,\r\n    wif: 128,\r\n  },\r\n}\r\n\r\nexport default {\r\n  fetchBalance,\r\n  fetchUnspents,\r\n  broadcastTx,\r\n  fetchTx,\r\n  fetchTxInfo,\r\n  checkWithdraw,\r\n\r\n  estimateFeeValue,\r\n  getCore,\r\n  networks,\r\n}"]}]}