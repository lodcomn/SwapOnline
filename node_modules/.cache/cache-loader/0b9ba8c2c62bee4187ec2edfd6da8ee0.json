{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\css-loader\\dist\\cjs.js??ref--11-2!C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\postcss-loader\\dist\\cjs.js??ref--11-3!C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\sass-loader\\dist\\cjs.js??ref--11-4!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Currency\\Row\\Row.scss","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Currency\\Row\\Row.scss","mtime":1614842914156},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\index.scss","mtime":1614842913802},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Currency\\Row\\Row.scss","mtime":1614842914156},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\index.scss","mtime":1614842913802},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\index.scss","mtime":1614842913807},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\_sizes.scss","mtime":1614842913807},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\_media.scss","mtime":1614842913807},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\_colors.scss","mtime":1614842913806},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\_animations.scss","mtime":1614842913806},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\mixins\\index.scss","mtime":1614842913805},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\mixins\\_common.scss","mtime":1614842913803},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\mixins\\_fonts.scss","mtime":1614842913804},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\mixins\\_media.scss","mtime":1614842913804},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}