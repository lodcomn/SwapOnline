{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\redux\\actions\\backupManager.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\redux\\actions\\backupManager.ts","mtime":1614852090626},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gQHRzLW5vY2hlY2sKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdoZWxwZXJzL2NvbnN0YW50cyc7CmltcG9ydCBnZXRVbml4VGltZVN0YW1wIGZyb20gJ2hlbHBlcnMvZ2V0VW5peFRpbWVTdGFtcCc7CmltcG9ydCBjb25maWcgZnJvbSAnaGVscGVycy9leHRlcm5hbENvbmZpZyc7CmltcG9ydCBiYWNrdXBVc2VyRGF0YSBmcm9tICdwbHVnaW5zL2JhY2t1cFVzZXJEYXRhJzsKdmFyIGJhY2t1cEZpZWxkcyA9IFtjb25zdGFudHMucHJpdmF0ZUtleU5hbWVzLmJ0Y01uZW1vbmljLCBjb25zdGFudHMucHJpdmF0ZUtleU5hbWVzLmV0aE1uZW1vbmljLCBjb25zdGFudHMucHJpdmF0ZUtleU5hbWVzLmV0aCwgY29uc3RhbnRzLnByaXZhdGVLZXlOYW1lcy5idGMsIGNvbnN0YW50cy5wcml2YXRlS2V5TmFtZXMuYnRjTXVsdGlzaWcsIGNvbnN0YW50cy5wcml2YXRlS2V5TmFtZXMuYnRjTXVsdGlzaWdPdGhlck93bmVyS2V5LCBjb25zdGFudHMucHJpdmF0ZUtleU5hbWVzLmJ0Y011bHRpc2lnT3RoZXJPd25lcktleU1uZW1vbmljLCBjb25zdGFudHMucHJpdmF0ZUtleU5hbWVzLmJ0Y1Ntc01uZW1vbmljS2V5LCBjb25zdGFudHMucHJpdmF0ZUtleU5hbWVzLmJ0Y1Ntc01uZW1vbmljS2V5R2VuZXJhdGVkLCBjb25zdGFudHMucHJpdmF0ZUtleU5hbWVzLmJ0Y1Ntc01uZW1vbmljS2V5TW5lbW9uaWMsIGNvbnN0YW50cy5wcml2YXRlS2V5TmFtZXMuYnRjUGluTW5lbW9uaWNLZXldOwoKdmFyIHNlcnZlckJhY2t1cCA9IGZ1bmN0aW9uIHNlcnZlckJhY2t1cCgpIHsKICByZXR1cm4gYmFja3VwVXNlckRhdGEuYmFja3VwVXNlcigpOwp9OwoKdmFyIHNlcnZlckNsZWFudXBTZWVkID0gZnVuY3Rpb24gc2VydmVyQ2xlYW51cFNlZWQoKSB7CiAgaWYgKGNvbmZpZyAmJiBjb25maWcub3B0cyAmJiBjb25maWcub3B0cy5wbHVnaW5zICYmIGNvbmZpZy5vcHRzLnBsdWdpbnMuYmFja3VwUGx1Z2luKSB7CiAgICBiYWNrdXBVc2VyRGF0YS5jbGVhbnVwU2VlZCgpOwogIH0KfTsKCnZhciBiYWNrdXAgPSBmdW5jdGlvbiBiYWNrdXAobWFyaywgbGFiZWwsIG92ZXJpZGUpIHsKICBpZiAoIWxhYmVsKSBsYWJlbCA9IG5ldyBEYXRlKCkudG9TdHJpbmcoKTsKICBpZiAoIW1hcmspIG1hcmsgPSBnZXRVbml4VGltZVN0YW1wKCk7CiAgdmFyIGRhdGEgPSB7fTsKICBiYWNrdXBGaWVsZHMuZm9yRWFjaChmdW5jdGlvbiAobHNLZXkpIHsKICAgIHZhciB2YWx1ZSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGxzS2V5KTsKCiAgICBpZiAodmFsdWUpIHsKICAgICAgZGF0YVtsc0tleV0gPSB2YWx1ZTsKICAgIH0KICB9KTsKICB2YXIgYmFja3VwRGF0YSA9IHsKICAgIG1hcms6IG1hcmssCiAgICBsYWJlbDogbGFiZWwsCiAgICB1dHg6IGdldFVuaXhUaW1lU3RhbXAoKSwKICAgIGRhdGE6IGRhdGEKICB9OwogIHZhciBiYWNrdXBzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oY29uc3RhbnRzLmxvY2FsU3RvcmFnZS5iYWNrdXBzKTsKCiAgdHJ5IHsKICAgIGJhY2t1cHMgPSBKU09OLnBhcnNlKGJhY2t1cHMpOwogIH0gY2F0Y2ggKGUpIHt9IC8vQAoKCiAgaWYgKCEoYmFja3VwcyBpbnN0YW5jZW9mIEFycmF5KSkgewogICAgLy9ACiAgICBiYWNrdXBzID0gW107CiAgfQoKICBpZiAoYmFja3Vwcy5pbmRleE9mKG1hcmspICE9PSAtMSAmJiAhb3ZlcmlkZSkgcmV0dXJuICJleGlzdHMiOyAvL0AKCiAgYmFja3Vwcy51bnNoaWZ0KG1hcmspOwogIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGNvbnN0YW50cy5sb2NhbFN0b3JhZ2UuYmFja3VwcywgSlNPTi5zdHJpbmdpZnkoYmFja3VwcykpOwogIHZhciBiYWNrdXBLZXkgPSAiIi5jb25jYXQoY29uc3RhbnRzLmxvY2FsU3RvcmFnZS5iYWNrdXBzX3ByZWZpeCwgIjoiKS5jb25jYXQobWFyayk7CiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oIiIuY29uY2F0KGNvbnN0YW50cy5sb2NhbFN0b3JhZ2UuYmFja3Vwc19wcmVmaXgsICI6IikuY29uY2F0KG1hcmspLCBKU09OLnN0cmluZ2lmeShiYWNrdXBEYXRhKSk7CiAgcmV0dXJuIGJhY2t1cDsKfTsKCnZhciBpbXBvcnRCYWNrdXAgPSBmdW5jdGlvbiBpbXBvcnRCYWNrdXAoYmFja3VwKSB7CiAgaWYgKGJhY2t1cCAmJiBiYWNrdXAubWFyayAmJiBiYWNrdXAudXR4ICYmIGJhY2t1cC5sYWJlbCAmJiBiYWNrdXAuZGF0YSkgewogICAgT2JqZWN0LmtleXMoYmFja3VwLmRhdGEpLmZvckVhY2goZnVuY3Rpb24gKGxzS2V5KSB7CiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGxzS2V5LCBiYWNrdXAuZGF0YVtsc0tleV0pOwogICAgfSk7CiAgfSBlbHNlIHsKICAgIHJldHVybiBmYWxzZTsKICB9Cn07Cgp2YXIgcmVzdG9yeSA9IGZ1bmN0aW9uIHJlc3RvcnkobWFyaykgewogIHZhciBiYWNrdXAgPSBleGlzdHMobWFyayk7CgogIGlmIChiYWNrdXApIHsKICAgIHJldHVybiBpbXBvcnRCYWNrdXAoYmFja3VwKTsKICB9CgogIHJldHVybiBmYWxzZTsKfTsKCnZhciBsaXN0ID0gZnVuY3Rpb24gbGlzdCgpIHsKICB2YXIgYmFja3VwcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGNvbnN0YW50cy5sb2NhbFN0b3JhZ2UuYmFja3Vwcyk7CgogIHRyeSB7CiAgICBiYWNrdXBzID0gSlNPTi5wYXJzZShiYWNrdXBzKTsKICB9IGNhdGNoIChlKSB7fSAvL0AKCgogIGlmICghKGJhY2t1cHMgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgIC8vQAogICAgYmFja3VwcyA9IFtdOwogIH0gLy9ACgoKICBiYWNrdXBzID0gYmFja3Vwcy5tYXAoZnVuY3Rpb24gKG1hcmspIHsKICAgIHZhciBiYWNrdXBEYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oIiIuY29uY2F0KGNvbnN0YW50cy5sb2NhbFN0b3JhZ2UuYmFja3Vwc19wcmVmaXgsICI6IikuY29uY2F0KG1hcmspKTsKCiAgICB0cnkgewogICAgICBiYWNrdXBEYXRhID0gSlNPTi5wYXJzZShiYWNrdXBEYXRhKTsKICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgaWYgKGJhY2t1cERhdGEgLy9ACiAgICAmJiBiYWNrdXBEYXRhLm1hcmsgLy9ACiAgICAmJiBiYWNrdXBEYXRhLnV0eCAvL0AKICAgICYmIGJhY2t1cERhdGEubGFiZWwgLy9ACiAgICAmJiBiYWNrdXBEYXRhLmRhdGEpIHsKICAgICAgcmV0dXJuIGJhY2t1cERhdGE7CiAgICB9CgogICAgcmV0dXJuIGZhbHNlOwogIH0pLmZpbHRlcihmdW5jdGlvbiAoYmFja3VwRGF0YSkgewogICAgcmV0dXJuIGJhY2t1cERhdGEgJiYgYmFja3VwRGF0YS5tYXJrOwogIH0pOwogIHJldHVybiBiYWNrdXBzOwp9OwoKdmFyIGV4aXN0cyA9IGZ1bmN0aW9uIGV4aXN0cyhtYXJrKSB7CiAgdmFyIGJhY2t1cERhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgiIi5jb25jYXQoY29uc3RhbnRzLmxvY2FsU3RvcmFnZS5iYWNrdXBzX3ByZWZpeCwgIjoiKS5jb25jYXQobWFyaykpOwoKICB0cnkgewogICAgYmFja3VwRGF0YSA9IEpTT04ucGFyc2UoYmFja3VwRGF0YSk7CiAgfSBjYXRjaCAoZSkge30KCiAgaWYgKGJhY2t1cERhdGEgLy9ACiAgJiYgYmFja3VwRGF0YS5tYXJrIC8vQAogICYmIGJhY2t1cERhdGEudXR4IC8vQAogICYmIGJhY2t1cERhdGEubGFiZWwgLy9ACiAgJiYgYmFja3VwRGF0YS5kYXRhKSB7CiAgICByZXR1cm4gYmFja3VwRGF0YTsKICB9CgogIHJldHVybiBmYWxzZTsKfTsKCnZhciBiYWNrdXBNYW5hZ2VyID0gewogIGJhY2t1cDogYmFja3VwLAogIHJlc3Rvcnk6IHJlc3RvcnksCiAgaW1wb3J0QmFja3VwOiBpbXBvcnRCYWNrdXAsCiAgbGlzdDogbGlzdCwKICBleGlzdHM6IGV4aXN0cywKICBnZXQ6IGV4aXN0cywKICBzZXJ2ZXJCYWNrdXA6IHNlcnZlckJhY2t1cCwKICBzZXJ2ZXJDbGVhbnVwU2VlZDogc2VydmVyQ2xlYW51cFNlZWQKfTsKZXhwb3J0IGRlZmF1bHQgYmFja3VwTWFuYWdlcjs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/redux/actions/backupManager.ts"],"names":["constants","getUnixTimeStamp","config","backupUserData","backupFields","privateKeyNames","btcMnemonic","ethMnemonic","eth","btc","btcMultisig","btcMultisigOtherOwnerKey","btcMultisigOtherOwnerKeyMnemonic","btcSmsMnemonicKey","btcSmsMnemonicKeyGenerated","btcSmsMnemonicKeyMnemonic","btcPinMnemonicKey","serverBackup","backupUser","serverCleanupSeed","opts","plugins","backupPlugin","cleanupSeed","backup","mark","label","overide","Date","toString","data","forEach","lsKey","value","localStorage","getItem","backupData","utx","backups","JSON","parse","e","Array","indexOf","unshift","setItem","stringify","backupKey","backups_prefix","importBackup","Object","keys","restory","exists","list","map","filter","backupManager","get"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport constants from 'helpers/constants'\r\nimport getUnixTimeStamp from 'helpers/getUnixTimeStamp'\r\nimport config from 'helpers/externalConfig'\r\nimport backupUserData from 'plugins/backupUserData'\r\n\r\n\r\nconst backupFields = [\r\n  constants.privateKeyNames.btcMnemonic,\r\n  constants.privateKeyNames.ethMnemonic,\r\n  constants.privateKeyNames.eth,\r\n  constants.privateKeyNames.btc,\r\n  constants.privateKeyNames.btcMultisig,\r\n  constants.privateKeyNames.btcMultisigOtherOwnerKey,\r\n  constants.privateKeyNames.btcMultisigOtherOwnerKeyMnemonic,\r\n  constants.privateKeyNames.btcSmsMnemonicKey,\r\n  constants.privateKeyNames.btcSmsMnemonicKeyGenerated,\r\n  constants.privateKeyNames.btcSmsMnemonicKeyMnemonic,\r\n  constants.privateKeyNames.btcPinMnemonicKey,\r\n]\r\n\r\n\r\nconst serverBackup = () => {\r\n  return backupUserData.backupUser()\r\n}\r\n\r\nconst serverCleanupSeed = () => {\r\n  if (config\r\n    && config.opts\r\n    && config.opts.plugins\r\n    && config.opts.plugins.backupPlugin\r\n  ) {\r\n    backupUserData.cleanupSeed()\r\n  }\r\n}\r\n\r\nconst backup = (mark, label, overide) => {\r\n  if (!label) label = new Date().toString()\r\n  if (!mark) mark = getUnixTimeStamp()\r\n\r\n  const data = {}\r\n  backupFields.forEach((lsKey) => {\r\n    const value = localStorage.getItem(lsKey)\r\n    if (value) {\r\n      data[lsKey] = value\r\n    }\r\n  })\r\n\r\n  const backupData = {\r\n    mark,\r\n    label,\r\n    utx: getUnixTimeStamp(),\r\n    data,\r\n  }\r\n\r\n  let backups = localStorage.getItem(constants.localStorage.backups)\r\n  try { backups = JSON.parse(backups) } catch (e) { }\r\n  //@\r\n  if (!(backups instanceof Array)) {\r\n    //@\r\n    backups = []\r\n  }\r\n\r\n  if ((backups.indexOf(mark) !== -1) && !overide) return `exists`\r\n  //@\r\n  backups.unshift(mark)\r\n\r\n  localStorage.setItem(constants.localStorage.backups, JSON.stringify(backups))\r\n  const backupKey = `${constants.localStorage.backups_prefix}:${mark}`\r\n  localStorage.setItem(`${constants.localStorage.backups_prefix}:${mark}`, JSON.stringify(backupData))\r\n\r\n  return backup\r\n}\r\n\r\nconst importBackup = (backup) => {\r\n  if (backup\r\n    && backup.mark\r\n    && backup.utx\r\n    && backup.label\r\n    && backup.data\r\n  ) {\r\n    Object.keys(backup.data).forEach((lsKey) => {\r\n      localStorage.setItem(lsKey, backup.data[lsKey])\r\n    })\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nconst restory = (mark) => {\r\n  const backup = exists(mark)\r\n  if (backup) {\r\n    return importBackup(backup)\r\n  }\r\n  return false\r\n}\r\n\r\nconst list = () => {\r\n  let backups = localStorage.getItem(constants.localStorage.backups)\r\n  try { backups = JSON.parse(backups) } catch (e) { }\r\n  //@\r\n  if (!(backups instanceof Array)) {\r\n    //@\r\n    backups = []\r\n  }\r\n  //@\r\n  backups = backups.map((mark) => {\r\n    let backupData = localStorage.getItem(`${constants.localStorage.backups_prefix}:${mark}`)\r\n    try { backupData = JSON.parse(backupData) } catch (e) { }\r\n    if (backupData\r\n      //@\r\n      && backupData.mark\r\n      //@\r\n      && backupData.utx\r\n      //@\r\n      && backupData.label\r\n      //@\r\n      && backupData.data\r\n    ) {\r\n      return backupData\r\n    }\r\n    return false\r\n  }).filter(backupData => backupData && backupData.mark)\r\n\r\n  return backups\r\n}\r\n\r\nconst exists = (mark) => {\r\n  let backupData = localStorage.getItem(`${constants.localStorage.backups_prefix}:${mark}`)\r\n  try { backupData = JSON.parse(backupData) } catch (e) { }\r\n  if (backupData\r\n    //@\r\n    && backupData.mark\r\n    //@\r\n    && backupData.utx\r\n    //@\r\n    && backupData.label\r\n    //@\r\n    && backupData.data\r\n  ) {\r\n    return backupData\r\n  }\r\n  return false\r\n}\r\n\r\nconst backupManager = {\r\n  backup,\r\n  restory,\r\n  importBackup,\r\n  list,\r\n  exists,\r\n  get: exists,\r\n\r\n  serverBackup,\r\n  serverCleanupSeed,\r\n}\r\n\r\nexport default backupManager\r\n"]}]}