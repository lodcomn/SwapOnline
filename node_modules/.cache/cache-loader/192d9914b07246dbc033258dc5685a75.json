{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\notifications\\BTCMultisignRequest\\BTCMultisignRequest.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\notifications\\BTCMultisignRequest\\BTCMultisignRequest.tsx","mtime":1614842914045},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKCnZhciBfZGVjLCBfY2xhc3MsIF90ZW1wOwoKZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9CgppbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnOwppbXBvcnQgY3NzTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7CmltcG9ydCBzdHlsZXMgZnJvbSAnLi9CVENNdWx0aXNpZ25SZXF1ZXN0LnNjc3MnOwppbXBvcnQgeyBGb3JtYXR0ZWRNZXNzYWdlLCBpbmplY3RJbnRsIH0gZnJvbSAncmVhY3QtaW50bCc7CmltcG9ydCBOb3RpZmljYXRpb24gZnJvbSAnY29tcG9uZW50cy9ub3RpZmljYXRpb24vTm90aWZpY2F0aW9uL05vdGlmaWNhdGlvbic7CmltcG9ydCB7IGxpbmtzIH0gZnJvbSAnaGVscGVycyc7CmltcG9ydCBhY3Rpb25zIGZyb20gJ3JlZHV4L2FjdGlvbnMnOwp2YXIgQlRDTXVsdGlzaWduUmVxdWVzdCA9IChfZGVjID0gY3NzTW9kdWxlcyhzdHlsZXMpLCBpbmplY3RJbnRsKF9jbGFzcyA9IF9kZWMoX2NsYXNzID0gKF90ZW1wID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKEJUQ011bHRpc2lnblJlcXVlc3QsIF9Db21wb25lbnQpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEJUQ011bHRpc2lnblJlcXVlc3QpOwoKICBmdW5jdGlvbiBCVENNdWx0aXNpZ25SZXF1ZXN0KCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBCVENNdWx0aXNpZ25SZXF1ZXN0KTsKCiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHsKICAgICAgYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTsKICAgIH0KCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsLmFwcGx5KF9zdXBlciwgW3RoaXNdLmNvbmNhdChhcmdzKSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiaGFuZGxlQ2xpY2siLCBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLAogICAgICAgICAgaGlzdG9yeSA9IF90aGlzJHByb3BzLmhpc3RvcnksCiAgICAgICAgICBfdGhpcyRwcm9wcyRkYXRhID0gX3RoaXMkcHJvcHMuZGF0YSwKICAgICAgICAgIHR4UmF3ID0gX3RoaXMkcHJvcHMkZGF0YS50eFJhdywKICAgICAgICAgIGludm9pY2UgPSBfdGhpcyRwcm9wcyRkYXRhLmludm9pY2U7CiAgICAgIGFjdGlvbnMubW9kYWxzLmNsb3NlQWxsKCk7CgogICAgICBpZiAoaW52b2ljZSAmJiBpbnZvaWNlLmlkKSB7CiAgICAgICAgbG9jYXRpb24uaGFzaCA9ICIjIi5jb25jYXQobGlua3MubXVsdGlzaWduLCAiL2J0Yy9jb25maXJtaW52b2ljZS8iKS5jb25jYXQoaW52b2ljZS5pZCwgInwiKS5jb25jYXQodHhSYXcpOwogICAgICB9IGVsc2UgewogICAgICAgIGxvY2F0aW9uLmhhc2ggPSAiIyIuY29uY2F0KGxpbmtzLm11bHRpc2lnbiwgIi9idGMvY29uZmlybS8iKS5jb25jYXQodHhSYXcpOwogICAgICB9CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQlRDTXVsdGlzaWduUmVxdWVzdCwgW3sKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcywKICAgICAgICAgIG5hbWUgPSBfdGhpcyRwcm9wczIubmFtZSwKICAgICAgICAgIF90aGlzJHByb3BzMiRkYXRhID0gX3RoaXMkcHJvcHMyLmRhdGEsCiAgICAgICAgICBhbW91bnQgPSBfdGhpcyRwcm9wczIkZGF0YS5hbW91bnQsCiAgICAgICAgICBjdXJyZW5jeSA9IF90aGlzJHByb3BzMiRkYXRhLmN1cnJlbmN5LAogICAgICAgICAgYWRkcmVzcyA9IF90aGlzJHByb3BzMiRkYXRhLmFkZHJlc3M7CiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChOb3RpZmljYXRpb24sIHsKICAgICAgICBuYW1lOiBuYW1lLAogICAgICAgIG9uQ2xpY2s6IHRoaXMuaGFuZGxlQ2xpY2sKICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImRpdiIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICBpZDogIkJUQ01TX1dpdGhkcmF3UmVxdWVzdCIsCiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJcdTA0MTdcdTA0MzBcdTA0M0ZcdTA0NDBcdTA0M0VcdTA0NDEgXHUwNDNEXHUwNDMwIFx1MDQzRVx1MDQ0Mlx1MDQzRlx1MDQ0MFx1MDQzMFx1MDQzMlx1MDQzQVx1MDQ0MyBcdTA0NDEgXHUwNDNBXHUwNDNFXHUwNDQ4XHUwNDM1XHUwNDNCXHUwNDRDXHUwNDNBXHUwNDMwIEJUQy1tdWx0aXNpZ24iCiAgICAgIH0pKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgIGlkOiAiQlRDTVNfV2l0aGRyYXdSZXF1ZXN0SW5mbyIsCiAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJcdTA0MUVcdTA0NDJcdTA0M0ZcdTA0NDBcdTA0MzBcdTA0MzJcdTA0M0FcdTA0MzAge2Ftb3VudH0ge2N1cnJlbmN5fSBcdTA0M0RcdTA0MzAgXHUwNDNBXHUwNDNFXHUwNDQ4XHUwNDM1XHUwNDNCXHUwNDM1XHUwNDNBIHthZGRyZXNzfSIsCiAgICAgICAgdmFsdWVzOiB7CiAgICAgICAgICBhbW91bnQ6IGFtb3VudCwKICAgICAgICAgIGN1cnJlbmN5OiBjdXJyZW5jeSwKICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3MKICAgICAgICB9CiAgICAgIH0pKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBCVENNdWx0aXNpZ25SZXF1ZXN0Owp9KENvbXBvbmVudCksIF90ZW1wKSkgfHwgX2NsYXNzKSB8fCBfY2xhc3MpOwpleHBvcnQgeyBCVENNdWx0aXNpZ25SZXF1ZXN0IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/notifications/BTCMultisignRequest/BTCMultisignRequest.tsx"],"names":["React","Component","cssModules","styles","FormattedMessage","injectIntl","Notification","links","actions","BTCMultisignRequest","props","history","data","txRaw","invoice","modals","closeAll","id","location","hash","multisign","name","amount","currency","address","handleClick"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,SAASC,KAAT,QAAyB,SAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;IAMqBC,mB,WADpBP,UAAU,CAACC,MAAD,C,EADVE,U;;;;;;;;;;;;;;;;kEAIe,YAAM;AAAA,wBAC4B,MAAKK,KADjC;AAAA,UACVC,OADU,eACVA,OADU;AAAA,yCACDC,IADC;AAAA,UACOC,KADP,oBACOA,KADP;AAAA,UACcC,OADd,oBACcA,OADd;AAElBN,MAAAA,OAAO,CAACO,MAAR,CAAeC,QAAf;;AACA,UAAIF,OAAO,IAAIA,OAAO,CAACG,EAAvB,EAA2B;AACzBC,QAAAA,QAAQ,CAACC,IAAT,cAAoBZ,KAAK,CAACa,SAA1B,iCAA0DN,OAAO,CAACG,EAAlE,cAAwEJ,KAAxE;AACD,OAFD,MAEO;AACLK,QAAAA,QAAQ,CAACC,IAAT,cAAoBZ,KAAK,CAACa,SAA1B,0BAAmDP,KAAnD;AACD;AACF,K;;;;;;;WAED,kBAAS;AAAA,yBAC+C,KAAKH,KADpD;AAAA,UACCW,IADD,gBACCA,IADD;AAAA,2CACOT,IADP;AAAA,UACeU,MADf,qBACeA,MADf;AAAA,UACuBC,QADvB,qBACuBA,QADvB;AAAA,UACiCC,OADjC,qBACiCA,OADjC;AAGP,0BACE,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAEH,IAApB;AAA0B,QAAA,OAAO,EAAE,KAAKI;AAAxC,sBACE,8CACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,uBAArB;AAA6C,QAAA,cAAc,EAAC;AAA5D,QADF,CADF,eAIE,oBAAC,gBAAD;AACE,QAAA,EAAE,EAAC,2BADL;AAEE,QAAA,cAAc,EAAC,wIAFjB;AAGE,QAAA,MAAM,EAAE;AACNH,UAAAA,MAAM,EAANA,MADM;AAENC,UAAAA,QAAQ,EAARA,QAFM;AAGNC,UAAAA,OAAO,EAAPA;AAHM;AAHV,QAJF,CADF;AAeD;;;;EA9B8CvB,S;SAA5BQ,mB","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './BTCMultisignRequest.scss'\r\nimport { FormattedMessage, injectIntl } from 'react-intl'\r\nimport Notification from 'components/notification/Notification/Notification'\r\nimport { links }    from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport { localisedUrl } from 'helpers/locale'\r\n\r\n\r\n@injectIntl\r\n@cssModules(styles)\r\nexport default class BTCMultisignRequest extends Component<any, any> {\r\n\r\n  handleClick = () => {\r\n    const { history, data: { txRaw, invoice } } = this.props\r\n    actions.modals.closeAll()\r\n    if (invoice && invoice.id) {\r\n      location.hash = `#${links.multisign}/btc/confirminvoice/${invoice.id}|${txRaw}`\r\n    } else {\r\n      location.hash = `#${links.multisign}/btc/confirm/${txRaw}`\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, data: { amount, currency, address } } = this.props\r\n\r\n    return (\r\n      <Notification name={name} onClick={this.handleClick}>\r\n        <div>\r\n          <FormattedMessage id=\"BTCMS_WithdrawRequest\" defaultMessage=\"Запрос на отправку с кошелька BTC-multisign\" />\r\n        </div>\r\n        <FormattedMessage \r\n          id=\"BTCMS_WithdrawRequestInfo\" \r\n          defaultMessage=\"Отправка {amount} {currency} на кошелек {address}\" \r\n          values={{\r\n            amount,\r\n            currency,\r\n            address,\r\n          }} />\r\n      </Notification>\r\n    )\r\n  }\r\n}\r\n"]}]}