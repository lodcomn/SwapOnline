{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\HowToExportModal\\HowToExportModal.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\HowToExportModal\\HowToExportModal.tsx","mtime":1614842913986},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/HowToExportModal/HowToExportModal.tsx"],"names":["React","cssModules","styles","Modal","FormattedMessage","defineMessages","injectIntl","ethToken","getCurrencyKey","connect","langPrefix","langLabels","title","id","defaultMessage","exportSimpleKey","userPrivateKey","userEthPrivateKey","exportERC20Step1","exportERC20Step2","exportERC20Contract","exportERC20Symbol","exportERC20Decimals","exportERC20Name","HowToExportModal","privateKey","user","ethData","ethPrivateKey","allowMultiple","props","item","data","currencyKey","currency","toUpperCase","isERC20Token","isEthToken","name","state","intl","formatMessage","contractAddress","symbol","decimals","fullName","Component"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,gBAAT,EAA2BC,cAA3B,EAA2CC,UAA3C,QAA6D,YAA7D;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAGA,IAAMC,UAAU,qBAAhB;AACA,IAAMC,UAAU,GAAGN,cAAc,CAAC;AAChCO,EAAAA,KAAK,EAAE;AACLC,IAAAA,EAAE,YAAKH,UAAL,WADG;AAELI,IAAAA,cAAc,EAAE;AAFX,GADyB;AAKhCC,EAAAA,eAAe,EAAE;AACfF,IAAAA,EAAE,YAAKH,UAAL,kBADa;AAEfI,IAAAA,cAAc,EAAE;AAFD,GALe;AAShCE,EAAAA,cAAc,EAAE;AACdH,IAAAA,EAAE,YAAKH,UAAL,0BADY;AAEdI,IAAAA,cAAc,EAAE;AAFF,GATgB;AAahCG,EAAAA,iBAAiB,EAAE;AACjBJ,IAAAA,EAAE,YAAKH,UAAL,yBADe;AAEjBI,IAAAA,cAAc,EAAE;AAFC,GAba;AAiBhCI,EAAAA,gBAAgB,EAAE;AAChBL,IAAAA,EAAE,YAAKH,UAAL,sBADc;AAEhBI,IAAAA,cAAc,EAAE;AAFA,GAjBc;AAqBhCK,EAAAA,gBAAgB,EAAE;AAChBN,IAAAA,EAAE,YAAKH,UAAL,sBADc;AAEhBI,IAAAA,cAAc,EAAE;AAFA,GArBc;AAyBhCM,EAAAA,mBAAmB,EAAE;AACnBP,IAAAA,EAAE,YAAKH,UAAL,0BADiB;AAEnBI,IAAAA,cAAc,EAAE;AAFG,GAzBW;AA6BhCO,EAAAA,iBAAiB,EAAE;AACjBR,IAAAA,EAAE,YAAKH,UAAL,wBADe;AAEjBI,IAAAA,cAAc,EAAE;AAFC,GA7Ba;AAiChCQ,EAAAA,mBAAmB,EAAE;AACnBT,IAAAA,EAAE,YAAKH,UAAL,0BADiB;AAEnBI,IAAAA,cAAc,EAAE;AAFG,GAjCW;AAqChCS,EAAAA,eAAe,EAAE;AACfV,IAAAA,EAAE,YAAKH,UAAL,sBADa;AAEfI,IAAAA,cAAc,EAAE;AAFD;AArCe,CAAD,CAAjC;IA0DqBU,gB,WAfpBf,OAAO,CACN;AAAA,MAIQgB,UAJR,QAEIC,IAFJ,CAGMC,OAHN,CAIQF,UAJR;AAAA,SAQM;AACJG,IAAAA,aAAa,EAAEH;AADX,GARN;AAAA,CADM,C,UAcPxB,UAAU,CAACC,MAAD,EAAS;AAAE2B,EAAAA,aAAa,EAAE;AAAjB,CAAT,C,gBADVvB,U;;;;;AAMC,4BAAYwB,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB;;AAAA,QAIbC,IAJa,GAObD,KAPa,CAGfE,IAHe,CAIbD,IAJa;AAAA,QAMfH,aANe,GAObE,KAPa,CAMfF,aANe;AASjB,QAAMK,WAAW,GAAGzB,cAAc,CAACuB,IAAI,CAACG,QAAN,EAAgB,KAAhB,CAAd,CAAqCC,WAArC,EAApB;AACA,QAAMC,YAAY,GAAG7B,QAAQ,CAAC8B,UAAT,CAAoB;AAAEC,MAAAA,IAAI,EAAEP,IAAI,CAACG;AAAb,KAApB,CAArB;AAEA,UAAKK,KAAL,GAAa;AACXN,MAAAA,WAAW,EAAXA,WADW;AAEXG,MAAAA,YAAY,EAAZA,YAFW;AAGXL,MAAAA,IAAI,EAAJA;AAHW,KAAb;AAZiB;AAiBlB;;;;WAED,kBAAS;AAAA,wBAgBH,IAhBG,CAELD,KAFK;AAAA,UAGHQ,IAHG,eAGHA,IAHG;AAAA,UAIHE,IAJG,eAIHA,IAJG;AAAA,UAKHZ,aALG,eAKHA,aALG;AAAA,wBAgBH,IAhBG,CAOLW,KAPK;AAAA,UAQHN,WARG,eAQHA,WARG;AAAA,UASHG,YATG,eASHA,YATG;AAAA,UAUHL,IAVG,eAUHA,IAVG;AAAA,yCAWHA,IAXG;AAAA,UAYDN,UAZC,oBAYDA,UAZC;AAAA,UAaDS,QAbC,oBAaDA,QAbC;AAkBP,0BACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAEI,IADR;AAEE,QAAA,KAAK,EAAEE,IAAI,CAACC,aAAL,CAAmB9B,UAAU,CAACC,KAA9B,EAAqC;AAAEsB,UAAAA,QAAQ,EAARA;AAAF,SAArC;AAFT,SAIG,CAACD,WAAW,KAAK,KAAhB,IAAyBA,WAAW,KAAK,KAAzC,IAAkDA,WAAW,KAAK,OAAlE,IAA6EA,WAAW,KAAK,MAA9F,kBACC,uDACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,gBAAD,eACOtB,UAAU,CAACI,eADlB;AAEE,QAAA,MAAM,EAAE;AACNmB,UAAAA,QAAQ,EAARA;AADM;AAFV,SADF,CADF,eASE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,SAAS,EAAC;AAAtC,sBACE,oBAAC,gBAAD,EAAuBvB,UAAU,CAACK,cAAlC,CADF,eAEE,oCAASS,UAAT,CAFF,CATF,CALJ,EAoBGW,YAAY,iBACX,uDACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,gBAAD,eACOzB,UAAU,CAACO,gBADlB;AAEE,QAAA,MAAM,EAAE;AACNgB,UAAAA,QAAQ,EAARA;AADM;AAFV,SADF,CADF,eASE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,SAAS,EAAC;AAAtC,sBACE,oBAAC,gBAAD,EAAuBvB,UAAU,CAACM,iBAAlC,CADF,eAEE,oCAASW,aAAT,CAFF,CATF,eAaE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,gBAAD,EACOjB,UAAU,CAACQ,gBADlB,CADF,CAbF,eAkBE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,gBAAD,eAAuBR,UAAU,CAACS,mBAAlC;AAAwD,QAAA,MAAM,EAAE;AAAEsB,UAAAA,eAAe,EAAEX,IAAI,CAACW;AAAxB;AAAhE,SADF,eAEE,oBAAC,gBAAD,eAAuB/B,UAAU,CAACU,iBAAlC;AAAsD,QAAA,MAAM,EAAE;AAAEsB,UAAAA,MAAM,EAAEZ,IAAI,CAACG;AAAf;AAA9D,SAFF,eAGE,oBAAC,gBAAD,eAAuBvB,UAAU,CAACW,mBAAlC;AAAwD,QAAA,MAAM,EAAE;AAAEsB,UAAAA,QAAQ,EAAEb,IAAI,CAACa;AAAjB;AAAhE,SAHF,eAIE,oBAAC,gBAAD,eAAuBjC,UAAU,CAACY,eAAlC;AAAoD,QAAA,MAAM,EAAE;AAAEe,UAAAA,IAAI,EAAEP,IAAI,CAACc;AAAb;AAA5D,SAJF,CAlBF,CArBJ,CADF;AAkDD;;;;EA3F2C7C,KAAK,CAAC8C,S;SAA/BtB,gB","sourcesContent":["import React from 'react'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './HowToExportModal.scss'\r\n\r\nimport { Modal } from 'components/modal'\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl'\r\nimport config from 'helpers/externalConfig'\r\nimport ethToken from 'helpers/ethToken'\r\nimport getCurrencyKey from 'helpers/getCurrencyKey'\r\nimport { connect } from 'redaction'\r\n\r\n\r\nconst langPrefix = `HowToExportModal`\r\nconst langLabels = defineMessages({\r\n  title: {\r\n    id: `${langPrefix}_Title`,\r\n    defaultMessage: 'Как экспортировать кошелек {currency}',\r\n  },\r\n  exportSimpleKey: {\r\n    id: `${langPrefix}_ExportSimple`,\r\n    defaultMessage: 'Для экспорта кошелька {currency} используйте ваш приватный ключ',\r\n  },\r\n  userPrivateKey: {\r\n    id: `${langPrefix}_ExportUserPrivateKey`,\r\n    defaultMessage: 'Ваш приватный ключ',\r\n  },\r\n  userEthPrivateKey: {\r\n    id: `${langPrefix}_ExportEthPrivateKey`,\r\n    defaultMessage: 'Ваш приватный ключ от ETH кошелька',\r\n  },\r\n  exportERC20Step1: {\r\n    id: `${langPrefix}_ExportERC20Step1`,\r\n    defaultMessage: 'Для экспорта кошелька {currency} вам нужно сначала импортировать ваш приватный ключ от ETH кошелька (в примеру в кошелек Metamask)',\r\n  },\r\n  exportERC20Step2: {\r\n    id: `${langPrefix}_ExportERC20Step2`,\r\n    defaultMessage: 'После экспорта ETH кошелька, вам нужно добавить ERC20 токен с параметрами, указанными ниже',\r\n  },\r\n  exportERC20Contract: {\r\n    id: `${langPrefix}_ExportERC20_Contract`,\r\n    defaultMessage: 'Адресс контракта: {contractAddress}',\r\n  },\r\n  exportERC20Symbol: {\r\n    id: `${langPrefix}_ExportERC20_Symbol`,\r\n    defaultMessage: 'Символ токена: {symbol}',\r\n  },\r\n  exportERC20Decimals: {\r\n    id: `${langPrefix}_ExportERC20_Decimals`,\r\n    defaultMessage: 'Количество символов после запятой: {decimals}',\r\n  },\r\n  exportERC20Name: {\r\n    id: `${langPrefix}_ExportERC20_Name`,\r\n    defaultMessage: 'Название токена: {name}',\r\n  },\r\n})\r\n\r\n@connect(\r\n  (\r\n    {\r\n      user: {\r\n        ethData: {\r\n          privateKey,\r\n        }\r\n      }\r\n    }\r\n  ) => ({\r\n    ethPrivateKey: privateKey,\r\n  })\r\n)\r\n@injectIntl\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class HowToExportModal extends React.Component<any, any> {\r\n\r\n  props: any\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const {\r\n      data: {\r\n        item,\r\n      },\r\n      ethPrivateKey,\r\n    } = props\r\n\r\n    const currencyKey = getCurrencyKey(item.currency, false).toUpperCase()\r\n    const isERC20Token = ethToken.isEthToken({ name: item.currency })\r\n\r\n    this.state = {\r\n      currencyKey,\r\n      isERC20Token,\r\n      item,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      props: {\r\n        name,\r\n        intl,\r\n        ethPrivateKey,\r\n      },\r\n      state: {\r\n        currencyKey,\r\n        isERC20Token,\r\n        item,\r\n        item: {\r\n          privateKey,\r\n          currency,\r\n        },\r\n      },\r\n    } = this\r\n\r\n    return (\r\n      <Modal\r\n        name={name}\r\n        title={intl.formatMessage(langLabels.title, { currency })}\r\n      >\r\n        {(currencyKey === 'BTC' || currencyKey === 'ETH' || currencyKey === 'GHOST' || currencyKey === 'NEXT') && (\r\n          <>\r\n            <div styleName=\"instruction\">\r\n              <FormattedMessage\r\n                { ...langLabels.exportSimpleKey }\r\n                values={{\r\n                  currency,\r\n                }}\r\n              />\r\n            </div>\r\n            <div styleName=\"privateKey\" className=\"ym-hide-content\">\r\n              <FormattedMessage { ...langLabels.userPrivateKey } />\r\n              <strong>{privateKey}</strong>\r\n            </div>\r\n          </>\r\n        )}\r\n        {isERC20Token && (\r\n          <>\r\n            <div styleName=\"instruction\">\r\n              <FormattedMessage\r\n                { ...langLabels.exportERC20Step1 }\r\n                values={{\r\n                  currency,\r\n                }}\r\n              />\r\n            </div>\r\n            <div styleName=\"privateKey\" className=\"ym-hide-content\">\r\n              <FormattedMessage { ...langLabels.userEthPrivateKey } />\r\n              <strong>{ethPrivateKey}</strong>\r\n            </div>\r\n            <div styleName=\"instruction\">\r\n              <FormattedMessage\r\n                { ...langLabels.exportERC20Step2 }\r\n              />\r\n            </div>\r\n            <div styleName=\"tokenInfo\">\r\n              <FormattedMessage { ...langLabels.exportERC20Contract } values={{ contractAddress: item.contractAddress }} />\r\n              <FormattedMessage { ...langLabels.exportERC20Symbol } values={{ symbol: item.currency }} />\r\n              <FormattedMessage { ...langLabels.exportERC20Decimals } values={{ decimals: item.decimals }} />\r\n              <FormattedMessage { ...langLabels.exportERC20Name } values={{ name: item.fullName }} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}