{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawModalMultisig\\WithdrawModalMultisigUser.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawModalMultisig\\WithdrawModalMultisigUser.tsx","mtime":1614850600496},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/WithdrawModalMultisig/WithdrawModalMultisigUser.tsx"],"names":["React","Fragment","PropTypes","helpers","constants","actions","Link","connect","config","cssModules","styles","ownStyle","BigNumber","Modal","FieldLabel","Input","Button","ShareLink","Tooltip","FormattedMessage","injectIntl","defineMessages","ReactTooltip","isMobile","InvoiceInfoBlock","typeforce","minAmount","inputReplaceCommaWithDot","links","QrReader","getFullOrigin","isDark","localStorage","getItem","WithdrawModalMultisigUser","user","activeFiat","btcMultisigUserData","wallets","dashboardModalsAllowed","ui","items","dashboardView","allowMultiple","props","usedAdminFee","state","estimateFeeValue","method","speed","min","plus","toNumber","setState","currency","address","data","btcmultisig","getAddrBalance","unconfirmedBalance","balance","finalBalance","undefined","toString","getExchangeRate","toLowerCase","exCurrencyRate","fiatRates","to","amount","ownTx","invoice","onReady","name","isShipped","setBalanceOnState","sendOptions","invoices","markInvoice","id","loader","hide","notifications","show","SuccessWithdraw","error","modals","close","Function","from","send","result","txId","multisigTx","broadcast","sender","destination","fee","rawTx","broadcastCancelFunc","broadcastTX2Room","txRaw","step","minFee","feeFromAmount","dividedBy","multipliedBy","balanceMiner","minus","isLinkCopied","setTimeout","openScanCam","err","console","split","openScan","toAddress","currentDecimals","tokenDecimals","selectedItem","filter","item","opts","btc","code","ethBalance","getFiat","smsConfirmed","getFiatBalance","actualyMinAmount","isCoinAddress","BTC","addressIsCorrect","intl","portalUI","defaultMin","isGreaterThan","txConfirmLink","multisign","linked","all","dataCurrency","toUpperCase","isDisabled","dp","NanReplacement","check","value","isLessThanOrEqualTo","width","fontSize","labels","withdrowModal","defaultMessage","ownTxPlaceholder","formRender","handleError","handleScan","br","marginBottom","textAlign","toFixed","marginLeft","sellAllBalance","handleSubmit","handleClose","errorName","formatMessage","errorMessage","message","handleReady","Component","string","object"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\nimport config from 'app-config'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from '../WithdrawModal/WithdrawModal.scss'\r\nimport ownStyle from './WithdrawModalMultisigUser.scss'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Button from 'components/controls/Button/Button'\r\nimport { ShareLink } from 'components/controls'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { isMobile } from 'react-device-detect'\r\nimport InvoiceInfoBlock from 'components/InvoiceInfoBlock/InvoiceInfoBlock'\r\n\r\nimport typeforce from 'swap.app/util/typeforce'\r\n// import { isCoinAddress } from 'swap.app/util/typeforce'\r\nimport minAmount from 'helpers/constants/minAmount'\r\nimport { inputReplaceCommaWithDot } from 'helpers/domUtils'\r\nimport links from 'helpers/links'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport QrReader from 'components/QrReader'\r\nimport { getFullOrigin } from 'helpers/links'\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\n@injectIntl\r\n@connect(\r\n  ({\r\n    user: {\r\n      activeFiat,\r\n      btcMultisigUserData,\r\n      btcMultisigUserData: { wallets },\r\n    },\r\n    ui: { dashboardModalsAllowed },\r\n  }) => ({\r\n    activeFiat,\r\n    items: [btcMultisigUserData, ...wallets],\r\n    dashboardView: dashboardModalsAllowed,\r\n  })\r\n)\r\n@cssModules({ ...styles, ...ownStyle }, { allowMultiple: true })\r\nexport default class WithdrawModalMultisigUser extends React.Component<any, any> {\r\n  props: any\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    data: PropTypes.object,\r\n  }\r\n\r\n  broadcastCancelFunc: any\r\n  fiatRates: any\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {\r\n      data: { currency, amount, toAddress, address },\r\n      items,\r\n    } = props\r\n\r\n    //@\r\n    const currentDecimals = constants.tokenDecimals.btcmultisig\r\n\r\n    const selectedItem = items.filter((item) => item.address === address)[0]\r\n\r\n    this.broadcastCancelFunc = false\r\n\r\n    let usedAdminFee: any = false\r\n\r\n    let min = minAmount['btc_multisig_2n2']\r\n\r\n    if (config && config.opts && config.opts.fee && config.opts.fee.btc) {\r\n      usedAdminFee = config.opts.fee.btc\r\n      if (usedAdminFee) {\r\n        // miner fee + minimal admin fee\r\n        min = new BigNumber(min).plus(usedAdminFee.min).toNumber()\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      usedAdminFee,\r\n      step: 'fillform',\r\n      isShipped: false,\r\n      address: toAddress ? toAddress : '',\r\n      amount: amount ? amount : '',\r\n      code: '',\r\n      minus: '',\r\n      balance: selectedItem.balance || 0,\r\n      ethBalance: null,\r\n      currentDecimals,\r\n      getFiat: 0,\r\n      error: false,\r\n      smsConfirmed: false,\r\n      txRaw: '',\r\n      isLinkCopied: false,\r\n      ownTx: '',\r\n      min,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { exCurrencyRate } = this.state\r\n    const {\r\n      data: { currency },\r\n    } = this.props\r\n\r\n    this.setBalanceOnState(currency)\r\n\r\n    this.fiatRates = {}\r\n    this.getFiatBalance()\r\n    this.actualyMinAmount()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.broadcastCancelFunc) this.broadcastCancelFunc()\r\n  }\r\n\r\n  actualyMinAmount = async () => {\r\n    const { usedAdminFee } = this.state\r\n\r\n    let min: any = await helpers['btc'].estimateFeeValue({ method: 'send_multisig', speed: 'fast' })\r\n    minAmount['btc_multisig_2n2'] = min\r\n\r\n    if (usedAdminFee) {\r\n      min = new BigNumber(min).plus(usedAdminFee.min).toNumber()\r\n    }\r\n\r\n    this.setState({\r\n      min,\r\n    })\r\n  }\r\n\r\n  setBalanceOnState = async (currency) => {\r\n    const {\r\n      data: { address },\r\n    } = this.props\r\n\r\n    const {\r\n      //@\r\n      unconfirmedBalance,\r\n      //@\r\n      balance,\r\n    } = await actions.btcmultisig.getAddrBalance(address)\r\n\r\n    const finalBalance =\r\n      unconfirmedBalance !== undefined && unconfirmedBalance < 0\r\n        ? new BigNumber(balance).plus(unconfirmedBalance).toString()\r\n        : balance\r\n\r\n    this.setState(() => ({\r\n      balance: finalBalance,\r\n    }))\r\n  }\r\n\r\n  getFiatBalance = async () => {\r\n    const {\r\n      data: { currency },\r\n      activeFiat,\r\n    } = this.props\r\n\r\n    const exCurrencyRate = await actions.user.getExchangeRate(currency, activeFiat.toLowerCase())\r\n\r\n    this.fiatRates[currency] = exCurrencyRate\r\n\r\n    this.setState(() => ({\r\n      exCurrencyRate,\r\n    }))\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    const { address: to, amount, ownTx } = this.state\r\n    const {\r\n      data: { currency, address, balance, invoice, onReady },\r\n      name,\r\n    } = this.props\r\n\r\n    this.setState(() => ({ isShipped: true }))\r\n\r\n    this.setBalanceOnState(currency)\r\n\r\n    let sendOptions = {\r\n      to,\r\n      amount,\r\n      speed: 'fast',\r\n    }\r\n\r\n    if (invoice && ownTx) {\r\n      await actions.invoices.markInvoice(invoice.id, 'ready', ownTx, address)\r\n      actions.loader.hide()\r\n      actions.notifications.show(constants.notifications.SuccessWithdraw, {\r\n        amount,\r\n        currency,\r\n        address: to,\r\n      })\r\n      this.setState(() => ({ isShipped: false, error: false }))\r\n      actions.modals.close(name)\r\n      if (onReady instanceof Function) {\r\n        onReady()\r\n      }\r\n      return\r\n    }\r\n\r\n    sendOptions = {\r\n      ...sendOptions,\r\n      //@\r\n      from: address,\r\n    }\r\n\r\n    //@\r\n    const result = await actions.btcmultisig.send(sendOptions)\r\n\r\n    let txId = false\r\n\r\n    if (result) {\r\n      //@\r\n      txId = await actions.multisigTx.broadcast({\r\n        sender: address,\r\n        destination: to,\r\n        amount,\r\n        fee: 0.0001, // actions.helpers.lastBtcFee\r\n        rawTx: result,\r\n      })\r\n    }\r\n\r\n    this.broadcastCancelFunc = actions.btcmultisig.broadcastTX2Room(\r\n      {\r\n        txRaw: result,\r\n        txId,\r\n        address: to,\r\n        amount,\r\n        currency: 'BTC',\r\n        invoice,\r\n      },\r\n      () => {\r\n        this.setState({\r\n          step: 'rawlink',\r\n          txRaw: result,\r\n          txId,\r\n          isShipped: false,\r\n        })\r\n      },\r\n      () => {\r\n        this.setState({\r\n          step: 'rawlink',\r\n          txRaw: result,\r\n          txId,\r\n          isShipped: false,\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  sellAllBalance = async () => {\r\n    const { amount, balance, currency, min, usedAdminFee } = this.state\r\n\r\n    const { data } = this.props\r\n\r\n    let minFee = min\r\n\r\n    if (usedAdminFee) {\r\n      let feeFromAmount = new BigNumber(usedAdminFee.fee).dividedBy(100).multipliedBy(balance)\r\n      minFee = new BigNumber(minFee).plus(feeFromAmount).toNumber()\r\n    }\r\n\r\n    const balanceMiner = balance\r\n      ? balance !== 0\r\n        ? new BigNumber(balance).minus(minFee).toString()\r\n        : balance\r\n      : 'Wait please. Loading...'\r\n\r\n    this.setState({\r\n      amount: balanceMiner,\r\n    })\r\n  }\r\n\r\n  addressIsCorrect() {\r\n    const {\r\n      data: { currency },\r\n    } = this.props\r\n    const { address } = this.state\r\n\r\n    if (!typeforce.isCoinAddress.BTC(address)) {\r\n      return actions.btc.addressIsCorrect(address)\r\n    } else return true\r\n  }\r\n\r\n  handleCopyLink = () => {\r\n    this.setState(\r\n      {\r\n        isLinkCopied: true,\r\n      },\r\n      () => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isLinkCopied: false,\r\n          })\r\n        }, 500)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleReady = () => {\r\n    const { name } = this.props\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  openScan = () => {\r\n    const { openScanCam } = this.state\r\n\r\n    this.setState(() => ({\r\n      openScanCam: !openScanCam,\r\n    }))\r\n  }\r\n\r\n  handleError = (err) => {\r\n    console.error(err)\r\n  }\r\n\r\n  handleScan = (data) => {\r\n    if (data) {\r\n      const address = data.split(':')[1].split('?')[0]\r\n      const amount = data.split('=')[1]\r\n      this.setState(() => ({\r\n        address,\r\n        amount,\r\n      }))\r\n      this.openScan()\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { name } = this.props\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      address,\r\n      amount,\r\n      code,\r\n      balance,\r\n      isShipped,\r\n      minus,\r\n      exCurrencyRate,\r\n      currentDecimals,\r\n      error,\r\n      step,\r\n      txRaw,\r\n      txId,\r\n      isLinkCopied,\r\n      ownTx,\r\n      openScanCam,\r\n      usedAdminFee,\r\n    } = this.state\r\n\r\n    const {\r\n      name,\r\n      data: { currency, invoice },\r\n      items,\r\n      intl,\r\n      portalUI,\r\n    } = this.props\r\n\r\n    let { min, min: defaultMin } = this.state\r\n\r\n    if (usedAdminFee) {\r\n      if (amount) {\r\n        let feeFromAmount = new BigNumber(usedAdminFee.fee).dividedBy(100).multipliedBy(amount)\r\n        if (new BigNumber(usedAdminFee.min).isGreaterThan(feeFromAmount))\r\n          feeFromAmount = new BigNumber(usedAdminFee.min)\r\n\r\n        min = new BigNumber(min).plus(feeFromAmount).toNumber() // Admin fee in satoshi\r\n      }\r\n    }\r\n\r\n    let txConfirmLink = `${getFullOrigin()}${links.multisign}/btc/confirm/${txId}`\r\n    if (invoice) {\r\n      txConfirmLink = `${getFullOrigin()}${links.multisign}/btc/confirminvoice/${\r\n        invoice.id\r\n      }|${txId}`\r\n    }\r\n    //@\r\n    const linked = Link.all(this, 'address', 'amount', 'code', 'ownTx')\r\n\r\n    const dataCurrency = currency.toUpperCase()\r\n\r\n    const isDisabled =\r\n      !address ||\r\n      !amount ||\r\n      isShipped ||\r\n      ownTx ||\r\n      !this.addressIsCorrect() ||\r\n      new BigNumber(amount).isGreaterThan(balance) ||\r\n      new BigNumber(amount).dp() > currentDecimals\r\n\r\n    const NanReplacement = balance || '...'\r\n    const getFiat = amount * exCurrencyRate\r\n\r\n    if (new BigNumber(amount).isGreaterThan(0)) {\r\n      linked.amount.check(\r\n        (value) => new BigNumber(value).isLessThanOrEqualTo(balance),\r\n        <div style={{ width: '340px', fontSize: '12px' }}>\r\n          <FormattedMessage\r\n            id=\"Withdrow170\"\r\n            defaultMessage=\"The amount must be no more than your balance\"\r\n            values={{\r\n              min,\r\n              currency: `${currency}`,\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (this.state.amount < 0) {\r\n      this.setState({\r\n        amount: '',\r\n        minus: true,\r\n      })\r\n    }\r\n\r\n    const labels = defineMessages({\r\n      withdrowModal: {\r\n        id: 'withdrowTitle271',\r\n        defaultMessage: `Send`,\r\n      },\r\n      ownTxPlaceholder: {\r\n        id: 'withdrawOwnTxPlaceholder',\r\n        defaultMessage: 'Если оплатили с другого источника',\r\n      },\r\n    })\r\n\r\n    const formRender = (\r\n      <Fragment>\r\n        {openScanCam && (\r\n          <QrReader\r\n            openScan={this.openScan}\r\n            handleError={this.handleError}\r\n            handleScan={this.handleScan}\r\n          />\r\n        )}\r\n        {invoice && <InvoiceInfoBlock invoiceData={invoice} />}\r\n        {step === 'fillform' && (\r\n          <Fragment>\r\n            <p styleName=\"notice dashboardViewNotice\">\r\n              <FormattedMessage\r\n                id=\"Withdrow213\"\r\n                defaultMessage=\"Please note: Fee is {minAmount} {data}.{br}Your balance must exceed this sum to perform transaction\"\r\n                values={{ minAmount: <span>{min}</span>, br: <br />, data: `${dataCurrency}` }}\r\n              />\r\n            </p>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <div styleName=\"highLevel\" style={{ marginBottom: '20px' }}>\r\n              <FieldLabel>\r\n                <FormattedMessage id=\"Withdrow1194\" defaultMessage=\"Address \" />{' '}\r\n                <Tooltip id=\"WtH203\">\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <FormattedMessage\r\n                      id=\"WTH275\"\r\n                      defaultMessage=\"Make sure the wallet you{br}are sending the funds to supports {currency}\"\r\n                      values={{ br: <br />, currency: `${currency.toUpperCase()}` }}\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </FieldLabel>\r\n              <Input\r\n                valueLink={linked.address}\r\n                focusOnInit\r\n                pattern=\"0-9a-zA-Z:\"\r\n                placeholder={`Enter ${currency.toUpperCase()} address to transfer`}\r\n                qr\r\n                withMargin\r\n                openScan={this.openScan}\r\n              />\r\n              {address && !this.addressIsCorrect() && (\r\n                <div styleName=\"rednote\">\r\n                  <FormattedMessage\r\n                    id=\"WithdrawIncorectAddress\"\r\n                    defaultMessage=\"Your address not correct\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div styleName={`lowLevel ${isDark ? 'dark' : ''}`} style={{ marginBottom: '50px' }}>\r\n              <p styleName=\"balance\">\r\n                {balance} {currency.toUpperCase()}\r\n              </p>\r\n              <FieldLabel>\r\n                <FormattedMessage id=\"Withdrow118\" defaultMessage=\"Amount \" />\r\n              </FieldLabel>\r\n\r\n              <div styleName=\"group\">\r\n                <Input\r\n                  styleName=\"input\"\r\n                  valueLink={linked.amount}\r\n                  pattern=\"0-9\\.\"\r\n                  placeholder=\"Enter the amount\"\r\n                  fiat={getFiat.toFixed(2)}\r\n                  onKeyDown={inputReplaceCommaWithDot}\r\n                />\r\n                <div style={{ marginLeft: '15px' }}>\r\n                  <Button blue big onClick={this.sellAllBalance} data-tip data-for=\"Withdrow134\">\r\n                    <FormattedMessage id=\"Select210\" defaultMessage=\"MAX\" />\r\n                  </Button>\r\n                </div>\r\n                {!isMobile && (\r\n                  <ReactTooltip id=\"Withdrow134\" type=\"light\" effect=\"solid\" styleName=\"r-tooltip\">\r\n                    <FormattedMessage\r\n                      id=\"WithdrawButton32\"\r\n                      defaultMessage=\"when you click this button, in the field, an amount equal to your balance minus the miners commission will appear\"\r\n                    />\r\n                  </ReactTooltip>\r\n                )}\r\n                {!linked.amount.error && (\r\n                  <div styleName={minus ? 'rednote' : 'note'}>\r\n                    <FormattedMessage\r\n                      id=\"WithdrawModal256\"\r\n                      defaultMessage=\"No less than {minAmount}\"\r\n                      values={{ minAmount: `${defaultMin}` }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div styleName=\"sendBtnsWrapper\">\r\n              <div styleName=\"actionBtn\">\r\n                <Button blue big fill disabled={isDisabled} onClick={this.handleSubmit}>\r\n                  {isShipped ? (\r\n                    <Fragment>\r\n                      <FormattedMessage id=\"WithdrawModal11212\" defaultMessage=\"Processing ...\" />\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <FormattedMessage id=\"WithdrawModal111\" defaultMessage=\"Send\" />\r\n                    </Fragment>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n              <div styleName=\"actionBtn\">\r\n                <Button big fill gray onClick={this.handleClose}>\r\n                  <Fragment>\r\n                    <FormattedMessage id=\"WithdrawModalCancelBtn\" defaultMessage=\"Cancel\" />\r\n                  </Fragment>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            {error && (\r\n              <div styleName=\"rednote\">\r\n                <FormattedMessage\r\n                  id=\"WithdrawModalErrorSend\"\r\n                  defaultMessage=\"{errorName} {currency}:{br}{errorMessage}\"\r\n                  values={{\r\n                    errorName: intl.formatMessage(error.name),\r\n                    errorMessage: intl.formatMessage(error.message),\r\n                    br: <br />,\r\n                    currency: `${currency}`,\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            {invoice && (\r\n              <Fragment>\r\n                <hr />\r\n                <div\r\n                  styleName={`lowLevel ${isDark ? 'dark' : ''}`}\r\n                  style={{ marginBottom: '50px' }}\r\n                >\r\n                  <div styleName=\"groupField\">\r\n                    <div styleName=\"downLabel\">\r\n                      <FieldLabel inRow>\r\n                        <span styleName=\"mobileFont\">\r\n                          <FormattedMessage id=\"WithdrowOwnTX\" defaultMessage=\"Или укажите TX\" />\r\n                        </span>\r\n                      </FieldLabel>\r\n                    </div>\r\n                  </div>\r\n                  <div styleName=\"group\">\r\n                    <Input\r\n                      styleName=\"input\"\r\n                      valueLink={linked.ownTx}\r\n                      placeholder={`${intl.formatMessage(labels.ownTxPlaceholder)}`}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button\r\n                  styleName=\"buttonFull\"\r\n                  blue\r\n                  big\r\n                  fullWidth\r\n                  disabled={!ownTx || isShipped}\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  {isShipped ? (\r\n                    <Fragment>\r\n                      <FormattedMessage id=\"WithdrawModal11212\" defaultMessage=\"Processing ...\" />\r\n                    </Fragment>\r\n                  ) : (\r\n                    <FormattedMessage\r\n                      id=\"WithdrawModalInvoiceSaveTx\"\r\n                      defaultMessage=\"Отметить как оплаченный\"\r\n                    />\r\n                  )}\r\n                </Button>\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n        {step === 'rawlink' && (\r\n          <Fragment>\r\n            <p styleName=\"notice dashboardViewNotice\">\r\n              <FormattedMessage id=\"WithdrawMSUserReady\" defaultMessage=\"TX confirm link\" />\r\n              <br />\r\n              <FormattedMessage\r\n                id=\"WithdrawMSUserMessage\"\r\n                defaultMessage=\"Send this link to other wallet owner\"\r\n              />\r\n            </p>\r\n            <div styleName=\"highLevel\">\r\n              <div styleName=\"groupField\"></div>\r\n              <div>\r\n                <ShareLink link={txConfirmLink} />\r\n              </div>\r\n            </div>\r\n            <div styleName=\"centerAlign\">\r\n              <Button styleName=\"buttonFull\" big blue fullWidth onClick={this.handleReady}>\r\n                <FormattedMessage id=\"WithdrawMSUserFinish\" defaultMessage=\"Ready\" />\r\n              </Button>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    )\r\n    return portalUI ? (\r\n      formRender\r\n    ) : (\r\n      <Modal\r\n        name={name}\r\n        title={`${intl.formatMessage(labels.withdrowModal)}${' '}${currency.toUpperCase()}`}\r\n      >\r\n        {formRender}\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}