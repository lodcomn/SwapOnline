{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\forms\\MnemonicInput\\MnemonicInput.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\forms\\MnemonicInput\\MnemonicInput.tsx","mtime":1614842913942},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKCnZhciBfZGVjLCBfY2xhc3MsIF90ZW1wOwoKZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9CgppbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnOwppbXBvcnQgeyBjb25zdGFudHMgfSBmcm9tICdoZWxwZXJzJzsKaW1wb3J0IGNzc01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnOwppbXBvcnQgc3R5bGVzIGZyb20gJy4vTW5lbW9uaWNJbnB1dC5jc3MnOwppbXBvcnQgeyBpbmplY3RJbnRsLCBkZWZpbmVNZXNzYWdlcyB9IGZyb20gJ3JlYWN0LWludGwnOwppbXBvcnQgeyBpc01vYmlsZSB9IGZyb20gJ3JlYWN0LWRldmljZS1kZXRlY3QnOwppbXBvcnQgKiBhcyBiaXAzOSBmcm9tICdiaXAzOSc7CmltcG9ydCBSZWFjdFRhZ3MgZnJvbSAncmVhY3QtdGFnLWF1dG9jb21wbGV0ZSc7CnZhciBsYW5nUHJlZml4ID0gIk1uZW1vbmljSW5wdXRDb21wb25lbnQiOwp2YXIgbGFuZ0xhYmVscyA9IGRlZmluZU1lc3NhZ2VzKHsKICBwbGFjZWhvbGRlcjogewogICAgaWQ6ICIiLmNvbmNhdChsYW5nUHJlZml4LCAiX1BsYWNlaG9sZGVyIiksCiAgICBkZWZhdWx0TWVzc2FnZTogIlx1MDQxRFx1MDQzMFx1MDQ0N1x1MDQzRFx1MDQzOFx1MDQ0Mlx1MDQzNSBcdTA0MzJcdTA0MzJcdTA0M0VcdTA0MzRcdTA0MzhcdTA0NDJcdTA0NEMgXHUwNDQxXHUwNDM1XHUwNDNBXHUwNDQwXHUwNDM1XHUwNDQyXHUwNDNEXHUwNDQzXHUwNDRFIFx1MDQ0NFx1MDQ0MFx1MDQzMFx1MDQzN1x1MDQ0MyIKICB9LAogIGRlbGV0ZVRleHQ6IHsKICAgIGlkOiAiIi5jb25jYXQobGFuZ1ByZWZpeCwgIl9EZWxldGVUZXh0IiksCiAgICBkZWZhdWx0TWVzc2FnZTogIlx1MDQxRFx1MDQzMFx1MDQzNlx1MDQzQ1x1MDQzOFx1MDQ0Mlx1MDQzNSwgXHUwNDQ3XHUwNDQyXHUwNDNFXHUwNDMxXHUwNDRCIFx1MDQ0M1x1MDQzNFx1MDQzMFx1MDQzQlx1MDQzOFx1MDQ0Mlx1MDQ0QyBcdTA0NDFcdTA0M0JcdTA0M0VcdTA0MzJcdTA0M0UiCiAgfQp9KTsKdmFyIGlzRGFyayA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGNvbnN0YW50cy5sb2NhbFN0b3JhZ2UuaXNEYXJrKTsKdmFyIE1uZW1vbmljSW5wdXQgPSAoX2RlYyA9IGNzc01vZHVsZXMoc3R5bGVzLCB7CiAgYWxsb3dNdWx0aXBsZTogdHJ1ZQp9KSwgaW5qZWN0SW50bChfY2xhc3MgPSBfZGVjKF9jbGFzcyA9IChfdGVtcCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudCkgewogIF9pbmhlcml0cyhNbmVtb25pY0lucHV0LCBfQ29tcG9uZW50KTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihNbmVtb25pY0lucHV0KTsKCiAgLyogDQogICogVGhpcyBwaHJhc2UganVzdCBmb3IgdGVzdA0KICAqIElmIGNvbmZpZyBlbnRyeSBwb2ludCBlcXVhbHMgdGVzdG5ldA0KICAqIFRoZW4gZmlsbCBpbiB0aGUgaW5wdXQgd2l0aCBhIHRlc3QgcGhyYXNlDQogICovCiAgZnVuY3Rpb24gTW5lbW9uaWNJbnB1dChwcm9wcykgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNbmVtb25pY0lucHV0KTsKCiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJURVNUTkVUX1RFU1RfUEhSQVNFIiwgJ3Zhc3QgYnJvbnplIG95c3RlciB0cmFkZSBsb3ZlIG9uY2UgZm9nIG1hdGNoIHJhaWwgbG9jayBjYWtlIHNjaWVuY2UnKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJURVNUTkVUX1RBR1MiLCB2b2lkIDApOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgImlzQXV0b2ZpbGwiLCBmYWxzZSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAicHJvcHMiLCB2b2lkIDApOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInN0YXRlIiwgdm9pZCAwKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJyZWFjdFRhZ3MiLCB2b2lkIDApOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgIm9uRGVsZXRlIiwgZnVuY3Rpb24gKGkpIHsKICAgICAgdmFyIHRhZ3MgPSBfdGhpcy5zdGF0ZS50YWdzLnNsaWNlKDApOwoKICAgICAgdGFncy5zcGxpY2UoaSwgMSk7CgogICAgICBfdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgdGFnczogdGFncwogICAgICB9LCBfdGhpcy5vbkNoYW5nZUNhbGxiYWNrKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgIm9uQWRkaXRpb24iLCBmdW5jdGlvbiAodGFnKSB7CiAgICAgIC8qIA0KICAgICAgKiB0aGVyZSBpcyBwcm9iYWJseSBhIGJldHRlciBzb2x1dGlvbiB0byBhdXRvZmlsbCBSZWFjdFRhZ3MgY29tcG9uZW50IA0KICAgICAgKiB5b3UgbmVlZCB0byBjYWxsIHRoaXMgY2FsbGJhY2sgYXQgbGVhc3Qgb25jZQ0KICAgICAgKiBzbyBwYXNzIHRoZSBsYXN0IGVsZW1lbnQgaW4gdGhlIGFyZ3VtZW50DQogICAgICAqLwogICAgICB2YXIgcmV0dXJuVGFncyA9IGZ1bmN0aW9uIHJldHVyblRhZ3MoKSB7CiAgICAgICAgaWYgKF90aGlzLmlzQXV0b2ZpbGwpIHsKICAgICAgICAgIHZhciB0ZXN0bmV0VGFnc1dpdGhvdXRMYXN0RWxlbWVudCA9IF90aGlzLlRFU1RORVRfVEFHUy5maWx0ZXIoZnVuY3Rpb24gKHRhZywgaW5kZXgpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLlRFU1RORVRfVEFHUy5sZW5ndGggLSAxICE9PSBpbmRleDsKICAgICAgICAgIH0pOwoKICAgICAgICAgIF90aGlzLmlzQXV0b2ZpbGwgPSBmYWxzZTsKICAgICAgICAgIHJldHVybiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRlc3RuZXRUYWdzV2l0aG91dExhc3RFbGVtZW50KSwgW3RhZ10pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShfdGhpcy5zdGF0ZS50YWdzKSwgW3RhZ10pOwogICAgICAgIH0KICAgICAgfTsKCiAgICAgIHZhciB0YWdzID0gcmV0dXJuVGFncygpOwoKICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgIHRhZ3M6IHRhZ3MKICAgICAgfSwgX3RoaXMub25DaGFuZ2VDYWxsYmFjayk7CiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJvbklucHV0IiwgZnVuY3Rpb24gKHF1ZXJ5KSB7CiAgICAgIHZhciBhbGxvd2Vk0KFoYXJzID0gL1tBLVphLXpdLzsKICAgICAgdmFyIGlzUGFzdGVXb3JkcyA9IHF1ZXJ5LnRyaW0oKS5zcGxpdCgvXHMrL2cpOwoKICAgICAgaWYgKHF1ZXJ5Lm1hdGNoKGFsbG93ZWTQoWhhcnMpID09PSBudWxsKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0gZWxzZSBpZiAoaXNQYXN0ZVdvcmRzLmxlbmd0aCA9PT0gMTIpIHsKICAgICAgICAvKiBUaGlzIHBhc3RlZCBvZiBwaHJhc2UgKi8KICAgICAgICB2YXIgdGFncyA9IGlzUGFzdGVXb3Jkcy5tYXAoZnVuY3Rpb24gKG5hbWUsIGlkKSB7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgIG5hbWU6IG5hbWUKICAgICAgICAgIH07CiAgICAgICAgfSk7CgogICAgICAgIF90aGlzLnNldFN0YXRlKHsKICAgICAgICAgIHRhZ3M6IHRhZ3MKICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpcy5yZWFjdFRhZ3MuY3VycmVudC5jbGVhcklucHV0KCk7CgogICAgICAgICAgX3RoaXMub25DaGFuZ2VDYWxsYmFjaygpOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKCFfdGhpcy5zdGF0ZS5idXN5KSB7CiAgICAgICAgX3RoaXMuc2V0U3RhdGUoewogICAgICAgICAgYnVzeTogdHJ1ZQogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gZmV0Y2goInF1ZXJ5PSIuY29uY2F0KHF1ZXJ5KSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgICAgIGJ1c3k6IGZhbHNlCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSk7CgogICAgdmFyIF9wcm9wcyRhdXRvRmlsbCA9IHByb3BzLmF1dG9GaWxsLAogICAgICAgIGF1dG9GaWxsID0gX3Byb3BzJGF1dG9GaWxsID09PSB2b2lkIDAgPyBmYWxzZSA6IF9wcm9wcyRhdXRvRmlsbDsKICAgIHZhciBzdWdnZXN0aW9ucyA9IGJpcDM5LndvcmRsaXN0cy5lbmdsaXNoLm1hcChmdW5jdGlvbiAobmFtZSwgaWQpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpZDogaWQsCiAgICAgICAgbmFtZTogbmFtZQogICAgICB9OwogICAgfSk7CgogICAgaWYgKGF1dG9GaWxsKSB7CiAgICAgIF90aGlzLmlzQXV0b2ZpbGwgPSB0cnVlOwogICAgICBfdGhpcy5URVNUTkVUX1RBR1MgPSBfdGhpcy5URVNUTkVUX1RFU1RfUEhSQVNFLnNwbGl0KCcgJykubWFwKGZ1bmN0aW9uICh3b3JkKSB7CiAgICAgICAgcmV0dXJuIHN1Z2dlc3Rpb25zLmZpbmQoZnVuY3Rpb24gKG9iaikgewogICAgICAgICAgcmV0dXJuIG9iai5uYW1lID09PSB3b3JkOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KCiAgICBfdGhpcy5zdGF0ZSA9IHsKICAgICAgdGFnczogW10sCiAgICAgIHN1Z2dlc3Rpb25zOiBzdWdnZXN0aW9ucywKICAgICAgaXNQbGFjZWhvbGRlclZpc2libGU6IHRydWUKICAgIH07CiAgICBfdGhpcy5yZWFjdFRhZ3MgPSAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlUmVmKCk7CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTW5lbW9uaWNJbnB1dCwgW3sKICAgIGtleTogImNvbXBvbmVudERpZE1vdW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHsKICAgICAgdmFyIF90aGlzJHByb3BzJGF1dG9GaWxsID0gdGhpcy5wcm9wcy5hdXRvRmlsbCwKICAgICAgICAgIGF1dG9GaWxsID0gX3RoaXMkcHJvcHMkYXV0b0ZpbGwgPT09IHZvaWQgMCA/IGZhbHNlIDogX3RoaXMkcHJvcHMkYXV0b0ZpbGw7CgogICAgICBpZiAoYXV0b0ZpbGwpIHsKICAgICAgICAvLyB3aXRob3V0IGxhc3QgZWxlbWVudAogICAgICAgIHRoaXMub25BZGRpdGlvbih0aGlzLlRFU1RORVRfVEFHU1t0aGlzLlRFU1RORVRfVEFHUy5sZW5ndGggLSAxXSk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJvbkNoYW5nZUNhbGxiYWNrIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBvbkNoYW5nZUNhbGxiYWNrKCkgewogICAgICB2YXIgb25DaGFuZ2UgPSB0aGlzLnByb3BzLm9uQ2hhbmdlLAogICAgICAgICAgdGFncyA9IHRoaXMuc3RhdGUudGFnczsKICAgICAgdmFyIHdvcmRzID0gdGFncy5tYXAoZnVuY3Rpb24gKHRhZ0RhdGEpIHsKICAgICAgICByZXR1cm4gdGFnRGF0YS5uYW1lOwogICAgICB9KTsKICAgICAgdGhpcy5zZXRTdGF0ZSh7CiAgICAgICAgaXNQbGFjZWhvbGRlclZpc2libGU6IHdvcmRzLmxlbmd0aCA8IDEyCiAgICAgIH0pOwogICAgICB2YXIgbW5lbW9uaWMgPSB3b3Jkcy5qb2luKCIgIik7CgogICAgICBpZiAob25DaGFuZ2UgaW5zdGFuY2VvZiBGdW5jdGlvbikgewogICAgICAgIG9uQ2hhbmdlKG1uZW1vbmljKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLAogICAgICAgICAgaW50bCA9IF90aGlzJHByb3BzLmludGwsCiAgICAgICAgICBmdWxsV2lkdGggPSBfdGhpcyRwcm9wcy5mdWxsV2lkdGgsCiAgICAgICAgICBfdGhpcyRzdGF0ZSA9IHRoaXMuc3RhdGUsCiAgICAgICAgICB0YWdzID0gX3RoaXMkc3RhdGUudGFncywKICAgICAgICAgIHN1Z2dlc3Rpb25zID0gX3RoaXMkc3RhdGUuc3VnZ2VzdGlvbnMsCiAgICAgICAgICBpc1BsYWNlaG9sZGVyVmlzaWJsZSA9IF90aGlzJHN0YXRlLmlzUGxhY2Vob2xkZXJWaXNpYmxlLAogICAgICAgICAgcmVhY3RUYWdzID0gdGhpcy5yZWFjdFRhZ3M7CiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgewogICAgICAgIHRyYW5zbGF0ZTogIm5vIiwKICAgICAgICBjbGFzc05hbWU6ICJub3RyYW5zbGF0ZSBtbmVtb25pY0lucHV0ICIuY29uY2F0KGlzRGFyayA/ICctLWlzLWRhcmsnIDogJycsICIgIikuY29uY2F0KGlzTW9iaWxlID8gJy0taXMtbW9iaWxlJyA6ICcnLCAiICIpLmNvbmNhdChmdWxsV2lkdGggPyAnLS1mdWxsLXdpZHRoJyA6ICcnKQogICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSZWFjdFRhZ3MsIHsKICAgICAgICByZWY6IHJlYWN0VGFncywKICAgICAgICB0YWdzOiB0YWdzLAogICAgICAgIGF1dG9yZXNpemU6IHRydWUsCiAgICAgICAgc3VnZ2VzdGlvbnM6IHN1Z2dlc3Rpb25zLAogICAgICAgIG9uRGVsZXRlOiB0aGlzLm9uRGVsZXRlLAogICAgICAgIG9uQWRkaXRpb246IHRoaXMub25BZGRpdGlvbiwKICAgICAgICBvbklucHV0OiB0aGlzLm9uSW5wdXQsCiAgICAgICAgcGxhY2Vob2xkZXJUZXh0OiBpc1BsYWNlaG9sZGVyVmlzaWJsZSA/IGludGwuZm9ybWF0TWVzc2FnZShsYW5nTGFiZWxzLnBsYWNlaG9sZGVyKSA6ICcnLAogICAgICAgIHJlbW92ZUJ1dHRvblRleHQ6IGludGwuZm9ybWF0TWVzc2FnZShsYW5nTGFiZWxzLmRlbGV0ZVRleHQpLAogICAgICAgIGRlbGltaXRlcnM6IFsiRW50ZXIiLCAiVGFiIiwgIiAiLCAiLCJdCiAgICAgIH0pKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBNbmVtb25pY0lucHV0Owp9KENvbXBvbmVudCksIF90ZW1wKSkgfHwgX2NsYXNzKSB8fCBfY2xhc3MpOwpleHBvcnQgeyBNbmVtb25pY0lucHV0IGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/forms/MnemonicInput/MnemonicInput.tsx"],"names":["React","Component","constants","cssModules","styles","injectIntl","defineMessages","isMobile","bip39","ReactTags","langPrefix","langLabels","placeholder","id","defaultMessage","deleteText","isDark","localStorage","getItem","MnemonicInput","allowMultiple","props","i","tags","state","slice","splice","setState","onChangeCallback","tag","returnTags","isAutofill","testnetTagsWithoutLastElement","TESTNET_TAGS","filter","index","length","query","allowedСhars","isPasteWords","trim","split","match","map","name","reactTags","current","clearInput","busy","fetch","then","result","autoFill","suggestions","wordlists","english","TESTNET_TEST_PHRASE","word","find","obj","isPlaceholderVisible","createRef","onAddition","onChange","words","tagData","mnemonic","join","Function","intl","fullWidth","onDelete","onInput","formatMessage"],"mappings":"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","sourcesContent":["import React, { Component, RefObject } from 'react'\r\nimport { constants } from 'helpers'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './MnemonicInput.css'\r\n\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport * as bip39 from 'bip39'\r\nimport ReactTags from 'react-tag-autocomplete'\r\n\r\nconst langPrefix = `MnemonicInputComponent`\r\nconst langLabels = defineMessages({\r\n  placeholder: {\r\n    id: `${langPrefix}_Placeholder`,\r\n    defaultMessage: `Начните вводить секретную фразу`,\r\n  },\r\n  deleteText: {\r\n    id: `${langPrefix}_DeleteText`,\r\n    defaultMessage: `Нажмите, чтобы удалить слово`,\r\n  },\r\n})\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\ntype MnemonicInputProps = {\r\n  onChange: (string) => void\r\n  fullWidth?: boolean\r\n  autoFill?: boolean\r\n  intl?: { [key: string]: any }\r\n}\r\n\r\ntype Tags = {\r\n  id: number\r\n  name: string\r\n}[]\r\n\r\ntype MnemonicInputState = {\r\n  suggestions: Tags\r\n  tags: Tags\r\n  isPlaceholderVisible: boolean\r\n  busy?: boolean\r\n}\r\n\r\n@injectIntl\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class MnemonicInput extends Component {\r\n  /* \r\n  * This phrase just for test\r\n  * If config entry point equals testnet\r\n  * Then fill in the input with a test phrase\r\n  */\r\n  private TESTNET_TEST_PHRASE = 'vast bronze oyster trade love once fog match rail lock cake science'\r\n  private TESTNET_TAGS: Tags\r\n  private isAutofill = false\r\n\r\n  props: MnemonicInputProps\r\n  state: MnemonicInputState\r\n  reactTags: RefObject<any>\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    const { autoFill = false } = props\r\n    const suggestions = bip39.wordlists.english.map((name, id) => { return { id, name } })\r\n\r\n    if (autoFill) {\r\n      this.isAutofill = true\r\n      this.TESTNET_TAGS = this.TESTNET_TEST_PHRASE.split(' ').map(word => {\r\n        return suggestions.find(obj => obj.name === word)\r\n      })\r\n    }\r\n\r\n    this.state = {\r\n      tags: [],\r\n      suggestions,\r\n      isPlaceholderVisible: true,\r\n    }\r\n\r\n    this.reactTags = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { autoFill = false } = this.props\r\n\r\n    if (autoFill) { // without last element\r\n      this.onAddition(this.TESTNET_TAGS[this.TESTNET_TAGS.length - 1])\r\n    }\r\n  }\r\n\r\n  onChangeCallback () {\r\n    const {\r\n      props: {\r\n        onChange,\r\n      },\r\n      state: {\r\n        tags,\r\n      },\r\n    } = this\r\n\r\n    const words = tags.map(tagData => tagData.name)\r\n    this.setState({ isPlaceholderVisible: words.length < 12 })\r\n\r\n    const mnemonic = words.join(` `)\r\n\r\n    if (onChange instanceof Function) {\r\n      onChange(mnemonic)\r\n    }\r\n  }\r\n\r\n  onDelete = (i) => {\r\n    const tags = this.state.tags.slice(0)\r\n    tags.splice(i, 1)\r\n    this.setState({ tags }, this.onChangeCallback )\r\n  }\r\n\r\n  onAddition = (tag) => {\r\n    /* \r\n    * there is probably a better solution to autofill ReactTags component \r\n    * you need to call this callback at least once\r\n    * so pass the last element in the argument\r\n    */\r\n   const returnTags = () => {\r\n     if (this.isAutofill) {\r\n        const testnetTagsWithoutLastElement = this.TESTNET_TAGS.filter((tag, index) => {\r\n         return this.TESTNET_TAGS.length - 1 !== index\r\n        })\r\n        this.isAutofill = false\r\n        return [...testnetTagsWithoutLastElement, tag]\r\n      } else {\r\n        return [...this.state.tags, tag]\r\n      }\r\n    }\r\n\r\n    const tags = returnTags()\r\n    this.setState({ tags }, this.onChangeCallback )\r\n  }\r\n\r\n  onInput = (query) => {\r\n    const allowedСhars = /[A-Za-z]/\r\n    const isPasteWords = query.trim().split(/\\s+/g)\r\n\r\n    if (query.match(allowedСhars) === null) {\r\n      return null\r\n    } else if (isPasteWords.length === 12) {\r\n      /* This pasted of phrase */\r\n      const tags = isPasteWords.map((name, id) => { return { id, name } })\r\n      this.setState({ tags }, () => {\r\n        this.reactTags.current.clearInput()\r\n        this.onChangeCallback()\r\n      })\r\n    } else if (!this.state.busy) {\r\n      this.setState({ busy: true })\r\n\r\n      return fetch(`query=${query}`).then((result) => {\r\n        this.setState({ busy: false })\r\n      })\r\n    } \r\n  }\r\n\r\n  render () {\r\n    const {\r\n      props: {\r\n        intl,\r\n        fullWidth,\r\n      },\r\n      state: {\r\n        tags,\r\n        suggestions,\r\n        isPlaceholderVisible\r\n      },\r\n      reactTags,\r\n    } = this\r\n\r\n    return (\r\n      <div translate=\"no\" className={`notranslate mnemonicInput ${(isDark) ? '--is-dark' : ''} ${(isMobile) ? '--is-mobile' : ''} ${(fullWidth) ? '--full-width' : ''}`}>\r\n        <ReactTags\r\n          ref={reactTags}\r\n          tags={tags}\r\n          autoresize={true}\r\n          suggestions={suggestions}\r\n          onDelete={this.onDelete}\r\n          onAddition={this.onAddition}\r\n          onInput={this.onInput}\r\n          placeholderText={isPlaceholderVisible ? intl.formatMessage(langLabels.placeholder) : ''}\r\n          removeButtonText={intl.formatMessage(langLabels.deleteText)}\r\n          delimiters={[`Enter`, `Tab`, ` `, `,`]}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}]}