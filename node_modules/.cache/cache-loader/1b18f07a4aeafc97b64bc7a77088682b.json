{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\common\\web3connect\\providers\\WalletConnectProvider.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\common\\web3connect\\providers\\WalletConnectProvider.ts","mtime":1614842913727},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/common/web3connect/providers/WalletConnectProvider.ts"],"names":["WalletConnectConnector","UserRejectedRequestError","UserRejectedRequestErrorWalletConnect","WalletConnectProvider","web3Connect","options","_web3Connect","address","connectionInfo","localStorage","getItem","JSON","parse","e","connected","Connect","close","deactivate","removeItem","connection","console","warn","error"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,sBAAT,QAAuC,qCAAvC;AACA,SAASC,wBAAwB,IAAIC,qCAArC,QAAkF,qCAAlF;;IAGqBC,qB;;;;;AAGnB,iCAAYC,WAAZ,EAAyBC,OAAzB,EAAkC;AAAA;;AAAA;;AAChC,8BAAMA,OAAN;;AADgC,mEAFnB,IAEmB;;AAEhC,UAAKC,YAAL,GAAoBF,WAApB;AAFgC;AAGjC;;;;;kFAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEUG,gBAAAA,OAFV;AAAA,iDAGYA,OAAD,GAAY,IAAZ,GAAmB,KAH9B;;AAAA;AAAA;AAAA;AAKI;AACIC,gBAAAA,cANR,GAM8BC,YAAY,CAACC,OAAb,iBAN9B;;AAOI,oBAAI;AACF,sBAAIF,cAAJ,EAAoBA,cAAc,GAAGG,IAAI,CAACC,KAAL,CAAWJ,cAAX,CAAjB;AACrB,iBAFD,CAEE,OAAOK,CAAP,EAAU,CAAE;;AATlB,sBAUQL,cAAc,IAAIA,cAAc,CAACM,SAVzC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAWgB,KAAKC,OAAL,EAXhB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,iDAYe,IAZf;;AAAA;AAAA,iDAgBS,KAhBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAmBA,oBAAW;AACT,aAAO,KAAP;AACD;;;;iFAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,KAAKC,KAAL,EADR;;AAAA;AAAA;AAAA,uBAEQ,KAAKC,UAAL,EAFR;;AAAA;AAGER,gBAAAA,YAAY,CAACS,UAAb;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;8EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEUC,gBAAAA,UAFV;AAAA,kDAGYA,UAAD,GAAe,IAAf,GAAsB,KAHjC;;AAAA;AAAA;AAAA;;AAKI,oBAAI,wBAAejB,qCAAnB,EAA0D;AACxDkB,kBAAAA,OAAO,CAACC,IAAR,CAAa,0CAAb;AACD,iBAFD,MAEO;AACLD,kBAAAA,OAAO,CAACE,KAAR;AACD;;AATL,kDAUW,KAVX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EArCiDtB,sB;;SAA9BG,qB","sourcesContent":["import { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\r\n\r\n\r\nexport default class WalletConnectProvider extends WalletConnectConnector {\r\n  _web3Connect = null\r\n\r\n  constructor(web3Connect, options) {\r\n    super(options)\r\n    this._web3Connect = web3Connect\r\n  }\r\n\r\n  async isConnected() {\r\n    try {\r\n      const address = await super.getAccount()\r\n      return (address) ? true : false\r\n    } catch (err) {\r\n      // try restore connection\r\n      let connectionInfo: any = localStorage.getItem(`walletconnect`)\r\n      try {\r\n        if (connectionInfo) connectionInfo = JSON.parse(connectionInfo)\r\n      } catch (e) {}\r\n      if (connectionInfo && connectionInfo.connected) {\r\n        if (await this.Connect()) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  isLocked() {\r\n    return false\r\n  }\r\n\r\n  async Disconnect() {\r\n    await this.close()\r\n    await this.deactivate()\r\n    localStorage.removeItem(`walletconnect`)\r\n  }\r\n\r\n  async Connect() {\r\n    try {\r\n      const connection = await super.activate()\r\n      return (connection) ? true : false\r\n    } catch (err) {\r\n      if (err instanceof UserRejectedRequestErrorWalletConnect) {\r\n        console.warn('User reject connect to Injected provider')\r\n      } else {\r\n        console.error(err)\r\n      }\r\n      return false\r\n    }\r\n  }\r\n}"]}]}