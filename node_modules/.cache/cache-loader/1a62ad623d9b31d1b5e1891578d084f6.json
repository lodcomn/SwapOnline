{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.swap\\Flow.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.swap\\Flow.ts","mtime":1614850450764},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIkBiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCi8vIEB0cy1ub2NoZWNrCmltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7CmltcG9ydCBTd2FwQXBwIGZyb20gJ3N3YXAuYXBwJzsKaW1wb3J0IFJvb20gZnJvbSAnLi9Sb29tJzsKCnZhciBGbG93ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBGbG93KHN3YXApIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGbG93KTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgIl9mbG93TmFtZSIsIHZvaWQgMCk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJzd2FwIiwgdm9pZCAwKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgInN0ZXBzIiwgdm9pZCAwKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImFwcCIsIHZvaWQgMCk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJzdGVwTnVtYmVycyIsIHZvaWQgMCk7CgogICAgX2RlZmluZVByb3BlcnR5KHRoaXMsICJzdGF0ZSIsIHZvaWQgMCk7CgogICAgdGhpcy5zd2FwID0gc3dhcDsKICAgIHRoaXMuc3RlcHMgPSBbXTsKICAgIHRoaXMuYXBwID0gbnVsbDsKICAgIHRoaXMuc3RlcE51bWJlcnMgPSB7fTsKICAgIHRoaXMuc3RhdGUgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHsKICAgICAgc3RlcDogMCwKICAgICAgaXNXYWl0aW5nRm9yT3duZXI6IGZhbHNlLAogICAgICBpc1N0b3BwZWRTd2FwOiBmYWxzZSwKICAgICAgaXNTd2FwVGltZW91dDogZmFsc2UsCiAgICAgIGlzUmVmdW5kZWQ6IGZhbHNlLAogICAgICBpc0ZpbmlzaGVkOiBmYWxzZSwKICAgICAgaXNTaWduRmV0Y2hpbmc6IGZhbHNlLAogICAgICBpc01lU2lnbmVkOiBmYWxzZSwKCiAgICAgIC8qKiAtLS0tLS0tLS0tLS0tLSBUdXJibyBTd2FwcyBTdGF0ZXMgLS0tLS0tLS0tLS0tLS0tLS0gKiovCiAgICAgIGlzQmFsYW5jZUZldGNoaW5nOiBmYWxzZSwKICAgICAgaXNCYWxhbmNlRW5vdWdoOiB0cnVlCiAgICB9LCB7CiAgICAgIC8qKiBBQi1VVFhPICoqLwogICAgICAvLyBQYXJ0aWNhbCAoYnRjLXNlbGxlcikgaGFzIHVuY29uZmlybWVkIHR4cyBpbiBtZW1wb29sCiAgICAgIHBhcnRpY2lwYW50SGFzTG9ja2VkVVRYTzogZmFsc2UsCiAgICAgIC8vIFNjcmlwdCBjaGFyZ2VkLCBjb25maXJtZWQgYW5kIGNoZWNrZWQgLSBuZXh0IHN0ZXAgLSBjaGFyZ2UgQUIgY29udHJhY3QKICAgICAgaXNVVFhPU2NyaXB0T2s6IGZhbHNlLAogICAgICB1dHhvU2NyaXB0VmFsdWVzOiBudWxsLAogICAgICB1dHhvU2NyaXB0VmVyaWZpZWQ6IGZhbHNlLAogICAgICB1dHhvU2NyaXB0Q3JlYXRpbmdUcmFuc2FjdGlvbkhhc2g6IG51bGwKICAgIH0pLCB7CiAgICAgIC8qKiBVVFhPLUFCICoqLwogICAgICAvLyBXZSBhcmUgaGF2ZSBsb2NrZWQgdHhzIGluIG1lbS1wb29sCiAgICAgIHdhaXRVbmxvY2tVVFhPOiBmYWxzZSwKICAgICAgdXR4b0Z1bmRFcnJvcjogbnVsbCwKICAgICAgdXR4b1NjcmlwdFZhbHVlczogbnVsbCwKICAgICAgdXR4b1NjcmlwdFZlcmlmaWVkOiBmYWxzZSwKICAgICAgdXR4b1NjcmlwdENyZWF0aW5nVHJhbnNhY3Rpb25IYXNoOiBudWxsCiAgICB9KSwgewogICAgICAvKiogVVRYTy1VVFhPICoqLwogICAgfSksIHsKICAgICAgLyoqIEFCLUFCICoqLwogICAgfSk7CgogICAgdGhpcy5fYXR0YWNoU3dhcEFwcChzd2FwLmFwcCk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRmxvdywgW3sKICAgIGtleTogImlzVGFrZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzVGFrZXIoKSB7CiAgICAgIHJldHVybiAhdGhpcy5pc01ha2VyKCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNNYWtlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNNYWtlcigpIHsKICAgICAgcmV0dXJuIHRoaXMuc3dhcC5pc015OwogICAgfQogIH0sIHsKICAgIGtleTogIl9hdHRhY2hTd2FwQXBwIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfYXR0YWNoU3dhcEFwcChhcHApIHsKICAgICAgU3dhcEFwcC5yZXF1aXJlZChhcHApOwogICAgICB0aGlzLmFwcCA9IGFwcDsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJfaXNGaW5pc2hlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2lzRmluaXNoZWQoKSB7CiAgICAgIHZhciBfdGhpcyRzdGF0ZSA9IHRoaXMuc3RhdGUsCiAgICAgICAgICBpc1N0b3BwZWRTd2FwID0gX3RoaXMkc3RhdGUuaXNTdG9wcGVkU3dhcCwKICAgICAgICAgIGlzUmVmdW5kZWQgPSBfdGhpcyRzdGF0ZS5pc1JlZnVuZGVkLAogICAgICAgICAgaXNGaW5pc2hlZCA9IF90aGlzJHN0YXRlLmlzRmluaXNoZWQ7CgogICAgICBpZiAodGhpcy5zd2FwLmNoZWNrVGltZW91dCgzNjAwKSkgewogICAgICAgIHRoaXMuc2V0U3RhdGUoewogICAgICAgICAgaXNTdG9wcGVkU3dhcDogdHJ1ZSwKICAgICAgICAgIGlzU3dhcFRpbWVvdXQ6IHRydWUKICAgICAgICB9LCB0cnVlKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGlzU3RvcHBlZFN3YXAgfHwgaXNSZWZ1bmRlZCB8fCBpc0ZpbmlzaGVkIHx8IHRoaXMuc3dhcC5jaGVja1RpbWVvdXQoMzYwMCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiaXNGaW5pc2hlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNGaW5pc2hlZCgpIHsKICAgICAgcmV0dXJuIHRoaXMuc3RhdGUuc3RlcCA+PSB0aGlzLnN0ZXBzLmxlbmd0aCB8fCB0aGlzLl9pc0ZpbmlzaGVkKCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiX3BlcnNpc3RTdGF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX3BlcnNpc3RTdGF0ZSgpIHsKICAgICAgdmFyIHN0YXRlID0gRmxvdy5yZWFkKHRoaXMuYXBwLCB0aGlzLnN3YXApOwoKICAgICAgaWYgKHN0YXRlKSB7CiAgICAgICAgdGhpcy5zdGF0ZSA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy5zdGF0ZSksIHN0YXRlKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogIl9wZXJzaXN0U3RlcHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9wZXJzaXN0U3RlcHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLnN0ZXBzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSh0aGlzLl9nZXRJbml0aWFsU3RlcHMoKSksIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLl9nZXRTdGVwcygpKSk7IC8vIHdhaXQgZXZlbnRzIHBsYWNlZAoKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgaWYgKF90aGlzLnN0YXRlLnN0ZXAgPj0gX3RoaXMuc3RlcHMubGVuZ3RoIHx8IF90aGlzLl9pc0ZpbmlzaGVkKCkpIHJldHVybjtlbHNlIF90aGlzLl9nb1N0ZXAoX3RoaXMuc3RhdGUuc3RlcCk7CiAgICAgIH0sIDApOwogICAgfQogIH0sIHsKICAgIGtleTogIl9nZXRJbml0aWFsU3RlcHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRJbml0aWFsU3RlcHMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGZsb3cgPSB0aGlzOwogICAgICByZXR1cm4gWwogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIC8vIENoZWNrIGlmIG9yZGVyIGV4aXN0cwogICAgICBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBfdGhpczIkc3dhcCwgb3JkZXJJZCwgb3duZXI7CgogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIkc3dhcCA9IF90aGlzMi5zd2FwLCBvcmRlcklkID0gX3RoaXMyJHN3YXAuaWQsIG93bmVyID0gX3RoaXMyJHN3YXAub3duZXI7IC8vIFRPRE8gaG93IGNhbiB3ZSBkb24ndCBrbm93IHdobyBpcyBwYXJ0aWNpcGFudD8/PwogICAgICAgICAgICAgICAgLy8gVE9ETyBpZiB0aGVyZSBpcyBubyBwYXJ0aWNpcGFudCBpbiBgb3JkZXJgIHRoZW4gbm8gbmVlZCB0byBjcmVhdGUgRmxvdy4uLgogICAgICAgICAgICAgICAgLy8gaWYgdGhlcmUgaXMgbm8gb3JkZXIgaXQgb3JkZXJDb2xsZWN0aW9uIHRoYXQgbWVhbnMgb3duZXIgaXMgb2ZmbGluZSwgc28gYHN3YXAub3duZXJgIHdpbGwgYmUgdW5kZWZpbmVkCgogICAgICAgICAgICAgICAgaWYgKG93bmVyKSB7CiAgICAgICAgICAgICAgICAgIGZsb3cuZmluaXNoU3RlcCgpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGZsb3cuc2V0U3RhdGUoewogICAgICAgICAgICAgICAgICBpc1dhaXRpbmdGb3JPd25lcjogdHJ1ZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgX3RoaXMyLmFwcC5zZXJ2aWNlcy5yb29tLm9uKCduZXcgb3JkZXJzJywgZnVuY3Rpb24gKF9yZWYyKSB7CiAgICAgICAgICAgICAgICAgIHZhciBvcmRlcnMgPSBfcmVmMi5vcmRlcnM7CiAgICAgICAgICAgICAgICAgIHZhciBvcmRlciA9IG9yZGVycy5maW5kKGZ1bmN0aW9uIChfcmVmMykgewogICAgICAgICAgICAgICAgICAgIHZhciBpZCA9IF9yZWYzLmlkOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBpZCA9PT0gb3JkZXJJZDsKICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICBpZiAob3JkZXIpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnVuc3Vic2NyaWJlKCk7CgogICAgICAgICAgICAgICAgICAgIHZhciBfb3JkZXIgPSBvcmRlcnMuZ2V0QnlLZXkob3JkZXJJZCk7IC8vIFRPRE8gbW92ZSB0aGlzIHRvIFN3YXAuanMKICAgICAgICAgICAgICAgICAgICAvL0B0cy1pZ25vcmUKCgogICAgICAgICAgICAgICAgICAgIGZsb3cuc3dhcC5yb29tID0gbmV3IFJvb20oewogICAgICAgICAgICAgICAgICAgICAgcGFydGljaXBhbnRQZWVyOiBfb3JkZXIub3duZXIucGVlcgogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgIGZsb3cuc3dhcC51cGRhdGUoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBfb3JkZXIpLCB7fSwgewogICAgICAgICAgICAgICAgICAgICAgcGFydGljaXBhbnQ6IF9vcmRlci5vd25lcgogICAgICAgICAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgICAgICAgICBmbG93LmZpbmlzaFN0ZXAoewogICAgICAgICAgICAgICAgICAgICAgaXNXYWl0aW5nRm9yT3duZXI6IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpXTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJfZ2V0U3RlcHMiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9nZXRTdGVwcygpIHsKICAgICAgcmV0dXJuIFtdOwogICAgfQogIH0sIHsKICAgIGtleTogIl9zYXZlU3RhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9zYXZlU3RhdGUoKSB7CiAgICAgIHRoaXMuYXBwLmVudi5zdG9yYWdlLnNldEl0ZW0oImZsb3cuIi5jb25jYXQodGhpcy5zd2FwLmlkKSwgdGhpcy5zdGF0ZSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiZmluaXNoU3RlcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZmluaXNoU3RlcChkYXRhLCBjb25zdHJhaW50cykgewogICAgICBkZWJ1Zygnc3dhcC5jb3JlOnN3YXAnKSgib24gc3RlcCAiLmNvbmNhdCh0aGlzLnN0YXRlLnN0ZXAsICIsIGNvbnN0cmFpbnRzID0iKSwgY29uc3RyYWludHMpOwoKICAgICAgaWYgKGNvbnN0cmFpbnRzKSB7CiAgICAgICAgdmFyIHN0ZXAgPSBjb25zdHJhaW50cy5zdGVwLAogICAgICAgICAgICBzaWxlbnRFcnJvciA9IGNvbnN0cmFpbnRzLnNpbGVudEVycm9yOwogICAgICAgIHZhciBuX3N0ZXAgPSB0aGlzLnN0ZXBOdW1iZXJzW3N0ZXBdOwogICAgICAgIGRlYnVnKCdzd2FwLmNvcmU6c3dhcCcpKCJ0cnlpbmcgdG8gZmluaXNoIHN0ZXAgIi5jb25jYXQoc3RlcCwgIiA9ICIpLmNvbmNhdChuX3N0ZXAsICIgd2hlbiBvbiBzdGVwICIpLmNvbmNhdCh0aGlzLnN0YXRlLnN0ZXApKTsKCiAgICAgICAgaWYgKHN0ZXAgJiYgdGhpcy5zdGF0ZS5zdGVwICE9IG5fc3RlcCkgewogICAgICAgICAgaWYgKHNpbGVudEVycm9yKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkNhbnQgZmluaXNoIHN0ZXAgIi5jb25jYXQoc3RlcCwgIiA9ICIpLmNvbmNhdChuX3N0ZXAsICIgd2hlbiBvbiBzdGVwICIpLmNvbmNhdCh0aGlzLnN0YXRlLnN0ZXApKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJDYW50IGZpbmlzaCBzdGVwICIuY29uY2F0KHN0ZXAsICIgPSAiKS5jb25jYXQobl9zdGVwLCAiIHdoZW4gb24gc3RlcCAiKS5jb25jYXQodGhpcy5zdGF0ZS5zdGVwKSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KCiAgICAgIGRlYnVnKCdzd2FwLmNvcmU6c3dhcCcpKCJwcm9jZWVkIHRvIHN0ZXAgIi5jb25jYXQodGhpcy5zdGF0ZS5zdGVwICsgMSwgIiwgZGF0YT0iKSwgZGF0YSk7CgogICAgICB0aGlzLl9nb05leHRTdGVwKGRhdGEpOwogICAgfQogIH0sIHsKICAgIGtleTogIl9nb05leHRTdGVwIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfZ29OZXh0U3RlcChkYXRhKSB7CiAgICAgIHZhciBzdGVwID0gdGhpcy5zdGF0ZS5zdGVwOwogICAgICB2YXIgbmV3U3RlcCA9IHN0ZXAgKyAxOwogICAgICBjb25zb2xlLndhcm4oInRoaXMuc3RhdGUiLCB0aGlzLnN0YXRlKTsKICAgICAgdGhpcy5zd2FwLmV2ZW50cy5kaXNwYXRjaCgnbGVhdmUgc3RlcCcsIHN0ZXApOwogICAgICB0aGlzLnNldFN0YXRlKF9vYmplY3RTcHJlYWQoewogICAgICAgIHN0ZXA6IG5ld1N0ZXAKICAgICAgfSwgZGF0YSB8fCB7fSksIHRydWUpOwogICAgICBpZiAodGhpcy5zdGVwcy5sZW5ndGggPiBuZXdTdGVwKSB0aGlzLl9nb1N0ZXAobmV3U3RlcCk7CiAgICB9CiAgfSwgewogICAga2V5OiAiX2dvU3RlcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2dvU3RlcChpbmRleCkgewogICAgICB0aGlzLnN3YXAuZXZlbnRzLmRpc3BhdGNoKCdlbnRlciBzdGVwJywgaW5kZXgpOwogICAgICB0aGlzLnN0ZXBzW2luZGV4XSgpOwogICAgfQogIH0sIHsKICAgIGtleTogInNldFN0YXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRTdGF0ZSh2YWx1ZXMsIHNhdmUpIHsKICAgICAgdGhpcy5zdGF0ZSA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy5zdGF0ZSksIHZhbHVlcyk7CgogICAgICBpZiAoc2F2ZSkgewogICAgICAgIHRoaXMuX3NhdmVTdGF0ZSgpOwogICAgICB9CgogICAgICB0aGlzLnN3YXAuZXZlbnRzLmRpc3BhdGNoKCdzdGF0ZSB1cGRhdGUnLCB0aGlzLnN0YXRlLCB2YWx1ZXMpOwogICAgfQogIH0sIHsKICAgIGtleTogInNlbmRNZXNzYWdlQWJvdXRDbG9zZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2VBYm91dENsb3NlKCkgewogICAgICB0aGlzLnN3YXAucm9vbS5zZW5kTWVzc2FnZSh7CiAgICAgICAgZXZlbnQ6ICdzd2FwIHdhcyBjYW5jZWxlZCcgLy8gZm9yIGZyb250CgogICAgICB9KTsKICAgICAgdGhpcy5zd2FwLnJvb20uc2VuZE1lc3NhZ2UoewogICAgICAgIGV2ZW50OiAnc3dhcCB3YXMgY2FuY2VsZWQgZm9yIGNvcmUnCiAgICAgIH0pOwogICAgICBjb25zb2xlLndhcm4oInN3YXAgIi5jb25jYXQodGhpcy5zd2FwLmlkLCAiIHdhcyBzdG9wZWQiKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAic3RvcFN3YXBQcm9jZXNzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzdG9wU3dhcFByb2Nlc3MoKSB7CiAgICAgIGNvbnNvbGUud2FybignU3dhcCB3YXMgc3RvcHBlZCcpOwogICAgICB0aGlzLnNldFN0YXRlKHsKICAgICAgICBpc1N0b3BwZWRTd2FwOiB0cnVlCiAgICAgIH0sIHRydWUpOwogICAgfQogIH0sIHsKICAgIGtleTogInRyeVJlZnVuZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gdHJ5UmVmdW5kKCkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgICAgICByZXNvbHZlKHRydWUpOwogICAgICB9KTsKICAgIH0KICB9XSwgW3sKICAgIGtleTogInJlYWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlYWQoYXBwLCBfcmVmNCkgewogICAgICB2YXIgaWQgPSBfcmVmNC5pZDsKICAgICAgU3dhcEFwcC5yZXF1aXJlZChhcHApOwoKICAgICAgaWYgKCFpZCkgewogICAgICAgIGRlYnVnKCdzd2FwLmNvcmU6c3dhcCcpKCJGbG93UmVhZEVycm9yOiBpZCBub3QgZ2l2ZW46ICIuY29uY2F0KGlkKSk7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CgogICAgICByZXR1cm4gYXBwLmVudi5zdG9yYWdlLmdldEl0ZW0oImZsb3cuIi5jb25jYXQoaWQpKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBGbG93Owp9KCk7CgpleHBvcnQgZGVmYXVsdCBGbG93Ow=="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.swap/Flow.ts"],"names":["debug","SwapApp","Room","Flow","swap","steps","app","stepNumbers","state","step","isWaitingForOwner","isStoppedSwap","isSwapTimeout","isRefunded","isFinished","isSignFetching","isMeSigned","isBalanceFetching","isBalanceEnough","participantHasLockedUTXO","isUTXOScriptOk","utxoScriptValues","utxoScriptVerified","utxoScriptCreatingTransactionHash","waitUnlockUTXO","utxoFundError","_attachSwapApp","isMaker","isMy","required","checkTimeout","setState","length","_isFinished","read","_getInitialSteps","_getSteps","setTimeout","_goStep","flow","orderId","id","owner","finishStep","services","room","on","orders","order","find","unsubscribe","getByKey","participantPeer","peer","update","participant","env","storage","setItem","data","constraints","silentError","n_step","console","error","Error","_goNextStep","newStep","warn","events","dispatch","index","values","save","_saveState","sendMessage","event","Promise","resolve","getItem"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport debug from 'debug'\r\nimport SwapApp, { util } from 'swap.app'\r\nimport Room from './Room'\r\nimport Swap from './Swap'\r\n\r\n\r\nclass Flow {\r\n  _flowName: string\r\n  swap: Swap\r\n  steps: Function[]\r\n  app: SwapApp\r\n  stepNumbers: any\r\n\r\n  state: {\r\n    // Common swaps state\r\n    step: number\r\n    isWaitingForOwner?: boolean\r\n\r\n    isStoppedSwap?: boolean\r\n    isRefunded?: boolean\r\n    isFinished: boolean\r\n    isSwapTimeout?: boolean\r\n\r\n    isSignFetching?: boolean\r\n    isMeSigned?: boolean\r\n\r\n    isBalanceFetching: boolean,\r\n    isBalanceEnough: boolean,\r\n\r\n    // Turbo swaps state\r\n\r\n    takerTxHash?: null | string\r\n    isTakerTxPended?: boolean\r\n\r\n    makerTxHash?: null | string\r\n    isMakerTxPended?: boolean\r\n\r\n    // Atomic swaps state\r\n    // -- AB-UTXO\r\n    participantHasLockedUTXO?: boolean\r\n    secretHash?: string\r\n    requireWithdrawFee?: boolean\r\n    requireWithdrawFeeSended?: boolean\r\n    // -- UTXO-AB\r\n    isUTXOScriptOk?: boolean\r\n    waitUnlockUTXO?: boolean\r\n    withdrawRequestAccepted?: boolean\r\n\r\n    utxoFundError?: string\r\n\r\n    // --- UTXO-AB/AB-UTXO equals states\r\n    utxoScriptValues?: any\r\n    utxoScriptVerified?: boolean\r\n    utxoScriptCreatingTransactionHash?: string\r\n\r\n    secret?: string\r\n    isParticipantSigned?: boolean\r\n    scriptAddress?: string\r\n    scriptBalance?: number\r\n    isEthContractFunded?: boolean\r\n  }\r\n\r\n  constructor(swap) {\r\n    this.swap     = swap\r\n    this.steps    = []\r\n    this.app      = null\r\n\r\n    this.stepNumbers = {}\r\n\r\n    this.state = {\r\n      step: 0,\r\n      isWaitingForOwner: false,\r\n      isStoppedSwap: false,\r\n      isSwapTimeout: false,\r\n      isRefunded: false,\r\n      isFinished: false,\r\n\r\n      isSignFetching: false,\r\n      isMeSigned: false,\r\n\r\n      /** -------------- Turbo Swaps States ----------------- **/\r\n\r\n      isBalanceFetching: false,\r\n      isBalanceEnough: true,\r\n\r\n      /** -------------- Atomic Swaps States ---------------- **/\r\n      ...{\r\n        /** AB-UTXO **/\r\n        // Partical (btc-seller) has unconfirmed txs in mempool\r\n        participantHasLockedUTXO: false,\r\n        // Script charged, confirmed and checked - next step - charge AB contract\r\n        isUTXOScriptOk: false,\r\n        utxoScriptValues: null,\r\n        utxoScriptVerified: false,\r\n        utxoScriptCreatingTransactionHash: null,\r\n      },\r\n      ...{\r\n        /** UTXO-AB **/\r\n        // We are have locked txs in mem-pool\r\n        waitUnlockUTXO: false,\r\n        utxoFundError: null,\r\n        utxoScriptValues: null,\r\n        utxoScriptVerified: false,\r\n        utxoScriptCreatingTransactionHash: null,\r\n      },\r\n      ...{\r\n        /** UTXO-UTXO **/\r\n      },\r\n      ...{\r\n        /** AB-AB **/\r\n      },\r\n    }\r\n\r\n    this._attachSwapApp(swap.app)\r\n  }\r\n\r\n  isTaker(): boolean {\r\n    return !this.isMaker()\r\n  }\r\n\r\n  isMaker(): boolean {\r\n    return this.swap.isMy\r\n  }\r\n\r\n  _attachSwapApp(app: SwapApp) {\r\n    SwapApp.required(app)\r\n\r\n    this.app = app\r\n  }\r\n\r\n  static read(app: SwapApp, { id }) {\r\n    SwapApp.required(app)\r\n\r\n    if (!id) {\r\n      debug('swap.core:swap')(`FlowReadError: id not given: ${id}`)\r\n      return {}\r\n    }\r\n\r\n    return app.env.storage.getItem(`flow.${id}`)\r\n  }\r\n\r\n  _isFinished(): boolean {\r\n    const {\r\n      isStoppedSwap,\r\n      isRefunded,\r\n      isFinished,\r\n    } = this.state\r\n\r\n    if (this.swap.checkTimeout(3600)) {\r\n      this.setState({\r\n        isStoppedSwap: true,\r\n        isSwapTimeout: true,\r\n      }, true)\r\n    }\r\n\r\n    return (isStoppedSwap || isRefunded || isFinished || this.swap.checkTimeout(3600))\r\n  }\r\n\r\n  isFinished(): boolean {\r\n    return (\r\n      (this.state.step >= this.steps.length)\r\n      || this._isFinished()\r\n    )\r\n  }\r\n\r\n  _persistState() {\r\n    const state = Flow.read(this.app, this.swap)\r\n\r\n    if (state) {\r\n      this.state = {\r\n        ...this.state,\r\n        ...state,\r\n      }\r\n    }\r\n  }\r\n\r\n  _persistSteps() {\r\n    this.steps = [\r\n      ...this._getInitialSteps(),\r\n      ...this._getSteps(),\r\n    ]\r\n\r\n    // wait events placed\r\n    setTimeout(() => {\r\n      if ((this.state.step >= this.steps.length)\r\n        || this._isFinished()\r\n      ) return\r\n      else this._goStep(this.state.step)\r\n    }, 0)\r\n  }\r\n\r\n  _getInitialSteps() {\r\n    const flow = this\r\n\r\n    return [\r\n\r\n      // Check if order exists\r\n\r\n      async () => {\r\n        const { id: orderId, owner } = this.swap\r\n\r\n        // TODO how can we don't know who is participant???\r\n        // TODO if there is no participant in `order` then no need to create Flow...\r\n        // if there is no order it orderCollection that means owner is offline, so `swap.owner` will be undefined\r\n        if (owner) {\r\n          flow.finishStep()\r\n        }\r\n\r\n        flow.setState({\r\n          isWaitingForOwner: true,\r\n        })\r\n\r\n        this.app.services.room.on('new orders', function ({ orders }) {\r\n          const order = orders.find(({ id }) => id === orderId)\r\n\r\n          if (order) {\r\n            this.unsubscribe()\r\n\r\n            const order = orders.getByKey(orderId)\r\n\r\n            // TODO move this to Swap.js\r\n            //@ts-ignore\r\n            flow.swap.room = new Room({\r\n              participantPeer: order.owner.peer,\r\n            })\r\n            flow.swap.update({\r\n              ...order,\r\n              participant: order.owner,\r\n            })\r\n            flow.finishStep({\r\n              isWaitingForOwner: false,\r\n            })\r\n          }\r\n        })\r\n      },\r\n    ]\r\n  }\r\n\r\n  _getSteps() {\r\n    return []\r\n  }\r\n\r\n  _saveState() {\r\n    this.app.env.storage.setItem(`flow.${this.swap.id}`, this.state)\r\n  }\r\n\r\n  finishStep(data?, constraints?) {\r\n    debug('swap.core:swap')(`on step ${this.state.step}, constraints =`, constraints)\r\n\r\n    if (constraints) {\r\n      const { step, silentError } = constraints\r\n\r\n      const n_step = this.stepNumbers[step]\r\n      debug('swap.core:swap')(`trying to finish step ${step} = ${n_step} when on step ${this.state.step}`)\r\n\r\n      if (step && this.state.step != n_step) {\r\n        if (silentError) {\r\n          console.error(`Cant finish step ${step} = ${n_step} when on step ${this.state.step}`)\r\n          return\r\n        } else {\r\n          throw new Error(`Cant finish step ${step} = ${n_step} when on step ${this.state.step}`)\r\n          return\r\n        }\r\n      }\r\n    }\r\n\r\n    debug('swap.core:swap')(`proceed to step ${this.state.step+1}, data=`, data)\r\n\r\n    this._goNextStep(data)\r\n  }\r\n\r\n  _goNextStep(data) {\r\n    const { step } = this.state\r\n    const newStep = step + 1\r\n    console.warn(\"this.state\", this.state)\r\n    this.swap.events.dispatch('leave step', step)\r\n\r\n    this.setState({\r\n      step: newStep,\r\n      ...(data || {}),\r\n    }, true)\r\n\r\n    if (this.steps.length > newStep)\r\n      this._goStep(newStep)\r\n  }\r\n\r\n  _goStep(index) {\r\n    this.swap.events.dispatch('enter step', index)\r\n    this.steps[index]()\r\n  }\r\n\r\n  setState(values, save?) {\r\n    this.state = {\r\n      ...this.state,\r\n      ...values,\r\n    }\r\n\r\n    if (save) {\r\n      this._saveState()\r\n    }\r\n\r\n    this.swap.events.dispatch('state update', this.state, values)\r\n  }\r\n\r\n  sendMessageAboutClose() {\r\n    this.swap.room.sendMessage({\r\n      event: 'swap was canceled',// for front\r\n    })\r\n\r\n    this.swap.room.sendMessage({\r\n      event: 'swap was canceled for core',\r\n    })\r\n    console.warn(`swap ${this.swap.id} was stoped`)\r\n  }\r\n\r\n  stopSwapProcess() {\r\n    console.warn('Swap was stopped')\r\n\r\n    this.setState({\r\n      isStoppedSwap: true,\r\n    }, true)\r\n  }\r\n\r\n  tryRefund(): Promise<any> {\r\n    return new Promise((resolve) => { resolve(true) })\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default Flow"]}]}