{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\UTXOSwap\\DepositWindow\\DepositWindow.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\UTXOSwap\\DepositWindow\\DepositWindow.tsx","mtime":1614842914206},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Swap/UTXOSwap/DepositWindow/DepositWindow.tsx"],"names":["React","Fragment","Component","config","actions","helpers","CSSModules","styles","BigNumber","FormattedMessage","CopyToClipboard","Button","QR","Timer","Tooltip","InlineLoader","coinsWithDynamicFee","DepositWindow","options","swap","props","state","sellAmount","address","isSellCurrencyEthOrEthToken","isSellCurrencyEthToken","token","getBalance","currency","actualBalance","eth","fetchUnspents","unspents","totalUnspent","reduce","summ","satoshis","dividedBy","setState","balance","dynamicFee","remainingBalance","minus","plus","dp","ROUND_UP","includes","estimateFeeValue","method","fixed","requiredAmount","ROUND_CEIL","updateRemainingBalance","isLessThanOrEqualTo","isBalanceEnough","flow","skipSyncBalance","syncBalance","scriptValues","_fields","getRequiredAmount","balanceCheckHandler","flowState","utcNow","Math","floor","Date","now","timeLeft","ceil","lockTime","stopSwapProcess","updateBalance","checkThePayment","checker","setInterval","needStop","clearInterval","e","isPressCtrl","isBalanceFetching","setTimeout","isAddressCopied","preventDefault","onCopyAddress","currencyData","fields","sellCurrency","toLowerCase","ethToken","isEthOrEthToken","name","isEthToken","unconfirmedBalance","scriptBalance","scriptAddress","currencyFullName","fullName","createCycleUpdatingBalance","prevProps","prevState","flowBalance","missingBalance","isWidgetBuild","isWidget","DontHaveEnoughtFoundsValues","amount","tokenName","br","currencyName","explorerLink","link","etherscan","handleReloadBalance","undefined","ROUND_HALF_CEIL","need","tooltip","mineerFee"],"mappings":"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","sourcesContent":["import React, { Fragment, Component } from 'react'\r\n\r\nimport config from 'app-config'\r\nimport { connect } from 'redaction'\r\nimport actions from 'redux/actions'\r\nimport helpers, { constants } from 'helpers'\r\nimport reducers from 'redux/core/reducers'\r\n\r\nimport CSSModules from 'react-css-modules'\r\nimport styles from '../../Swap.scss'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\n\r\nimport { FormattedMessage } from 'react-intl'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport PropTypes from 'prop-types'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nimport Button from 'components/controls/Button/Button'\r\nimport QR from 'components/QR/QR'\r\nimport Timer from '../../Timer/Timer'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport InlineLoader from 'components/loaders/InlineLoader/InlineLoader'\r\nimport coinsWithDynamicFee from 'helpers/constants/coinsWithDynamicFee'\r\n\r\n\r\n@CSSModules(styles)\r\nexport default class DepositWindow extends Component<any, any> {\r\n  _fields = null\r\n  swap = null\r\n  currency = null\r\n  isSellCurrencyEthOrEthToken = null\r\n  isSellCurrencyEthToken = null\r\n\r\n  constructor(options) {\r\n    super(options)\r\n    const {\r\n      swap,\r\n      flow,\r\n      onCopyAddress,\r\n      currencyData,\r\n      fields,\r\n    } = options\r\n\r\n    this._fields = fields\r\n\r\n    this.swap = swap\r\n\r\n    this.currency = swap.sellCurrency.toLowerCase()\r\n\r\n    this.isSellCurrencyEthOrEthToken = helpers.ethToken.isEthOrEthToken({ name: swap.sellCurrency })\r\n    this.isSellCurrencyEthToken = helpers.ethToken.isEthToken({ name: swap.sellCurrency })\r\n\r\n    this.state = {\r\n      swap,\r\n      dynamicFee: 0,\r\n      remainingBalance: this.swap.sellAmount,\r\n      flow: swap.flow.state,\r\n      isBalanceEnough: false,\r\n      isAddressCopied: false,\r\n      isBalanceFetching: false,\r\n      balance: this.isSellCurrencyEthOrEthToken\r\n        ? currencyData.balance - (currencyData.unconfirmedBalance || 0)\r\n        : flow.scriptBalance,\r\n      address: this.isSellCurrencyEthOrEthToken\r\n        ? currencyData.address\r\n        : flow.scriptAddress,\r\n      currencyFullName: currencyData.fullName,\r\n      sellAmount: this.swap.sellAmount,\r\n    }\r\n  }\r\n\r\n  updateBalance = async () => {\r\n    const { swap } = this.props\r\n    const { sellAmount, address } = this.state\r\n\r\n    let actualBalance\r\n\r\n    if (this.isSellCurrencyEthOrEthToken) {\r\n      if (this.isSellCurrencyEthToken) {\r\n        actualBalance = await actions.token.getBalance(this.currency)\r\n      } else {\r\n        actualBalance = await actions.eth.getBalance()\r\n      }\r\n    } else {\r\n      const unspents = await actions[this.currency].fetchUnspents(address)\r\n      const totalUnspent = unspents.reduce((summ, { satoshis }) => summ + satoshis, 0)\r\n      actualBalance = new BigNumber(totalUnspent).dividedBy(1e8)\r\n    }\r\n\r\n    this.setState(() => ({\r\n      balance: actualBalance,\r\n    }))\r\n  }\r\n\r\n  updateRemainingBalance = async () => {\r\n    const { swap } = this.props\r\n    const { sellAmount, balance, dynamicFee } = this.state\r\n\r\n    let remainingBalance = new BigNumber(sellAmount).minus(balance)\r\n\r\n    if (!this.isSellCurrencyEthToken) {\r\n      remainingBalance = remainingBalance.plus(dynamicFee)\r\n    }\r\n\r\n    this.setState(() => ({\r\n      remainingBalance: remainingBalance.dp(6, BigNumber.ROUND_UP),\r\n    }))\r\n  }\r\n\r\n  getRequiredAmount = async () => {\r\n    const { swap } = this.props\r\n    const { sellAmount } = this.state\r\n\r\n    let dynamicFee = 0\r\n\r\n    if (coinsWithDynamicFee.includes(this.currency)) {\r\n      dynamicFee = await helpers[this.currency].estimateFeeValue({ method: 'swap', fixed: true })\r\n\r\n      this.setState(() => ({\r\n        dynamicFee,\r\n      }))\r\n    }\r\n\r\n    const requiredAmount = new BigNumber(sellAmount).plus(dynamicFee).dp(6, BigNumber.ROUND_CEIL)\r\n\r\n    this.setState(() => ({\r\n      requiredAmount,\r\n    }))\r\n\r\n    this.updateRemainingBalance()\r\n  }\r\n\r\n  checkThePayment = () => {\r\n    const { swap, dynamicFee, sellAmount, balance } = this.state\r\n\r\n    if (sellAmount.plus(dynamicFee).isLessThanOrEqualTo(balance)) {\r\n      this.setState(() => ({\r\n        isBalanceEnough: true,\r\n      }))\r\n\r\n      if (!this.isSellCurrencyEthOrEthToken) {\r\n        swap.flow.skipSyncBalance()\r\n      } else {\r\n        swap.flow.syncBalance()\r\n      }\r\n    }\r\n  }\r\n\r\n  createCycleUpdatingBalance = async () => {\r\n    const { sellAmount, balance } = this.state\r\n    const { scriptValues } = this._fields\r\n\r\n    let checker\r\n    await this.getRequiredAmount()\r\n    await this.updateRemainingBalance()\r\n\r\n    const balanceCheckHandler = async () => {\r\n      const {\r\n        swap: {\r\n          flow,\r\n          flow: {\r\n            state: flowState,\r\n          }\r\n        },\r\n      } = this.props\r\n      const { isBalanceEnough } = this.state\r\n\r\n      const utcNow = Math.floor(Date.now() / 1000)\r\n      const timeLeft = Math.ceil((flowState[scriptValues].lockTime - utcNow) / 60)\r\n\r\n      if (timeLeft <= 0) {\r\n        flow.stopSwapProcess()\r\n\r\n        return true\r\n      }\r\n\r\n      if (isBalanceEnough) {\r\n        return true\r\n      }\r\n\r\n      await this.updateBalance()\r\n      this.checkThePayment()\r\n\r\n      return false\r\n    }\r\n\r\n    await balanceCheckHandler()\r\n\r\n    checker = setInterval(async () => {\r\n      const needStop = await balanceCheckHandler()\r\n\r\n      if (needStop) {\r\n        clearInterval(checker)\r\n      }\r\n    }, 5000)\r\n  }\r\n\r\n  onCopyAddress = (e) => {\r\n    this.setState({\r\n      isPressCtrl: true,\r\n    })\r\n  }\r\n\r\n  handleReloadBalance = async () => {\r\n    const { isBalanceFetching } = this.state\r\n\r\n    this.updateBalance()\r\n\r\n    this.setState({\r\n      isBalanceFetching: true,\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isBalanceFetching: false,\r\n        })\r\n      }, 500)\r\n    })\r\n  }\r\n\r\n  handleCopyAddress = (e) => {\r\n    this.setState({\r\n      isAddressCopied: true,\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isAddressCopied: false,\r\n        })\r\n      }, 500)\r\n    })\r\n  }\r\n\r\n  handlerBuyWithCreditCard = (e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createCycleUpdatingBalance()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.balance !== prevState.balance) {\r\n      this.updateRemainingBalance()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      swap,\r\n      flow,\r\n      balance,\r\n      address,\r\n      dynamicFee,\r\n      sellAmount,\r\n      isPressCtrl,\r\n      flowBalance,\r\n      requiredAmount,\r\n      missingBalance,\r\n      isAddressCopied,\r\n      isBalanceEnough,\r\n      currencyFullName,\r\n      remainingBalance,\r\n      isBalanceFetching,\r\n    } = this.state\r\n\r\n    const isWidgetBuild = config && config.isWidget\r\n\r\n    const DontHaveEnoughtFoundsValues = {\r\n      missingBalance: (\r\n        <div>\r\n          {remainingBalance > 0 ?\r\n            <strong>{`${remainingBalance}`} {swap.sellCurrency}{'  '}</strong>\r\n            :\r\n            <span styleName=\"loaderHolder\">\r\n              <InlineLoader />\r\n            </span>\r\n          }\r\n          <Tooltip id=\"dep170\">\r\n            <div>\r\n              {/* eslint-disable */}\r\n              <FormattedMessage\r\n                id=\"deposit177\"\r\n                defaultMessage=\"Do not top up the contract with the greater amount than recommended. The remaining balance will be send to the counter party. You can send {tokenName} from a wallet of any exchange\"\r\n                values={{\r\n                  amount: `${swap.sellAmount}`,\r\n                  tokenName: swap.sellCurrency,\r\n                  br: <br />,\r\n                }}\r\n              />\r\n              {/* eslint-enable */}\r\n              {/* <p>\r\n                <FormattedMessage id=\"deposit181\" defaultMessage=\"You can send {currency} from a wallet of any exchange\" values={{ currency: `${swap.buyCurrency}` }} />\r\n              </p> */}\r\n            </div>\r\n          </Tooltip>\r\n        </div>\r\n      ),\r\n      amount: `${swap.sellAmount}`,\r\n      tokenName: swap.sellCurrency,\r\n      br: <br />,\r\n    }\r\n\r\n    const {\r\n      currencyName,\r\n      explorerLink,\r\n      scriptValues,\r\n    } = this._fields\r\n\r\n    return (\r\n      <Fragment>\r\n        <div\r\n          styleName=\"topUpLink\"\r\n        >\r\n          <div styleName=\"top\">\r\n            <div styleName=\"btcMessage\">\r\n              {isWidgetBuild ? (\r\n                <FormattedMessage\r\n                  id=\"deposit165widget\"\r\n                  defaultMessage=\"Copy the address below and top it up with the recommended amount of {missingBalance} \"\r\n                  values={DontHaveEnoughtFoundsValues}\r\n                />\r\n              ) : (\r\n                  <FormattedMessage\r\n                    id=\"deposit165\"\r\n                    defaultMessage=\"To continue the swap copy this address and top it up with {missingBalance}\"\r\n                    values={DontHaveEnoughtFoundsValues}\r\n                  />\r\n                )}\r\n            </div>\r\n            <div styleName=\"qrImg\">\r\n              <QR address={`${address}?amount=${remainingBalance}`} />\r\n            </div>\r\n          </div>\r\n          <CopyToClipboard\r\n            text={address}\r\n            onCopy={this.onCopyAddress}\r\n          >\r\n            <div>\r\n              <a styleName=\"linkText\">\r\n                <FormattedMessage\r\n                  id=\"deposit256\"\r\n                  defaultMessage=\"The address of {tokenName} smart contract \"\r\n                  values={{\r\n                    tokenName: swap.sellCurrency,\r\n                  }}\r\n                />\r\n              </a>\r\n              <div styleName=\"linkTransactions\">\r\n                <strong>\r\n                  <a\r\n                    href={swap.sellCurrency === currencyName\r\n                      ? `${explorerLink}/address/${address}`\r\n                      : `${config.link.etherscan}/address/${address}`\r\n                    }\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <FormattedMessage id=\"deposit297\" defaultMessage=\"view in explorer\" />\r\n                  </a>\r\n                </strong>\r\n              </div>\r\n              <div styleName=\"qr\">\r\n                <a\r\n                  styleName=\"linkAddress\"\r\n                  onDoubleClick={this.onCopyAddress}\r\n                  onClick={this.onCopyAddress}\r\n                >\r\n                  {address}\r\n                </a>\r\n                <Button\r\n                  brand\r\n                  disabled={isAddressCopied}\r\n                  fullWidth\r\n                >\r\n                  {isAddressCopied ? <i className=\"fas fa-copy fa-copy-in\" /> : <i className=\"fas fa-copy\" />}\r\n                  <span className=\"copyText\"><FormattedMessage id=\"deposit312\" defaultMessage=\"copy\" /></span>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </CopyToClipboard>\r\n          <div>\r\n            <i className=\"fas fa-sync-alt\" styleName=\"icon\" onClick={this.handleReloadBalance} />\r\n            {/* eslint-disable */}\r\n            {isBalanceFetching\r\n              ? (\r\n                <a styleName=\"loaderHolder\">\r\n                  <InlineLoader />\r\n                </a>\r\n              ) : (\r\n                <FormattedMessage\r\n                  id=\"deposit300\"\r\n                  defaultMessage=\"Received {balance} / {need} {tooltip}\"\r\n                  values={{\r\n                    br: <br />,\r\n                    balance: <strong>{balance === undefined ? this.updateBalance : `${new BigNumber(balance).dp(6, BigNumber.ROUND_HALF_CEIL)}`} {swap.sellCurrency}{'  '}</strong>,\r\n                    need: <strong>{`${requiredAmount}`} {swap.sellCurrency}</strong>,\r\n                    tooltip:\r\n                      <Tooltip id=\"dep226\">\r\n                        <FormattedMessage\r\n                          id=\"deposit239\"\r\n                          defaultMessage=\"Swap will continue after {tokenName} contract receives the funds. Is usually takes less than 10 min\"\r\n                          values={{\r\n                            tokenName: swap.sellCurrency,\r\n                            br: <br />\r\n                          }}\r\n                        />\r\n                      </Tooltip>\r\n                  }}\r\n                />\r\n              )}\r\n            {isBalanceEnough\r\n              ? <FormattedMessage id=\"deposit198.1\" defaultMessage=\"create Ethereum Contract.{br}Please wait, it can take a few minutes...\" values={{ br: <br /> }} />\r\n              : <FormattedMessage id=\"deposit198\" defaultMessage=\"waiting for payment...\" />\r\n            }\r\n            <a styleName=\"loaderHolder\">\r\n              <InlineLoader />\r\n            </a>\r\n            {dynamicFee > 0 &&\r\n              <a styleName=\"included\">\r\n                <FormattedMessage\r\n                  id=\"deposit320\"\r\n                  defaultMessage=\"(included {mineerFee} {sellCurrency} miners fee) \"\r\n                  values={{\r\n                    mineerFee: dynamicFee,\r\n                    sellCurrency: swap.sellCurrency,\r\n                  }}\r\n                />\r\n              </a>}\r\n            <div>\r\n            </div>\r\n            {/* eslint-enable */}\r\n          </div>\r\n          {flow[scriptValues] !== null &&\r\n            <div styleName=\"lockTime\">\r\n              <i className=\"far fa-clock\" />\r\n              <Timer cancelTime={(flow[scriptValues].lockTime - 7200) * 1000} lockTime={flow[scriptValues].lockTime * 1000} />\r\n            </div>}\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n}\r\n"]}]}