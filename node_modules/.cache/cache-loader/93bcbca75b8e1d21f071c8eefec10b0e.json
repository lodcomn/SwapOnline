{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\SaveMnemonicModal\\SaveMnemonicModal.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\SaveMnemonicModal\\SaveMnemonicModal.tsx","mtime":1614842914021},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/SaveMnemonicModal/SaveMnemonicModal.tsx"],"names":["React","Fragment","PropTypes","constants","actions","Link","connect","cssModules","defaultStyles","styles","okSvg","Modal","Button","FormattedMessage","injectIntl","defineMessages","links","feedback","langPrefix","langLabels","title","id","defaultMessage","enterMnemonicNotice","mnemonicCopied","copyMnemonic","shareMnemonic","shareMnemonicTitle","showMnemonicNotice","readySaveNotice","saveMnemonicStep1","saveMnemonicStep2","mnemonicDeleted","values","href","savePrivateKeys","Continue","Ready","beginNotice","beginContinue","beginLater","SaveMnemonicModal","btcMultisigUserData","user","btcData","allowMultiple","props","handleClose","name","data","onClose","window","location","assign","hashHome","modals","close","backup","finished","setState","step","index","state","randomedWords","enteredWords","words","mnemonic","clickedWord","currentWord","length","incorrectWord","setTimeout","splice","push","mnemonicInvalid","join","localStorage","setItem","privateKeyNames","twentywords","backupManager","serverCleanupSeed","isMnemonicCopied","intl","open","Share","formatMessage","link","getItem","split","sort","Math","random","br","started","handleFinish","map","word","handleClickWord","domain","hostname","handleGoToConfirm","Component","string","object"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'redaction'\r\nimport config from 'app-config'\r\n\r\nimport cssModules from 'react-css-modules'\r\n\r\nimport defaultStyles from '../Styles/default.scss'\r\nimport styles from './SaveMnemonicModal.scss'\r\nimport okSvg from 'shared/images/ok.svg'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Button from 'components/controls/Button/Button'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { isMobile } from 'react-device-detect'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\n\r\nimport links from 'helpers/links'\r\nimport feedback from 'shared/helpers/feedback'\r\n\r\n\r\nconst langPrefix = `SaveMnemonicModal`\r\nconst langLabels = defineMessages({\r\n  title: {\r\n    id: `${langPrefix}_Title`,\r\n    defaultMessage: `Ваша секретная фраза`,\r\n  },\r\n  enterMnemonicNotice: {\r\n    id: `${langPrefix}_EnterNotice`,\r\n    defaultMessage: `Нажмите слова, чтобы поместить их рядом друг с другом в правильном порядке`,\r\n  },\r\n  mnemonicCopied: {\r\n    id: `${langPrefix}_MnemonicCopied`,\r\n    defaultMessage: `Скопировано...`,\r\n  },\r\n  copyMnemonic: {\r\n    id: `${langPrefix}_CopyMnemonic`,\r\n    defaultMessage: `Скопировать`,\r\n  },\r\n  shareMnemonic: {\r\n    id: `${langPrefix}_ShareMnemonic`,\r\n    defaultMessage: `Share`,\r\n  },\r\n  shareMnemonicTitle: {\r\n    id: `${langPrefix}_ShareMnemonicTitle`,\r\n    defaultMessage: `Ваша секретная фраза`,\r\n  },\r\n  showMnemonicNotice: {\r\n    id: `${langPrefix}_ShowMnemonicNotice`,\r\n    defaultMessage: `Запишите эти слова в правильном порядке и сохраните их в безопасном месте.`,\r\n  },\r\n  readySaveNotice: {\r\n    id: `${langPrefix}_ReadySaveNotice`,\r\n    defaultMessage: `Храните бумагу в том месте, где вы не забудете`,\r\n  },\r\n  saveMnemonicStep1: {\r\n    id: `${langPrefix}_SaveMnemonicStep1`,\r\n    defaultMessage: `1. Запишите фразу на бумагу`,\r\n  },\r\n  saveMnemonicStep2: {\r\n    id: `${langPrefix}_SaveMnemonicStep2`,\r\n    defaultMessage: `2. Обязательно подпишите что это ключ от {domain}`,\r\n  },\r\n  mnemonicDeleted: {\r\n    id: `${langPrefix}_MnemoniceDeleted`,\r\n    defaultMessage: `You have already saved your 12-words seed. {href}`,\r\n    values: { href: <Link to={links.savePrivateKeys}> <FormattedMessage id=\"MnemoniceDeleted_hrefText\" defaultMessage=\"Try export private key\" /></Link> }\r\n  },\r\n  Continue: {\r\n    id: `${langPrefix}_Continue`,\r\n    defaultMessage: `Продолжить`,\r\n  },\r\n  Ready: {\r\n    id: `${langPrefix}_Ready`,\r\n    defaultMessage: `Готово`,\r\n  },\r\n  beginNotice: {\r\n    id: `${langPrefix}_BeginNotice`,\r\n    defaultMessage: `Сейчас мы вам покажем 12 слов вашей секретной фразы.{br}Если вы ее потеряете мы не сможем восстановить ваш кошелек`,\r\n  },\r\n  beginContinue: {\r\n    id: `${langPrefix}_BeginContinue`,\r\n    defaultMessage: `Я понимаю`,\r\n  },\r\n  beginLater: {\r\n    id: `${langPrefix}_BeginLater`,\r\n    defaultMessage: `Я сохраню позже`,\r\n  },\r\n})\r\n\r\n@injectIntl\r\n@connect(\r\n  ({\r\n    user: { btcMultisigUserData },\r\n  }) => ({\r\n    btcData: btcMultisigUserData,\r\n  })\r\n)\r\n@cssModules({ ...defaultStyles, ...styles }, { allowMultiple: true })\r\nexport default class SaveMnemonicModal extends React.Component<any, any> {\r\n\r\n  props: any\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    data: PropTypes.object,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const mnemonic = localStorage.getItem(constants.privateKeyNames.twentywords)\r\n\r\n    const randomedWords = (mnemonic !== '-') ? mnemonic.split(` `) : []\r\n    randomedWords.sort(() => .5 - Math.random())\r\n\r\n    const words = (mnemonic !== '-') ? mnemonic.split(` `) : []\r\n\r\n    this.state = {\r\n      step: (mnemonic === '-') ? `removed` : `begin`,\r\n      mnemonic,\r\n      words,\r\n      enteredWords: [],\r\n      randomedWords,\r\n      mnemonicInvalid: true,\r\n      incorrectWord: false,\r\n      isMnemonicCopied: false,\r\n    }\r\n  }\r\n\r\n  handleGoToWallet = () => {\r\n    this.handleClose()\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { name, data, onClose } = this.props\r\n\r\n    if (typeof onClose === 'function') {\r\n      onClose()\r\n    }\r\n\r\n    if (data && typeof data.onClose === 'function') {\r\n      data.onClose()\r\n    } else {\r\n      window.location.assign(links.hashHome)\r\n    }\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  handleFinish = () => {\r\n    feedback.backup.finished()\r\n    this.handleClose()\r\n  }\r\n\r\n  handleGoToConfirm = () => {\r\n    this.setState({\r\n      step: `confirmMnemonic`,\r\n    })\r\n  }\r\n\r\n  handleClickWord = (index) => {\r\n    const {\r\n      randomedWords,\r\n      enteredWords,\r\n      words,\r\n      mnemonic,\r\n    } = this.state\r\n\r\n    let clickedWord\r\n\r\n    const currentWord = enteredWords.length\r\n\r\n    if (words[currentWord] !== randomedWords[index]) {\r\n\r\n      this.setState({\r\n        incorrectWord: true,\r\n      }, () => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            incorrectWord: false,\r\n          })\r\n        }, 500)\r\n      })\r\n      return\r\n    }\r\n\r\n    clickedWord = randomedWords.splice(index, 1)\r\n    enteredWords.push(clickedWord)\r\n\r\n\r\n    this.setState({\r\n      randomedWords,\r\n      enteredWords,\r\n      incorrectWord: false,\r\n      mnemonicInvalid: (enteredWords.join(` `) !== mnemonic),\r\n    }, () => {\r\n      if (randomedWords.length === 0) {\r\n        localStorage.setItem(constants.privateKeyNames.twentywords, '-')\r\n        actions.backupManager.serverCleanupSeed()\r\n\r\n        this.setState({\r\n          step: `ready`,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCopyMnemonic = () => {\r\n    this.setState({\r\n      isMnemonicCopied: true,\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isMnemonicCopied: false,\r\n        })\r\n      }, 500)\r\n    })\r\n  }\r\n\r\n  handleShareMnemonic = () => {\r\n    const {\r\n      intl,\r\n    } = this.props\r\n\r\n    const { mnemonic } = this.state\r\n\r\n    actions.modals.open(constants.modals.Share, {\r\n      title: intl.formatMessage(langLabels.shareMnemonicTitle),\r\n      link: mnemonic,\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      intl\r\n    } = this.props\r\n\r\n    const {\r\n      step,\r\n      words,\r\n      enteredWords,\r\n      mnemonic,\r\n      randomedWords,\r\n      mnemonicInvalid,\r\n      incorrectWord,\r\n      isMnemonicCopied,\r\n    } = this.state\r\n\r\n    // const linked = Link.all(this, 'address', 'amount', 'from')\r\n\r\n    return (\r\n      <Modal name={name} title={`${intl.formatMessage(langLabels.title)}`} onClose={this.handleClose} showCloseButton={true}>\r\n        {step === `confirmMnemonic` && (\r\n          <p styleName=\"notice mnemonicNotice\">\r\n            <FormattedMessage {...langLabels.enterMnemonicNotice} />\r\n          </p>\r\n        )}\r\n        {step === `show` && (\r\n          <p styleName=\"notice mnemonicNotice\">\r\n            <FormattedMessage {...langLabels.showMnemonicNotice} />\r\n          </p>\r\n        )}\r\n        {step === `removed` && (\r\n          <p styleName=\"notice mnemonicNotice\">\r\n            <FormattedMessage {...langLabels.mnemonicDeleted} />\r\n          </p>\r\n        )}\r\n        <div>\r\n          {step === `begin` && (\r\n            <Fragment>\r\n              <p styleName=\"notice mnemonicNotice\">\r\n                <FormattedMessage {...langLabels.beginNotice} values={{\r\n                  br: <br />,\r\n                }}/>\r\n              </p>\r\n              <div styleName=\"buttonsHolder\">\r\n                <Button blue onClick={() => {\r\n                  feedback.backup.started()\r\n                  this.setState({ step: `show` })\r\n                }}>\r\n                  <FormattedMessage {...langLabels.beginContinue} />\r\n                </Button>\r\n                <Button blue onClick={this.handleClose}>\r\n                  <FormattedMessage {...langLabels.beginLater} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {step === `ready` && (\r\n            <Fragment>\r\n              <p styleName=\"notice mnemonicNotice\">\r\n                <img styleName=\"finishImg\" src={okSvg} alt=\"finish\" />\r\n                <FormattedMessage {...langLabels.readySaveNotice} />\r\n              </p>\r\n              <div styleName=\"lowLevel\">\r\n                <Button\r\n                  styleName=\"buttonCenter buttonHalfFullWidth\"\r\n                  blue\r\n                  onClick={this.handleFinish}\r\n                >\r\n                  <FormattedMessage {...langLabels.Ready} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {step === `confirmMnemonic` && (\r\n            <Fragment>\r\n              <div styleName=\"highLevel\">\r\n                <div styleName={`mnemonicView mnemonicEnter ${(incorrectWord) ? 'mnemonicError' : ''}`}>\r\n                  {\r\n                    enteredWords.map((word, index) => {\r\n                      return (\r\n                        <button key={index} onClick={() => { }} className=\"ym-hide-content notranslate\" translate=\"no\">\r\n                          {word}\r\n                        </button>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n                <div styleName=\"mnemonicWords\">\r\n                  {\r\n                    randomedWords.map((word, index) => {\r\n                      return (\r\n                        <button key={index} onClick={() => this.handleClickWord(index)} className=\"ym-hide-content notranslate\" translate=\"no\">\r\n                          {word}\r\n                        </button>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n              <div styleName=\"lowLevel\">\r\n                <Button\r\n                  styleName=\"buttonCenter buttonHalfFullWidth\"\r\n                  blue\r\n                  disabled={mnemonicInvalid}\r\n                  onClick={this.handleFinish}\r\n                >\r\n                  <FormattedMessage {...langLabels.Ready} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {step === `show` && (\r\n            <Fragment>\r\n              <div styleName=\"highLevel\">\r\n                <div styleName=\"mnemonicView\" className=\"ym-hide-content notranslate\" translate=\"no\">\r\n                  {\r\n                    words.map((word, index) => {\r\n                      return (\r\n                        <div key={index} styleName='mnemonicViewWordWrapper'>\r\n                          <div>\r\n                            <span styleName=\"wordIndex\">{(index + 1)}</span>\r\n                            <span>{word}</span>\r\n                          </div>\r\n                          {\r\n                            /* space for correct copy-paste */\r\n                            index + 1 !== words.length && ' '\r\n                          }\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                </div>\r\n                <p styleName=\"notice saveMnemonicToPaper mnemonicNotice\">\r\n                  <FormattedMessage {...langLabels.saveMnemonicStep1} />\r\n                  <FormattedMessage {...langLabels.saveMnemonicStep2} values={{ domain: location.hostname }} />\r\n                </p>\r\n                {/*\r\n                <div styleName=\"buttonsHolder\">\r\n                  <CopyToClipboard\r\n                    text={mnemonic}\r\n                    onCopy={this.handleCopyMnemonic}\r\n                  >\r\n                    <Button blue disabled={isMnemonicCopied} onClick={this.handleCopyMnemonic}>\r\n                      {isMnemonicCopied ? (\r\n                        <FormattedMessage { ...langLabels.mnemonicCopied } />\r\n                      ) : (\r\n                        <FormattedMessage { ...langLabels.copyMnemonic } />\r\n                      )}\r\n                    </Button>\r\n                  </CopyToClipboard>\r\n                  <Button blue onClick={this.handleShareMnemonic}>\r\n                    <FormattedMessage { ...langLabels.shareMnemonic } />\r\n                  </Button>\r\n                </div>\r\n              */}\r\n              </div>\r\n              <div styleName=\"lowLevel\">\r\n                <Button\r\n                  styleName=\"buttonCenter buttonHalfFullWidth\"\r\n                  blue\r\n                  onClick={this.handleGoToConfirm}\r\n                  fullWidth\r\n                >\r\n                  <FormattedMessage {...langLabels.Continue} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}