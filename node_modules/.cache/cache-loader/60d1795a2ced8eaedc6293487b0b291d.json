{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Wallet\\Wallet.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Wallet\\Wallet.tsx","mtime":1614852154018},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Wallet/Wallet.tsx"],"names":["React","Component","connect","actions","cssModules","styles","isMobile","moment","History","helpers","links","constants","stats","localisedUrl","getActivatedCurrencies","getTopLocation","injectIntl","appConfig","config","withRouter","CurrenciesList","InvoicesList","DashboardLayout","BalanceForm","BigNumber","metamask","wpLogoutModal","feedback","isWidgetBuild","isWidget","isDark","localStorage","getItem","Wallet","hiddenCoinsList","core","user","activeFiat","ethData","btcData","ghostData","nextData","btcMultisigSMSData","btcMultisigUserData","btcMultisigUserDataList","tokensData","isFetching","isBalanceFetching","multisigPendingCount","activeCurrency","messagingToken","metamaskData","currencies","items","assets","createWallet","modals","dashboardModalsAllowed","ui","widgetMultiTokens","window","widgetERC20Tokens","Object","keys","length","forEach","key","push","toUpperCase","tokens","erc20token","map","k","currency","tokensItems","allData","account","keyPair","data","userEthAddress","address","dashboardView","isSigned","signUp","allowMultiple","props","currencyNames","name","getInfoAboutCurrency","params","amount","item","find","toLowerCase","open","Withdraw","toAddress","wallet","pressedAddCurrency","history","locale","intl","exchange","context","enabledCurrencies","state","widgetCurrencies","includes","getWallets","filter","isMetamask","isConnected","balance","CurrencyAction","tableRows","targetCurrency","isToken","ethToken","isEthToken","now","format","lastCheck","lastCheckBalance","lastCheckMoment","isFirstCheck","isSame","isOneHourAfter","isAfter","add","balancesData","ethBalance","btcBalance","ghostBalance","nextBalance","ethAddress","btcAddress","ghostAddress","nextAddress","syncTimer","setTimeout","setItem","getIPInfo","ipInfo","registrationData","navigator","userLanguage","language","split","ip","messaging_token","widgetUrl","origin","widget_url","tokensArray","values","wallets","symbol","type","toNumber","public_key","publicKey","toString","updateUser","host","console","error","match","page","activeView","home","prevProps","pathname","location","prevPathname","connectWallet","handleConnectWallet","prevPage","prevMultisigPendingCount","setState","clearTimeout","url","getBalances","fetchMultisigStatus","handleWithdraw","log","infoAboutCurrency","syncData","changePercent","el","fiatBalance","price_fiat","multipliedBy","dp","ROUND_FLOOR","currName","percent_change_1h","price_btc","allFiatBalance","reduce","acc","cur","plus","handleModalOpen","handleWithdrawFirstAsset","handleGoExchange","goToСreateWallet"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Component } from 'react'\r\n\r\nimport { connect } from 'redaction'\r\nimport actions from 'redux/actions'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './Wallet.scss'\r\nimport { isMobile } from 'react-device-detect'\r\nimport moment from 'moment'\r\n// import firestore from 'helpers/firebase/firestore'\r\n\r\nimport History from 'pages/History/History'\r\n\r\nimport helpers, {\r\n  // firebase,\r\n  links,\r\n  constants,\r\n  stats\r\n} from 'helpers'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport { getActivatedCurrencies } from 'helpers/user'\r\nimport getTopLocation from 'helpers/getTopLocation'\r\nimport { injectIntl } from 'react-intl'\r\n\r\nimport appConfig from 'app-config'\r\nimport config from 'helpers/externalConfig'\r\nimport { withRouter } from 'react-router-dom'\r\nimport CurrenciesList from './CurrenciesList'\r\nimport InvoicesList from 'pages/Invoices/InvoicesList'\r\n\r\nimport DashboardLayout from 'components/layout/DashboardLayout/DashboardLayout'\r\nimport BalanceForm from 'components/BalanceForm/BalanceForm'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\nimport metamask from 'helpers/metamask'\r\n\r\nimport wpLogoutModal from 'helpers/wpLogoutModal'\r\nimport feedback from 'shared/helpers/feedback'\r\n\r\nconst isWidgetBuild = config && config.isWidget\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\n@connect(\r\n  ({\r\n    core: { hiddenCoinsList },\r\n    user,\r\n    user: {\r\n      activeFiat,\r\n      ethData,\r\n      btcData,\r\n      ghostData,\r\n      nextData,\r\n      btcMultisigSMSData,\r\n      btcMultisigUserData,\r\n      btcMultisigUserDataList,\r\n      tokensData,\r\n      isFetching,\r\n      isBalanceFetching,\r\n      multisigPendingCount,\r\n      activeCurrency,\r\n      messagingToken,\r\n      metamaskData,\r\n    },\r\n    currencies: { items: currencies },\r\n    createWallet: { currencies: assets },\r\n    modals,\r\n    ui: { dashboardModalsAllowed },\r\n  }) => {\r\n    let widgetMultiTokens = []\r\n    if (window.widgetERC20Tokens && Object.keys(window.widgetERC20Tokens).length) {\r\n      Object.keys(window.widgetERC20Tokens).forEach((key) => {\r\n        widgetMultiTokens.push(key.toUpperCase())\r\n      })\r\n    }\r\n    const tokens =\r\n      config && config.isWidget\r\n        ? window.widgetERC20Tokens && Object.keys(window.widgetERC20Tokens).length\r\n          ? widgetMultiTokens\r\n          : [config.erc20token.toUpperCase()]\r\n        : Object.keys(tokensData).map((k) => tokensData[k].currency)\r\n\r\n    const tokensItems = Object.keys(tokensData).map((k) => tokensData[k])\r\n\r\n    const allData = [\r\n      btcData,\r\n      btcMultisigSMSData,\r\n      btcMultisigUserData,\r\n      ethData,\r\n      ghostData,\r\n      nextData,\r\n      ...Object.keys(tokensData).map((k) => tokensData[k]),\r\n    ].map(({ account, keyPair, ...data }) => ({\r\n      ...data,\r\n    }))\r\n\r\n    const items = (config && config.isWidget\r\n      ? [btcData, ethData, ghostData, nextData]\r\n      : [btcData, btcMultisigSMSData, btcMultisigUserData, ethData, ghostData, nextData]\r\n    ).map((data) => data.currency)\r\n\r\n    return {\r\n      tokens,\r\n      items,\r\n      allData,\r\n      tokensItems,\r\n      messagingToken,\r\n      currencies,\r\n      assets,\r\n      isFetching,\r\n      isBalanceFetching,\r\n      multisigPendingCount,\r\n      hiddenCoinsList: hiddenCoinsList,\r\n      userEthAddress: ethData.address,\r\n      user,\r\n      activeCurrency,\r\n      activeFiat,\r\n      tokensData: {\r\n        ethData,\r\n        metamaskData: {\r\n          ...metamaskData,\r\n          currency: 'ETH Metamask',\r\n        },\r\n        btcData,\r\n        ghostData,\r\n        nextData,\r\n        btcMultisigSMSData,\r\n        btcMultisigUserData,\r\n        btcMultisigUserDataList,\r\n      },\r\n      dashboardView: dashboardModalsAllowed,\r\n      modals,\r\n    }\r\n  }\r\n)\r\n@injectIntl\r\n@withRouter\r\n@connect(({ signUp: { isSigned } }) => ({\r\n  isSigned,\r\n}))\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class Wallet extends Component<any, any> {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {\r\n      match: {\r\n        params: { page = null },\r\n      },\r\n      multisigPendingCount,\r\n    } = props\r\n\r\n    let activeView = 0\r\n\r\n    if (page === 'history' && !isMobile) {\r\n      activeView = 1\r\n    }\r\n    if (page === 'invoices') activeView = 2\r\n\r\n    this.state = {\r\n      activeView,\r\n      btcBalance: 0,\r\n      enabledCurrencies: getActivatedCurrencies(),\r\n      multisigPendingCount,\r\n    }\r\n    //@\r\n    this.syncTimer = null\r\n  }\r\n\r\n  handleConnectWallet() {\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n\r\n    if (metamask.isConnected()) {\r\n      history.push(localisedUrl(locale, links.home))\r\n      return\r\n    }\r\n\r\n    setTimeout(() => {\r\n      metamask.connect({})\r\n    }, 100)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const {\r\n      match: {\r\n        params: { page = null },\r\n      },\r\n      multisigPendingCount,\r\n      intl,\r\n      intl: { locale },\r\n      location: { pathname },\r\n      history,\r\n    } = this.props\r\n\r\n    const {\r\n      location: { pathname: prevPathname },\r\n    } = prevProps\r\n\r\n    if (\r\n      pathname.toLowerCase() != prevPathname.toLowerCase() &&\r\n      pathname.toLowerCase() == links.connectWallet.toLowerCase()\r\n    ) {\r\n      this.handleConnectWallet()\r\n    }\r\n\r\n    const {\r\n      match: {\r\n        params: { page: prevPage = null },\r\n      },\r\n      multisigPendingCount: prevMultisigPendingCount,\r\n    } = prevProps\r\n\r\n    if (page !== prevPage || multisigPendingCount !== prevMultisigPendingCount) {\r\n      let activeView = 0\r\n\r\n      if (page === 'history' && !isMobile) activeView = 1\r\n      if (page === 'invoices') activeView = 2\r\n\r\n      if (page === 'exit') {\r\n        wpLogoutModal(() => {\r\n          history.push(localisedUrl(locale, links.home))\r\n        }, intl)\r\n      }\r\n\r\n      this.setState({\r\n        activeView,\r\n        multisigPendingCount,\r\n      })\r\n    }\r\n    //@\r\n    clearTimeout(this.syncTimer)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      match: {\r\n        params,\r\n        params: { page },\r\n        url,\r\n      },\r\n      multisigPendingCount,\r\n      history,\r\n      location: { pathname },\r\n      intl,\r\n      intl: { locale },\r\n    } = this.props\r\n\r\n    if (pathname.toLowerCase() == links.connectWallet.toLowerCase()) {\r\n      this.handleConnectWallet()\r\n    }\r\n\r\n    actions.user.getBalances()\r\n\r\n    actions.user.fetchMultisigStatus()\r\n\r\n    if (url.includes('send')) {\r\n      this.handleWithdraw(params)\r\n    }\r\n\r\n    if (page === 'exit') {\r\n      wpLogoutModal(() => {\r\n        history.push(localisedUrl(locale, links.home))\r\n      }, intl)\r\n    }\r\n    this.getInfoAboutCurrency()\r\n    this.setState({\r\n      multisigPendingCount,\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Wallet unmounted')\r\n  }\r\n\r\n  getInfoAboutCurrency = async () => {\r\n    const { currencies } = this.props\r\n    const currencyNames = currencies.map(({ name }) => name)\r\n\r\n    await actions.user.getInfoAboutCurrency(currencyNames)\r\n  }\r\n\r\n  handleWithdraw = (params) => {\r\n    const { allData } = this.props\r\n    const { address, amount } = params\r\n    const item = allData.find(\r\n      ({ currency }) => currency.toLowerCase() === params.currency.toLowerCase()\r\n    )\r\n\r\n    actions.modals.open(constants.modals.Withdraw, {\r\n      ...item,\r\n      toAddress: address,\r\n      amount,\r\n    })\r\n  }\r\n\r\n  goToСreateWallet = () => {\r\n    feedback.wallet.pressedAddCurrency()\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n\r\n    history.push(localisedUrl(locale, links.createWallet))\r\n  }\r\n\r\n  handleGoExchange = () => {\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n\r\n    history.push(localisedUrl(locale, links.exchange))\r\n  }\r\n\r\n  handleModalOpen = (context) => {\r\n    const { enabledCurrencies } = this.state\r\n    const { hiddenCoinsList } = this.props\r\n\r\n    /* @ToDo Вынести отдельно */\r\n    // Набор валют для виджета\r\n    const widgetCurrencies = ['BTC']\r\n    if (!hiddenCoinsList.includes('BTC (SMS-Protected)'))\r\n      widgetCurrencies.push('BTC (SMS-Protected)')\r\n    if (!hiddenCoinsList.includes('BTC (PIN-Protected)'))\r\n      widgetCurrencies.push('BTC (PIN-Protected)')\r\n    if (!hiddenCoinsList.includes('BTC (Multisig)')) widgetCurrencies.push('BTC (Multisig)')\r\n    widgetCurrencies.push('ETH')\r\n    widgetCurrencies.push('GHOST')\r\n    widgetCurrencies.push('NEXT')\r\n    if (isWidgetBuild) {\r\n      if (window.widgetERC20Tokens && Object.keys(window.widgetERC20Tokens).length) {\r\n        // Multi token widget build\r\n        Object.keys(window.widgetERC20Tokens).forEach((key) => {\r\n          widgetCurrencies.push(key.toUpperCase())\r\n        })\r\n      } else {\r\n        widgetCurrencies.push(config.erc20token.toUpperCase())\r\n      }\r\n    }\r\n\r\n    const currencies = actions.core\r\n      .getWallets({})\r\n      .filter(({ isMetamask, isConnected, currency, address, balance }) => {\r\n        return (\r\n          (context === 'Send' ? balance : true) &&\r\n          !hiddenCoinsList.includes(currency) &&\r\n          !hiddenCoinsList.includes(`${currency}:${address}`) &&\r\n          enabledCurrencies.includes(currency) &&\r\n          (!isMetamask || (isMetamask && isConnected)) &&\r\n          (isWidgetBuild ? widgetCurrencies.includes(currency) : true)\r\n        )\r\n      })\r\n\r\n    actions.modals.open(constants.modals.CurrencyAction, {\r\n      currencies,\r\n      context,\r\n    })\r\n  }\r\n\r\n  handleWithdrawFirstAsset = () => {\r\n    const { hiddenCoinsList } = this.props\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n\r\n    const allData = actions.core.getWallets({})\r\n\r\n    let tableRows = allData.filter(({ currency, address, balance }) => {\r\n      // @ToDo - В будущем нужно убрать проверку только по типу монеты.\r\n      // Старую проверку оставил, чтобы у старых пользователей не вывалились скрытые кошельки\r\n\r\n      return (\r\n        !hiddenCoinsList.includes(currency) &&\r\n        !hiddenCoinsList.includes(`${currency}:${address}`) &&\r\n        balance > 0\r\n      )\r\n    })\r\n\r\n    if (tableRows.length === 0) {\r\n      // @ToDo AlertModal - balance is empty\r\n      return\r\n    }\r\n\r\n    const { currency, address } = tableRows[0]\r\n\r\n    let targetCurrency = currency\r\n    switch (currency.toLowerCase()) {\r\n      case 'btc (multisig)':\r\n      case 'btc (sms-protected)':\r\n      case 'btc (pin-protected)':\r\n        targetCurrency = 'btc'\r\n        break\r\n    }\r\n\r\n    const isToken = helpers.ethToken.isEthToken({ name: currency })\r\n\r\n    history.push(\r\n      localisedUrl(locale, (isToken ? '/token' : '') + `/${targetCurrency}/${address}/send`)\r\n    )\r\n  }\r\n\r\n  syncData = () => {\r\n    // that is for noxon, dont delete it :)\r\n    const now = moment().format('HH:mm:ss DD/MM/YYYY')\r\n    const lastCheck = localStorage.getItem(constants.localStorage.lastCheckBalance) || now\r\n    const lastCheckMoment = moment(lastCheck, 'HH:mm:ss DD/MM/YYYY')\r\n\r\n    const isFirstCheck = moment(now, 'HH:mm:ss DD/MM/YYYY').isSame(lastCheckMoment)\r\n    const isOneHourAfter = moment(now, 'HH:mm:ss DD/MM/YYYY').isAfter(\r\n      lastCheckMoment.add(1, 'hours')\r\n    )\r\n\r\n    const { ethData, btcData, ghostData, nextData } = this.props.tokensData\r\n\r\n    const balancesData = {\r\n      ethBalance: ethData.balance,\r\n      btcBalance: btcData.balance,\r\n      ghostBalance: ghostData.balance,\r\n      nextBalance: nextData.balance,\r\n      ethAddress: ethData.address,\r\n      btcAddress: btcData.address,\r\n      ghostAddress: ghostData.address,\r\n      nextAddress: nextData.address,\r\n    }\r\n\r\n    //@\r\n    this.syncTimer = setTimeout(async () => {\r\n      if (isOneHourAfter || isFirstCheck) {\r\n        localStorage.setItem(constants.localStorage.lastCheckBalance, now)\r\n        try {\r\n          const ipInfo = await stats.getIPInfo()\r\n\r\n          const registrationData = {\r\n            locale:\r\n              ipInfo.locale ||\r\n              (navigator.userLanguage || navigator.language || 'en-gb').split('-')[0],\r\n            ip: ipInfo.ip,\r\n          }\r\n\r\n          if (this.props.messagingToken) {\r\n            //@\r\n            registrationData.messaging_token = this.props.messagingToken\r\n          }\r\n          let widgetUrl\r\n          if (appConfig.isWidget) {\r\n            widgetUrl = getTopLocation().origin\r\n            //@\r\n            registrationData.widget_url = widgetUrl\r\n          }\r\n\r\n          const tokensArray: any[] = Object.values(this.props.tokensData)\r\n\r\n          const wallets = tokensArray.map((item) => ({\r\n            symbol: item && item.currency ? item.currency.split(' ')[0] : '',\r\n            type: item && item.currency ? item.currency.split(' ')[1] || 'common' : '',\r\n            address: item && item.address ? item.address : '',\r\n            balance: item && item.balance ? new BigNumber(item.balance).toNumber() : 0,\r\n            public_key: item && item.publicKey ? item.publicKey.toString('Hex') : '',\r\n            // TODO: let this work\r\n            // nounce: 1,\r\n            // signatures_required: 1,\r\n            // signatories: [],\r\n          }))\r\n          //@\r\n          registrationData.wallets = wallets\r\n\r\n          await stats.updateUser(ethData.address, getTopLocation().host, registrationData)\r\n\r\n          // firestore.updateUserData(balancesData)\r\n        } catch (error) {\r\n          console.error(`Sync error in wallet: ${error}`)\r\n        }\r\n      }\r\n    }, 2000)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      activeView,\r\n      infoAboutCurrency,\r\n      enabledCurrencies,\r\n      multisigPendingCount,\r\n    } = this.state\r\n\r\n    const {\r\n      hiddenCoinsList,\r\n      isBalanceFetching,\r\n      activeFiat,\r\n      activeCurrency,\r\n      match: {\r\n        params: { page = null },\r\n      },\r\n    } = this.props\r\n\r\n    const allData = actions.core.getWallets({})\r\n\r\n    this.syncData()\r\n\r\n    let btcBalance = 0\r\n    let changePercent = 0\r\n\r\n    // Набор валют для виджета\r\n    const widgetCurrencies = ['BTC']\r\n    if (!hiddenCoinsList.includes('BTC (SMS-Protected)'))\r\n      widgetCurrencies.push('BTC (SMS-Protected)')\r\n    if (!hiddenCoinsList.includes('BTC (PIN-Protected)'))\r\n      widgetCurrencies.push('BTC (PIN-Protected)')\r\n    if (!hiddenCoinsList.includes('BTC (Multisig)')) widgetCurrencies.push('BTC (Multisig)')\r\n    widgetCurrencies.push('ETH')\r\n    widgetCurrencies.push('GHOST')\r\n    widgetCurrencies.push('NEXT')\r\n    if (isWidgetBuild) {\r\n      if (window.widgetERC20Tokens && Object.keys(window.widgetERC20Tokens).length) {\r\n        // Multi token widget build\r\n        Object.keys(window.widgetERC20Tokens).forEach((key) => {\r\n          widgetCurrencies.push(key.toUpperCase())\r\n        })\r\n      } else {\r\n        widgetCurrencies.push(config.erc20token.toUpperCase())\r\n      }\r\n    }\r\n\r\n    let tableRows = allData.filter(({ currency, address, balance }) => {\r\n      // @ToDo - В будущем нужно убрать проверку только по типу монеты.\r\n      // Старую проверку оставил, чтобы у старых пользователей не вывалились скрытые кошельки\r\n\r\n      return (\r\n        (!hiddenCoinsList.includes(currency) &&\r\n          !hiddenCoinsList.includes(`${currency}:${address}`)) ||\r\n        balance > 0\r\n      )\r\n    })\r\n\r\n    if (isWidgetBuild) {\r\n      //tableRows = allData.filter(({ currency }) => widgetCurrencies.includes(currency))\r\n      tableRows = allData.filter(\r\n        ({ currency, address, balance }) =>\r\n          (!hiddenCoinsList.includes(currency) &&\r\n            !hiddenCoinsList.includes(`${currency}:${address}`)) ||\r\n          balance > 0\r\n      )\r\n      // Отфильтруем валюты, исключив те, которые не используются в этом билде\r\n      tableRows = tableRows.filter(({ currency }) => widgetCurrencies.includes(currency))\r\n    }\r\n\r\n    tableRows = tableRows.filter(({ currency }) => enabledCurrencies.includes(currency))\r\n\r\n    tableRows = tableRows.map((el) => {\r\n      return {\r\n        ...el,\r\n        balance: el.balance,\r\n        fiatBalance:\r\n          el.balance > 0 && el.infoAboutCurrency && el.infoAboutCurrency.price_fiat\r\n            ? new BigNumber(el.balance)\r\n                .multipliedBy(el.infoAboutCurrency.price_fiat)\r\n                .dp(2, BigNumber.ROUND_FLOOR)\r\n            : 0,\r\n      }\r\n    })\r\n\r\n    tableRows.forEach(({ name, infoAboutCurrency, balance, currency }) => {\r\n      const currName = currency || name\r\n\r\n      if (\r\n        (!isWidgetBuild || widgetCurrencies.includes(currName)) &&\r\n        infoAboutCurrency &&\r\n        balance !== 0\r\n      ) {\r\n        if (currName === 'BTC') {\r\n          changePercent = infoAboutCurrency.percent_change_1h\r\n        }\r\n        btcBalance += balance * infoAboutCurrency.price_btc\r\n      }\r\n    })\r\n\r\n    const allFiatBalance = tableRows.reduce((acc, cur) => new BigNumber(cur.fiatBalance).plus(acc), 0)\r\n\r\n    return (\r\n      <DashboardLayout\r\n        page={page}\r\n        isDark={isDark}\r\n        BalanceForm={\r\n          <BalanceForm\r\n            isDark={isDark}\r\n            activeFiat={activeFiat}\r\n            fiatBalance={allFiatBalance}\r\n            currencyBalance={btcBalance}\r\n            changePercent={changePercent}\r\n            activeCurrency={activeCurrency}\r\n            handleReceive={this.handleModalOpen}\r\n            handleWithdraw={this.handleWithdrawFirstAsset}\r\n            handleExchange={this.handleGoExchange}\r\n            isFetching={isBalanceFetching}\r\n            type=\"wallet\"\r\n            currency=\"btc\"\r\n            infoAboutCurrency={infoAboutCurrency}\r\n            multisigPendingCount={multisigPendingCount}\r\n          />\r\n        }\r\n      >\r\n        {activeView === 0 && (\r\n          <CurrenciesList\r\n            isDark={!!isDark}\r\n            tableRows={tableRows}\r\n            hiddenCoinsList={hiddenCoinsList}\r\n            goToСreateWallet={this.goToСreateWallet}\r\n            multisigPendingCount={multisigPendingCount}\r\n          />\r\n        )}\r\n        {activeView === 1 && <History {...this.props} isDark={isDark} />}\r\n        {activeView === 2 && <InvoicesList {...this.props} onlyTable={true} isDark={isDark} />}\r\n      </DashboardLayout>\r\n    )\r\n  }\r\n}\r\n"]}]}