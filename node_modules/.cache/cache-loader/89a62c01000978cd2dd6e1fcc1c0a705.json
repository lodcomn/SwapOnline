{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\FAQ\\FAQ.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\FAQ\\FAQ.tsx","mtime":1614842913860},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/FAQ/FAQ.tsx"],"names":["React","useState","useEffect","BigNumber","InlineLoader","FormattedMessage","injectIntl","constants","feedback","adminFee","btc","eth","externalConfig","cssModules","cx","styles","tabsIdsDictionary","FIRST_TAB","SECOND_TAB","THIRD_TAB","FAQ","props","btcFee","setBtcFee","ethFee","setEthFee","_mounted","btcSatoshiPrice","ethGasPrice","fetchFees","BYTE_IN_KB","estimateFeeRate","speed","estimateGasPrice","Math","ceil","dividedBy","toNumber","console","error","faq","failed","message","formatMessage","intl","openedTabs","setOpenedTabs","openedTabsCounter","setOpenedTabsCounter","isDark","localStorage","getItem","handleTabClick","tabName","opened","id","BtcPrecentFee","isEnabled","EthPrecentFee","faQuestions","dark","faQuestions__header","faQuestions__tabsContainer","tab","tab__header","chrest","chrest_active","tab__content","tab__content_active","descriptionFee","link","api","blockcypher","defipulse","fee","calc","memo","allowMultiple"],"mappings":";;;;;;;;;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,GAAxC,EAA6CC,GAA7C,EAAkDC,cAAlD,QAAwE,SAAxE;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,SAAS,EAAE,iBADa;AAExBC,EAAAA,UAAU,EAAE,iBAFY;AAGxBC,EAAAA,SAAS,EAAE;AAHa,CAA1B;;AAMA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACOpB,QAAQ,CAAC,IAAD,CADf;AAAA;AAAA,MACdqB,MADc;AAAA,MACNC,SADM;;AAAA,mBAEOtB,QAAQ,CAAC,IAAD,CAFf;AAAA;AAAA,MAEduB,MAFc;AAAA,MAENC,SAFM;;AAIrBvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwB,QAAQ,GAAG,IAAf;AACA;AACJ;AACA;;AACI,QAAIC,eAAe,GAAG,IAAtB;AACA,QAAIC,WAAW,GAAG,IAAlB;;AANc,aAQCC,SARD;AAAA;AAAA;;AAAA;AAAA,4EAQd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEUC,gBAAAA,UAFV,GAEuB,IAFvB;AAAA;AAAA,uBAI4BpB,GAAG,CAACqB,eAAJ,CAAoB;AAAEC,kBAAAA,KAAK,EAAE;AAAT,iBAApB,CAJ5B;;AAAA;AAIIL,gBAAAA,eAJJ;AAAA;AAAA,uBAKwBhB,GAAG,CAACsB,gBAAJ,CAAqB;AAAED,kBAAAA,KAAK,EAAE;AAAT,iBAArB,CALxB;;AAAA;AAKIJ,gBAAAA,WALJ;;AAMI;AACA,oBAAIF,QAAJ,EAAc;AACZ;AACAH,kBAAAA,SAAS,CAACW,IAAI,CAACC,IAAL,CAAUR,eAAe,GAAGG,UAA5B,CAAD,CAAT,CAFY,CAGZ;;AACAL,kBAAAA,SAAS,CAAC,IAAItB,SAAJ,CAAcyB,WAAd,EAA2BQ,SAA3B,CAAqC,GAArC,EAA0CC,QAA1C,EAAD,CAAT;AACD;;AAZL;AAAA;;AAAA;AAAA;AAAA;AAcIC,gBAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd;AACA/B,gBAAAA,QAAQ,CAACgC,GAAT,CAAaC,MAAb,4BAAwC,YAAMC,OAA9C;;AAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARc;AAAA;AAAA;;AA2Bdb,IAAAA,SAAS;AACT,WAAO,YAAM;AACXH,MAAAA,QAAQ,GAAG,KAAX;AACD,KAFD;AAGD,GA/BQ,CAAT;AAJqB,MAsCLiB,aAtCK,GAsCetB,KAtCf,CAsCbuB,IAtCa,CAsCLD,aAtCK;;AAAA,mBAuCe1C,QAAQ,CAAC;AAC3CgB,IAAAA,SAAS,EAAE,KADgC;AAE3CC,IAAAA,UAAU,EAAE,KAF+B;AAG3CC,IAAAA,SAAS,EAAE;AAHgC,GAAD,CAvCvB;AAAA;AAAA,MAuCd0B,UAvCc;AAAA,MAuCFC,aAvCE;;AAAA,mBA4C6B7C,QAAQ,CAAC;AACzDgB,IAAAA,SAAS,EAAE,CAD8C;AAEzDC,IAAAA,UAAU,EAAE,CAF6C;AAGzDC,IAAAA,SAAS,EAAE;AAH8C,GAAD,CA5CrC;AAAA;AAAA,MA4Cd4B,iBA5Cc;AAAA,MA4CKC,oBA5CL;;AAmDrB,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB5C,SAAS,CAAC2C,YAAV,CAAuBD,MAA5C,CAAf;;AAEA,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,OAAD,EAAa;AAClCP,IAAAA,aAAa,iCAAMD,UAAN,2BAAmBQ,OAAnB,EAA6B,CAACR,UAAU,CAACQ,OAAD,CAAxC,GAAb;;AACA,QAAIN,iBAAiB,CAACM,OAAD,CAAjB,KAA+B,CAAnC,EAAsC;AACpC7C,MAAAA,QAAQ,CAACgC,GAAT,CAAac,MAAb,CAAoBX,aAAa,CAAC;AAAEY,QAAAA,EAAE,EAAEvC,iBAAiB,CAACqC,OAAD;AAAvB,OAAD,CAAjC;AACD;;AACDL,IAAAA,oBAAoB,iCAAMD,iBAAN,2BAA0BM,OAA1B,EAAoC,EAAEN,iBAAiB,CAACM,OAAD,CAAvD,GAApB;AACD,GAND;;AAQA,MAAMG,aAAa,GAAG/C,QAAQ,CAACgD,SAAT,CAAmB,KAAnB,CAAtB;AACA,MAAMC,aAAa,GAAGjD,QAAQ,CAACgD,SAAT,CAAmB,KAAnB,CAAtB;AAEA,sBACE;AAAK,IAAA,SAAS,YAAK1C,MAAM,CAAC4C,WAAZ,cAA2BV,MAAM,GAAGlC,MAAM,CAAC6C,IAAV,GAAiB,EAAlD;AAAd,kBACE;AAAI,IAAA,SAAS,EAAE7C,MAAM,CAAC8C;AAAtB,kBACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAqC,IAAA,cAAc,EAAC;AAApD,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAE9C,MAAM,CAAC+C;AAAvB,kBACE;AAAS,IAAA,SAAS,EAAE/C,MAAM,CAACgD;AAA3B,kBACE;AAAI,IAAA,SAAS,EAAEhD,MAAM,CAACiD,WAAtB;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMZ,cAAc,CAAC,WAAD,CAApB;AAAA;AAA5C,kBACE;AAAK,IAAA,SAAS,EAAEtC,EAAE,iCACfC,MAAM,CAACkD,MADQ,EACC,IADD,wBAEflD,MAAM,CAACmD,aAFQ,EAEQrB,UAAU,CAAC5B,SAFnB;AAAlB,IADF,eAKE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,iBAArB;AAAuC,IAAA,cAAc,EAAC;AAAtD,IALF,CADF,eAQE;AAAK,IAAA,SAAS,EAAEH,EAAE,mCACfC,MAAM,CAACoD,YADQ,EACO,IADP,yBAEfpD,MAAM,CAACqD,mBAFQ,EAEcvB,UAAU,CAAC5B,SAFzB;AAAlB,kBAIE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,kBAArB;AAAwC,IAAA,cAAc,EAAC;AAAvD,IAJF,CARF,CADF,eAgBE;AAAS,IAAA,SAAS,EAAEF,MAAM,CAACgD;AAA3B,kBACE;AAAI,IAAA,SAAS,EAAEhD,MAAM,CAACiD,WAAtB;AAAmC,IAAA,OAAO,EAAE;AAAA,aAAMZ,cAAc,CAAC,YAAD,CAApB;AAAA;AAA5C,kBACE;AAAK,IAAA,SAAS,EAAEtC,EAAE,mCACfC,MAAM,CAACkD,MADQ,EACC,IADD,yBAEflD,MAAM,CAACmD,aAFQ,EAEQrB,UAAU,CAAC3B,UAFnB;AAAlB,IADF,eAKE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,iBAArB;AAAuC,IAAA,cAAc,EAAC;AAAtD,IALF,CADF,eAQE;AAAK,IAAA,SAAS,EAAEJ,EAAE,mCACfC,MAAM,CAACoD,YADQ,EACO,IADP,yBAEfpD,MAAM,CAACqD,mBAFQ,EAEcvB,UAAU,CAAC3B,UAFzB;AAAlB,kBAIE,4CACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,kBAArB;AAAwC,IAAA,cAAc,EAAC;AAAvD,IADF,CAJF,eAOE,4CACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,mBAArB;AAAyC,IAAA,cAAc,EAAC;AAAxD,IADF,CAPF,eAUE,4CACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,mBAArB;AAAyC,IAAA,cAAc,EAAC;AAAxD,IADF,CAVF,eAaE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,mBAArB;AAAyC,IAAA,cAAc,EAAC;AAAxD,IAbF,eAcE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACsD;AAAvB,kBACE,yCADF,EACoB,GADpB,EAEG/C,MAAM,gBAEH,+CACE,+BAAIA,MAAJ,CADF,eAEG,GAFH,eAGE;AAAG,IAAA,SAAS,EAAEP,MAAM,CAACuD,IAArB;AAA2B,IAAA,IAAI,EAAE1D,cAAc,CAAC2D,GAAf,CAAmBC,WAApD;AAAiE,IAAA,MAAM,EAAC;AAAxE,kBACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAqC,IAAA,cAAc,EAAC;AAApD,IADF,CAHF,CAFG,gBASD,oBAAC,YAAD,OAXR,CAdF,eA4BE;AAAK,IAAA,SAAS,EAAEzD,MAAM,CAACsD;AAAvB,kBACE,yCADF,EACoB,GADpB,EAEG7C,MAAM,gBAEH,+CACE,+BAAIA,MAAJ,CADF,WAEG,GAFH,eAGE;AAAG,IAAA,SAAS,EAAET,MAAM,CAACuD,IAArB;AAA2B,IAAA,IAAI,EAAE1D,cAAc,CAAC2D,GAAf,CAAmBE,SAApD;AAA+D,IAAA,MAAM,EAAC;AAAtE,kBACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAqC,IAAA,cAAc,EAAC;AAApD,IADF,CAHF,CAFG,gBASD,oBAAC,YAAD,OAXR,CA5BF,eA0CE,+BA1CF,eA2CE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,eAArB;AAAqC,IAAA,cAAc,EAAC;AAApD,IA3CF,eA4CE;AAAG,IAAA,SAAS,EAAE1D,MAAM,CAACsD;AAArB,kBACE,yCADF,EACoB,GADpB,EAEGb,aAAa,gBAER,kCACGA,aAAa,CAACkB,GAAd,GAAoB,KADvB,eAEE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,0BAArB;AAAgD,IAAA,cAAc,EAAC;AAA/D,IAFF,EAGG,GAHH,eAGO,+BAAIjE,QAAQ,CAACkE,IAAT,CAAc,KAAd,EAAqB,IAArB,CAAJ,CAHP,SAFQ,gBAQR,uCAVR,CA5CF,eAyDE;AAAG,IAAA,SAAS,EAAE5D,MAAM,CAACsD;AAArB,kBACE,yCADF,EACoB,GADpB,EAEGX,aAAa,gBAER,kCACGA,aAAa,CAACgB,GAAd,GAAoB,KADvB,eAEE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,0BAArB;AAAgD,IAAA,cAAc,EAAC;AAA/D,IAFF,EAGG,GAHH,eAGO,+BAAIjE,QAAQ,CAACkE,IAAT,CAAc,KAAd,EAAqB,IAArB,CAAJ,CAHP,SAFQ,gBAQR,uCAVR,CAzDF,CARF,CAhBF,CAJF,CADF;AAwGD,CAxKD;;AA0KA,4BAAe3E,KAAK,CAAC4E,IAAN,CAAW/D,UAAU,CAACP,UAAU,CAACc,GAAD,CAAX,EAAkBL,MAAlB,EAA0B;AAAE8D,EAAAA,aAAa,EAAE;AAAjB,CAA1B,CAArB,CAAf","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable max-len */\r\nimport React, { useState, useEffect } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport InlineLoader from 'components/loaders/InlineLoader/InlineLoader'\r\nimport { FormattedMessage, injectIntl } from 'react-intl'\r\nimport { constants, feedback, adminFee, btc, eth, externalConfig } from 'helpers'\r\nimport cssModules from 'react-css-modules'\r\nimport cx from 'classnames'\r\nimport styles from './styles.scss'\r\n\r\nconst tabsIdsDictionary = {\r\n  FIRST_TAB: 'MainFAQ1_header',\r\n  SECOND_TAB: 'MainFAQ2_header',\r\n  THIRD_TAB: 'MainFAQ3_header',\r\n}\r\n\r\nconst FAQ = (props) => {\r\n  const [btcFee, setBtcFee] = useState(null)\r\n  const [ethFee, setEthFee] = useState(null)\r\n\r\n  useEffect(() => {\r\n    let _mounted = true\r\n    /*\r\n     * waiting for a response with fees and set them\r\n     */\r\n    let btcSatoshiPrice = null\r\n    let ethGasPrice = null\r\n\r\n    async function fetchFees() {\r\n      try {\r\n        const BYTE_IN_KB = 1024\r\n\r\n        btcSatoshiPrice = await btc.estimateFeeRate({ speed: 'fast' })\r\n        ethGasPrice = await eth.estimateGasPrice({ speed: 'fast' })\r\n        // remove memory leak\r\n        if (_mounted) {\r\n          // divided by 1 kb to convert it to satoshi / byte\r\n          setBtcFee(Math.ceil(btcSatoshiPrice / BYTE_IN_KB))\r\n          // return gas * 1e9 - divided by 1e9 to convert\r\n          setEthFee(new BigNumber(ethGasPrice).dividedBy(1e9).toNumber())\r\n        }\r\n      } catch (error) {\r\n        console.error('FAQ -> useEffect: ', error)\r\n        feedback.faq.failed(`fetch fees error(${error.message})`)\r\n      }\r\n    }\r\n\r\n    fetchFees()\r\n    return () => {\r\n      _mounted = false\r\n    }\r\n  })\r\n\r\n\r\n  const { intl: { formatMessage } } = props\r\n  const [openedTabs, setOpenedTabs] = useState({\r\n    FIRST_TAB: false,\r\n    SECOND_TAB: false,\r\n    THIRD_TAB: false,\r\n  })\r\n  const [openedTabsCounter, setOpenedTabsCounter] = useState({\r\n    FIRST_TAB: 0,\r\n    SECOND_TAB: 0,\r\n    THIRD_TAB: 0,\r\n  })\r\n\r\n\r\n  const isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\n  const handleTabClick = (tabName) => {\r\n    setOpenedTabs({ ...openedTabs, [tabName]: !openedTabs[tabName] })\r\n    if (openedTabsCounter[tabName] === 0) {\r\n      feedback.faq.opened(formatMessage({ id: tabsIdsDictionary[tabName] }))\r\n    }\r\n    setOpenedTabsCounter({ ...openedTabsCounter, [tabName]: ++openedTabsCounter[tabName] })\r\n  }\r\n\r\n  const BtcPrecentFee = adminFee.isEnabled('BTC')\r\n  const EthPrecentFee = adminFee.isEnabled('ETH')\r\n\r\n  return (\r\n    <div className={`${styles.faQuestions} ${isDark ? styles.dark : ''}`}>\r\n      <h5 className={styles.faQuestions__header}>\r\n        <FormattedMessage id=\"MainFAQHeader\" defaultMessage=\"FAQ\" />\r\n      </h5>\r\n      <div className={styles.faQuestions__tabsContainer}>\r\n        <article className={styles.tab}>\r\n          <h6 className={styles.tab__header} onClick={() => handleTabClick('FIRST_TAB')}>\r\n            <div className={cx({\r\n              [styles.chrest]: true,\r\n              [styles.chrest_active]: openedTabs.FIRST_TAB,\r\n            })} />\r\n            <FormattedMessage id=\"MainFAQ1_header\" defaultMessage=\"How are my private keys stored?\" />\r\n          </h6>\r\n          <div className={cx({\r\n            [styles.tab__content]: true,\r\n            [styles.tab__content_active]: openedTabs.FIRST_TAB,\r\n          })}>\r\n            <FormattedMessage id=\"MainFAQ1_content\" defaultMessage=\"Your private keys are stored ONLY on your device, in the localStorage of your browser. Please backup your keys, because your browser or device may be crashed.\" />\r\n          </div>\r\n        </article>\r\n        <article className={styles.tab}>\r\n          <h6 className={styles.tab__header} onClick={() => handleTabClick('SECOND_TAB')}>\r\n            <div className={cx({\r\n              [styles.chrest]: true,\r\n              [styles.chrest_active]: openedTabs.SECOND_TAB,\r\n            })} />\r\n            <FormattedMessage id=\"MainFAQ2_header\" defaultMessage=\"What are the fees involved?\" />\r\n          </h6>\r\n          <div className={cx({\r\n            [styles.tab__content]: true,\r\n            [styles.tab__content_active]: openedTabs.SECOND_TAB,\r\n          })}>\r\n            <p>\r\n              <FormattedMessage id=\"MainFAQ2_content\" defaultMessage=\"You pay the standard TX (miners fees) for all transactions you conduct on the platform.\" />\r\n            </p>\r\n            <p>\r\n              <FormattedMessage id=\"MainFAQ2_content1\" defaultMessage=\"For ERC20 tokens, it is required that you have at least 0.001 ETH on your wallets. Remember! when sending ERC20 tokens, you are required to hold some ETH as miners fees for transactions. This is also the case for all atomic swaps for ETH & ERC20 tokens.\" />\r\n            </p>\r\n            <p>\r\n              <FormattedMessage id=\"MainFAQ2_content2\" defaultMessage=\"NOTE: You can easily check the ‘miners fees’ required for each respective coin by simply googling them.\" />\r\n            </p>\r\n            <FormattedMessage id=\"MainFAQ2_content3\" defaultMessage=\"Current mining fees:\" />\r\n            <div className={styles.descriptionFee}>\r\n              <span>BTC:</span>{' '}\r\n              {btcFee\r\n                ? (\r\n                  <span>\r\n                    <b>{btcFee}</b> sat/byte\r\n                    {' '}\r\n                    <a className={styles.link} href={externalConfig.api.blockcypher} target=\"_blank\">\r\n                      <FormattedMessage id=\"FAQFeeApiLink\" defaultMessage=\"(source)\" />\r\n                    </a>\r\n                  </span>\r\n                ) : <InlineLoader />\r\n              }\r\n            </div>\r\n            <div className={styles.descriptionFee}>\r\n              <span>ETH:</span>{' '}\r\n              {ethFee\r\n                ? (\r\n                  <span>\r\n                    <b>{ethFee}</b> gwei\r\n                    {' '}\r\n                    <a className={styles.link} href={externalConfig.api.defipulse} target=\"_blank\">\r\n                      <FormattedMessage id=\"FAQFeeApiLink\" defaultMessage=\"(source)\" />\r\n                    </a>\r\n                  </span>\r\n                ) : <InlineLoader />\r\n              }\r\n            </div>\r\n            <br />\r\n            <FormattedMessage id=\"FAQServiceFee\" defaultMessage=\"Service fee (only withdraw):\" />\r\n            <p className={styles.descriptionFee}>\r\n              <span>BTC:</span>{' '}\r\n              {BtcPrecentFee\r\n                  ? (\r\n                    <span>\r\n                      {BtcPrecentFee.fee + '%, '}\r\n                      <FormattedMessage id=\"FAQServiceFeeDescription\" defaultMessage=\"no less than\" />\r\n                      {' '}<b>{adminFee.calc('BTC', null)}</b> BTC\r\n                    </span>\r\n                  )\r\n                  : <span>0%</span>\r\n              }\r\n            </p>\r\n            <p className={styles.descriptionFee}>\r\n              <span>ETH:</span>{' '}\r\n              {EthPrecentFee\r\n                  ? (\r\n                    <span>\r\n                      {EthPrecentFee.fee + '%, '}\r\n                      <FormattedMessage id=\"FAQServiceFeeDescription\" defaultMessage=\"no less than\" />\r\n                      {' '}<b>{adminFee.calc('ETH', null)}</b> ETH\r\n                    </span>\r\n                  )\r\n                  : <span>0%</span>\r\n              }\r\n            </p>\r\n          </div>\r\n        </article>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(cssModules(injectIntl(FAQ), styles, { allowMultiple: true }))"]}]}