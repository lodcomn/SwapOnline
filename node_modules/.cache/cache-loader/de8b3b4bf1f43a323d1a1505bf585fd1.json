{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\getPairFees.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\getPairFees.ts","mtime":1614851254074},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIkBiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yIjsKLy8gQHRzLW5vY2hlY2sKaW1wb3J0IHsgQ09JTl9EQVRBLCBDT0lOX01PREVMLCBDT0lOX1RZUEUgfSBmcm9tICdzd2FwLmFwcC9jb25zdGFudHMvQ09JTlMnOwppbXBvcnQgeyBCaWdOdW1iZXIgfSBmcm9tICdiaWdudW1iZXIuanMnOwppbXBvcnQgaGVscGVycyBmcm9tICdoZWxwZXJzJzsKdmFyIGZlZUNhY2hlID0ge307Cgp2YXIgZmV0Y2hDb2luRmVlID0gZnVuY3Rpb24gZmV0Y2hDb2luRmVlKGNvaW4pIHsKICByZXR1cm4gbmV3IFByb21pc2UoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoZmVlUmVzb2x2ZWQpIHsKICAgICAgdmFyIGNvaW5EYXRhLCBjb2luRmVlRGF0YSwgZG9udENhY2hlLCBkb1Jlc29sdmU7CiAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKCFmZWVDYWNoZVtjb2luXSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGZlZVJlc29sdmVkKGZlZUNhY2hlW2NvaW5dKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjb2luRGF0YSA9IENPSU5fREFUQVtjb2luXTsKICAgICAgICAgICAgICBjb2luRmVlRGF0YSA9IGZhbHNlOwogICAgICAgICAgICAgIGRvbnRDYWNoZSA9IGZhbHNlOwoKICAgICAgICAgICAgICBkb1Jlc29sdmUgPSBmdW5jdGlvbiBkb1Jlc29sdmUoY29pbkZlZURhdGEpIHsKICAgICAgICAgICAgICAgIGlmICghZG9udENhY2hlICYmIGNvaW5GZWVEYXRhKSB7CiAgICAgICAgICAgICAgICAgIGZlZUNhY2hlW2NvaW5dID0gY29pbkZlZURhdGE7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZmVlUmVzb2x2ZWQoY29pbkZlZURhdGEpOwogICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgIGlmICghY29pbkRhdGEpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBjb2luRGF0YS50eXBlOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSBfY29udGV4dC50MCA9PT0gQ09JTl9UWVBFLk5BVElWRSA/IDExIDogX2NvbnRleHQudDAgPT09IENPSU5fVFlQRS5FVEhfVE9LRU4gPyAxMyA6IDE1OwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBpZiAoaGVscGVyc1tjb2luRGF0YS50aWNrZXIudG9Mb3dlckNhc2UoKV0gJiYgaGVscGVyc1tjb2luRGF0YS50aWNrZXIudG9Mb3dlckNhc2UoKV0uZXN0aW1hdGVGZWVWYWx1ZSAmJiB0eXBlb2YgaGVscGVyc1tjb2luRGF0YS50aWNrZXIudG9Mb3dlckNhc2UoKV0uZXN0aW1hdGVGZWVWYWx1ZSA9PT0gImZ1bmN0aW9uIikgewogICAgICAgICAgICAgICAgaGVscGVyc1tjb2luRGF0YS50aWNrZXIudG9Mb3dlckNhc2UoKV0uZXN0aW1hdGVGZWVWYWx1ZSh7CiAgICAgICAgICAgICAgICAgIG1ldGhvZDogJ3N3YXAnCiAgICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChjb2luRmVlKSB7CiAgICAgICAgICAgICAgICAgIGRvUmVzb2x2ZSh7CiAgICAgICAgICAgICAgICAgICAgY29pbjogY29pbkRhdGEudGlja2VyLAogICAgICAgICAgICAgICAgICAgIGZlZTogbmV3IEJpZ051bWJlcihjb2luRmVlKS50b051bWJlcigpLAogICAgICAgICAgICAgICAgICAgIGlzVVRYTzogY29pbkRhdGEubW9kZWwgPT09IENPSU5fTU9ERUwuVVRYTwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlcnIpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiRmFpbCBmZXRjaCBmZWUgZm9yIGNvaW4gIi5jb25jYXQoY29pbkRhdGEudGlja2VyKSwgZXJyKTsKICAgICAgICAgICAgICAgICAgZG9udENhY2hlID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgZG9SZXNvbHZlKHsKICAgICAgICAgICAgICAgICAgICBjb2luOiBjb2luRGF0YS50aWNrZXIsCiAgICAgICAgICAgICAgICAgICAgZmVlOiAwLAogICAgICAgICAgICAgICAgICAgIGlzVVRYTzogY29pbkRhdGEubW9kZWwgPT09IENPSU5fTU9ERUwuVVRYTwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oIk5vIGhlbHBlciAnZXN0aW1hdGVGZWVWYWx1ZScgZm9yIGNvaW4gIi5jb25jYXQoY29pbkRhdGEudGlja2VyKSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJicmVhayIsIDE3KTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgaGVscGVycy5ldGguZXN0aW1hdGVGZWVWYWx1ZSh7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdzd2FwJywKICAgICAgICAgICAgICAgIHNwZWVkOiAnZmFzdCcKICAgICAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChldGhGZWUpIHsKICAgICAgICAgICAgICAgIGRvUmVzb2x2ZSh7CiAgICAgICAgICAgICAgICAgIGNvaW46ICJFVEgiLAogICAgICAgICAgICAgICAgICBmZWU6IG5ldyBCaWdOdW1iZXIoZXRoRmVlKS50b051bWJlcigpLAogICAgICAgICAgICAgICAgICBpc1VUWE86IGZhbHNlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCJGYWlsIGZldGNoIGZlZSBmb3IgY29pbiAiLmNvbmNhdChjb2luRGF0YS50aWNrZXIsICIgKEVUSCkiKSwgZXJyKTsKICAgICAgICAgICAgICAgIGRvbnRDYWNoZSA9IHRydWU7CiAgICAgICAgICAgICAgICBjb2luID0gIkVUSCI7CiAgICAgICAgICAgICAgICBkb1Jlc29sdmUoewogICAgICAgICAgICAgICAgICBjb2luOiAiRVRIIiwKICAgICAgICAgICAgICAgICAgZmVlOiAwLAogICAgICAgICAgICAgICAgICBpc1VUWE86IGZhbHNlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJicmVhayIsIDE3KTsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgY29uc29sZS53YXJuKCJVbmtub3duIGNvaW4gdHlwZSAiLmNvbmNhdChjb2luRGF0YS50eXBlLCAiIGZvciBjb2luICIpLmNvbmNhdChjb2luRGF0YS50aWNrZXIpKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJicmVhayIsIDE3KTsKCiAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIwOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBjb25zb2xlLndhcm4oImdldFBhaXJGZWVzLT5mZXRjaENvaW5GZWUgLSBVbmtub3duIGNvaW4gIi5jb25jYXQoY29pbi50b1VwcGVyQ2FzZSgpKSk7CgogICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn07CgpleHBvcnQgdmFyIGdldFBhaXJGZWVzID0gZnVuY3Rpb24gZ2V0UGFpckZlZXMoc2VsbENvaW4sIGJ1eUNvaW4pIHsKICByZXR1cm4gbmV3IFByb21pc2UoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihmZWVSZXNvbHZlZCkgewogICAgICB2YXIgc2VsbCwgYnV5LCBieUNvaW5zOwogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGZldGNoQ29pbkZlZShzZWxsQ29pbi50b1VwcGVyQ2FzZSgpKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBzZWxsID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBmZXRjaENvaW5GZWUoYnV5Q29pbi50b1VwcGVyQ2FzZSgpKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBidXkgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBieUNvaW5zID0ge307IC8vQDogUHJvcGVydHkgJ2NvaW4nIGRvZXMgbm90IGV4aXN0IG9uIHR5cGUgJ3Vua25vd24nCgogICAgICAgICAgICAgIGJ5Q29pbnNbYnV5LmNvaW5dID0gYnV5OyAvL0A6IFByb3BlcnR5ICdjb2luJyBkb2VzIG5vdCBleGlzdCBvbiB0eXBlICd1bmtub3duJwoKICAgICAgICAgICAgICBieUNvaW5zW3NlbGwuY29pbl0gPSBzZWxsOwogICAgICAgICAgICAgIGZlZVJlc29sdmVkKHsKICAgICAgICAgICAgICAgIHNlbGw6IHNlbGwsCiAgICAgICAgICAgICAgICBoYXZlOiBzZWxsLAogICAgICAgICAgICAgICAgYnV5OiBidXksCiAgICAgICAgICAgICAgICBnZXQ6IGJ1eSwKICAgICAgICAgICAgICAgIGJ5Q29pbnM6IGJ5Q29pbnMKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMik7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeDIpIHsKICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9OwogIH0oKSk7Cn07"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/helpers/getPairFees.ts"],"names":["COIN_DATA","COIN_MODEL","COIN_TYPE","BigNumber","helpers","feeCache","fetchCoinFee","coin","Promise","feeResolved","coinData","coinFeeData","dontCache","doResolve","type","NATIVE","ETH_TOKEN","ticker","toLowerCase","estimateFeeValue","method","then","coinFee","fee","toNumber","isUTXO","model","UTXO","err","console","error","warn","eth","speed","ethFee","toUpperCase","getPairFees","sellCoin","buyCoin","sell","buy","byCoins","have","get"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport {\r\n  COIN_DATA,\r\n  COIN_MODEL,\r\n  COIN_TYPE,\r\n} from 'swap.app/constants/COINS'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport helpers from 'helpers'\r\n\r\n\r\nconst feeCache = {}\r\n\r\nconst fetchCoinFee = (coin) => {\r\n  return new Promise(async (feeResolved) => {\r\n    if (feeCache[coin]) {\r\n      feeResolved(feeCache[coin])\r\n      return\r\n    }\r\n\r\n    const coinData = COIN_DATA[coin]\r\n\r\n    let coinFeeData = false\r\n    let dontCache = false\r\n\r\n    const doResolve = (coinFeeData) => {\r\n      if (!dontCache && coinFeeData) {\r\n        feeCache[coin] = coinFeeData\r\n      }\r\n      feeResolved(coinFeeData)\r\n    }\r\n\r\n    if (coinData) {\r\n      switch (coinData.type) {\r\n        case COIN_TYPE.NATIVE:\r\n          if (helpers[coinData.ticker.toLowerCase()]\r\n            && helpers[coinData.ticker.toLowerCase()].estimateFeeValue\r\n            && typeof helpers[coinData.ticker.toLowerCase()].estimateFeeValue === `function`\r\n          ) {\r\n            helpers[coinData.ticker.toLowerCase()].estimateFeeValue({\r\n              method: 'swap',\r\n            }).then((coinFee) => {\r\n              doResolve({\r\n                coin: coinData.ticker,\r\n                fee: new BigNumber(coinFee).toNumber(),\r\n                isUTXO: (coinData.model === COIN_MODEL.UTXO),\r\n              })\r\n            }).catch((err) => {\r\n              console.error(`Fail fetch fee for coin ${coinData.ticker}`, err)\r\n              dontCache = true\r\n              doResolve({\r\n                coin: coinData.ticker,\r\n                fee: 0,\r\n                isUTXO: (coinData.model === COIN_MODEL.UTXO),\r\n              })\r\n            })\r\n          } else {\r\n            console.warn(`No helper 'estimateFeeValue' for coin ${coinData.ticker}`)\r\n          }\r\n          break;\r\n        case COIN_TYPE.ETH_TOKEN:\r\n          helpers.eth.estimateFeeValue({\r\n            method: 'swap',\r\n            speed: 'fast',\r\n          }).then((ethFee) => {\r\n            doResolve({\r\n              coin: `ETH`,\r\n              fee: new BigNumber(ethFee).toNumber(),\r\n              isUTXO: false,\r\n            })\r\n          }).catch((err) => {\r\n            console.error(`Fail fetch fee for coin ${coinData.ticker} (ETH)`, err)\r\n            dontCache = true\r\n            coin = `ETH`\r\n            doResolve({\r\n              coin: `ETH`,\r\n              fee: 0,\r\n              isUTXO: false,\r\n            })\r\n          })\r\n          break;\r\n        default:\r\n          console.warn(`Unknown coin type ${coinData.type} for coin ${coinData.ticker}`)\r\n          break;\r\n      }\r\n    } else {\r\n      console.warn(`getPairFees->fetchCoinFee - Unknown coin ${coin.toUpperCase()}`)\r\n    }\r\n  })\r\n}\r\n\r\nexport const getPairFees = (sellCoin, buyCoin) => {\r\n  return new Promise(async (feeResolved) => {\r\n    const sell = await fetchCoinFee(sellCoin.toUpperCase())\r\n    const buy = await fetchCoinFee(buyCoin.toUpperCase())\r\n\r\n    const byCoins = {}\r\n    //@: Property 'coin' does not exist on type 'unknown'\r\n    byCoins[buy.coin] = buy\r\n    //@: Property 'coin' does not exist on type 'unknown'\r\n    byCoins[sell.coin] = sell\r\n\r\n    feeResolved({\r\n      sell,\r\n      have: sell,\r\n      buy,\r\n      get: buy,\r\n      byCoins,\r\n    })\r\n  })\r\n}"]}]}