{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawModal\\WithdrawModal.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawModal\\WithdrawModal.tsx","mtime":1614842914034},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/WithdrawModal/WithdrawModal.tsx"],"names":["React","Fragment","cx","cssModules","styles","actions","Link","connect","typeforce","BigNumber","FormattedMessage","injectIntl","defineMessages","isMobile","inputReplaceCommaWithDot","localisedUrl","minAmount","redirectTo","getCurrencyKey","lsDataCache","helpers","constants","links","adminFee","feedback","Modal","FieldLabel","Input","Button","Tooltip","QrReader","InvoiceInfoBlock","AdminFeeInfoBlock","CurrencyList","FeeInfoBlock","isDark","localStorage","getItem","WithdrawModal","currencies","user","ethData","btcData","ghostData","nextData","tokensData","activeFiat","isBalanceFetching","activeCurrency","dashboardModalsAllowed","ui","items","tokenItems","Object","keys","map","k","dashboardView","allowMultiple","props","error","details","withdraw","failed","message","console","JSON","stringify","setState","devError","name","data","allCurrencyies","concat","currentActiveAsset","state","selectedItem","address","isUserProtected","isSmsProtected","isPinProtected","currentDecimals","amount","method","BYTE_IN_KB","numAmount","Number","btc","estimateFeeValue","speed","moreInfo","feeRate","txSize","fee","feeSatByte","dividedBy","dp","ROUND_CEIL","toNumber","mounted","btcFeeRate","fees","miner","total","service","plus","reportError","currency","isEthToken","usedAdminFee","currentCoin","toLowerCase","adminFeeSize","calc","newMinerFee","fetchFee","eth","ethToken","coinsWithDynamicFee","includes","isBTC","setBtcFeeRate","setAlowedBalances","started","to","ownTx","comment","invoice","onReady","isShipped","sendOptions","from","beforeBalances","invoices","markInvoice","id","loader","hide","notifications","show","SuccessWithdraw","modals","close","Function","nextStepModal","WithdrawBtcPin","WithdrawBtcSms","WithdrawBtcMultisig","open","wallet","send","then","txRaw","getBalance","txInfo","transactions","getInfo","txId","tx","pullTxBalances","txInfoCache","senderAddress","receiverAddress","confirmed","push","key","time","finished","comments","setComment","txInfoUrl","getTxRouter","errorText","res","text","customError","defaultMessage","test","fullName","openScanCam","split","openScan","value","exCurrencyRate","selectedValue","clearTimeout","btcFeeTimer","setTimeout","hasExCurrencyRate","isGreaterThan","fiatAmount","times","toString","div","history","locale","intl","home","balances","ONE_HUNDRED_PERCENT","minerFee","maxService","multipliedBy","balance","maxAmount","minus","maxFiatAmount","isLessThanOrEqualTo","allowedCurrency","allowedFiat","newServiceFeeSize","event","BACKSPACE","LEFT_ARROW","RIGHT_ARROW","DELETE","isNumber","amountValue","target","keyCode","preventDefault","maxQuantityDecimals","length","toAddress","withdrawWallet","tokenDecimals","core","getWallets","getWithdrawWallet","isEnabled","infoAboutCurrency","price_fiat","arrWithEthWallet","filter","item","ethWallet","hiddenCoinsList","getHiddenCoins","isInvoicePay","setCommissions","entered","prevProps","prevState","prevData","prevItems","prevAmount","prevFiatAmount","setCurrenctActiveAsset","updateServiceAndTotalFee","isCoinAddress","BTC","addressIsCorrect","ETH","toUpperCase","isBTCWallet","portalUI","linked","all","currentAddress","currentBalance","tableRows","activeCriptoCurrency","selectedValueView","criptoCurrencyHaveInfoPrice","returnHaveInfoPrice","ethBalanceLessThanMiner","isLessThan","exEthereumRate","result","forEach","isDisabled","labels","withdrowModal","balanceFiatMobile","balanceFiatDesktop","balanceMobile","balanceDesktop","ownTxPlaceholder","dataCurrency","formRender","handleScan","br","marginBottom","textAlign","right","additionalСurrenciesItemActive","handleBuyCurrencySelect","amountInputKeyDownCallback","pipe","handleAmount","marginLeft","setMaxBalance","isEqualTo","allowedBalance","maxWidth","formatMessage","handleClose","handleSubmit","paddingTop","paddingBottom","Component"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport cx from 'classnames'\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './WithdrawModal.scss'\r\n\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\nimport typeforce from 'swap.app/util/typeforce'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport { inputReplaceCommaWithDot } from 'helpers/domUtils'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport minAmount from 'helpers/constants/minAmount'\r\nimport redirectTo from 'helpers/redirectTo'\r\nimport getCurrencyKey from 'helpers/getCurrencyKey'\r\nimport lsDataCache from 'helpers/lsDataCache'\r\nimport helpers, {\r\n  constants,\r\n  links,\r\n  adminFee,\r\n  feedback,\r\n} from 'helpers'\r\n\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Button from 'components/controls/Button/Button'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport QrReader from 'components/QrReader'\r\nimport InvoiceInfoBlock from 'components/InvoiceInfoBlock/InvoiceInfoBlock'\r\nimport AdminFeeInfoBlock from 'components/AdminFeeInfoBlock/AdminFeeInfoBlock'\r\nimport CurrencyList from './components/CurrencyList'\r\nimport FeeInfoBlock from './components/FeeInfoBlock'\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\ntype Currency = {\r\n  addAssets: boolean\r\n  fullTitle: string\r\n  icon: string\r\n  name: string\r\n  title: string\r\n  value: string\r\n}\r\n\r\ntype WithdrawModalProps = {\r\n  name: 'WithdrawModal'\r\n  activeFiat: string\r\n  activeCurrency: string\r\n  dashboardView: boolean\r\n  isBalanceFetching: boolean\r\n  currencies: Currency[]\r\n\r\n  intl: IUniversalObj\r\n  history: IUniversalObj\r\n  data: IUniversalObj\r\n  tokenItems: IUniversalObj[]\r\n  items: IUniversalObj[]\r\n\r\n  portalUI?: any\r\n}\r\n\r\ntype WithdrawModalState = {\r\n  isShipped: boolean\r\n  isEthToken: boolean\r\n  fetchFee: boolean\r\n  isInvoicePay?: boolean\r\n  openScanCam: boolean\r\n  \r\n  address: string\r\n  comment?: string\r\n  ownTx: string\r\n  selectedValue: string\r\n  fiatAmount: string\r\n  amount: string\r\n  \r\n  currentDecimals: number\r\n  btcFeeRate: number\r\n  txSize: null | number\r\n  \r\n  devError: IError | null\r\n  ethWallet: IUniversalObj\r\n  exCurrencyRate: BigNumber\r\n  fees: {\r\n    miner: BigNumber\r\n    service: BigNumber\r\n    total: BigNumber\r\n    adminFeeSize: BigNumber\r\n  }\r\n  usedAdminFee: {\r\n    address: string\r\n    fee: number\r\n    min: number\r\n  }\r\n  balances: {\r\n    balance: BigNumber\r\n    allowedCurrency: BigNumber\r\n    allowedFiat: BigNumber\r\n  }\r\n\r\n  hiddenCoinsList: string[]\r\n  currentActiveAsset: IUniversalObj\r\n  allCurrencyies: IUniversalObj[]\r\n  selectedItem: IUniversalObj\r\n}\r\n\r\n@injectIntl\r\n@connect(\r\n  ({\r\n    currencies,\r\n    user: {\r\n      ethData,\r\n      btcData,\r\n      ghostData,\r\n      nextData,\r\n      tokensData,\r\n      activeFiat,\r\n      isBalanceFetching,\r\n      activeCurrency,\r\n    },\r\n    ui: { dashboardModalsAllowed },\r\n  }) => ({\r\n    activeFiat,\r\n    activeCurrency,\r\n    currencies: currencies.items,\r\n    items: [ethData, btcData, ghostData, nextData],\r\n    tokenItems: [...Object.keys(tokensData).map((k) => tokensData[k])],\r\n    dashboardView: dashboardModalsAllowed,\r\n    isBalanceFetching,\r\n  })\r\n)\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class WithdrawModal extends React.Component<WithdrawModalProps, WithdrawModalState> {\r\n  mounted = true\r\n  btcFeeTimer: ReturnType<typeof setTimeout> | null = null\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {\r\n      items,\r\n      data: { \r\n        amount, \r\n        toAddress, \r\n        currency,\r\n        address: withdrawWallet,\r\n      },\r\n    } = props\r\n\r\n    const currentActiveAsset = props.data\r\n    const currentDecimals = constants.tokenDecimals[getCurrencyKey(currency, true).toLowerCase()]\r\n    const allCurrencyies = actions.core.getWallets({}) //items.concat(tokenItems)\r\n    const selectedItem = actions.user.getWithdrawWallet(currency, withdrawWallet)\r\n    const usedAdminFee = adminFee.isEnabled(selectedItem.currency)\r\n    const infoAboutCurrency = currentActiveAsset.infoAboutCurrency\r\n    const isEthToken = helpers.ethToken.isEthToken({ name: currency.toLowerCase() })\r\n    const exCurrencyRate = infoAboutCurrency && infoAboutCurrency.price_fiat\r\n      ? new BigNumber(currentActiveAsset.infoAboutCurrency.price_fiat)\r\n      : new BigNumber(0)\r\n    // save ethereum wallet for token exchange's rate\r\n    const arrWithEthWallet = items.filter(item => {\r\n      return item.currency.toLowerCase() === 'eth' \r\n        && item.infoAboutCurrency\r\n        && item.infoAboutCurrency.price_fiat\r\n    })\r\n    const ethWallet = arrWithEthWallet[0] || {}\r\n\r\n    this.state = {\r\n      isShipped: false,\r\n      usedAdminFee,\r\n      openScanCam: false,\r\n      address: toAddress ? toAddress : '',\r\n      fiatAmount: '',\r\n      amount: '',\r\n      selectedItem,\r\n      isEthToken,\r\n      currentDecimals,\r\n      selectedValue: currency,\r\n      ownTx: '',\r\n      hiddenCoinsList: actions.core.getHiddenCoins(),\r\n      currentActiveAsset,\r\n      ethWallet,\r\n      exCurrencyRate,\r\n      allCurrencyies,\r\n      devError: null,\r\n      fees: {\r\n        miner: new BigNumber(0),\r\n        service: new BigNumber(0),\r\n        total: new BigNumber(0),\r\n        adminFeeSize: new BigNumber(0),\r\n      },\r\n      balances: {\r\n        balance: new BigNumber(selectedItem.balance || 0),\r\n        allowedCurrency: new BigNumber(0),\r\n        allowedFiat: new BigNumber(0),\r\n      },\r\n      btcFeeRate: null,\r\n      fetchFee: true,\r\n      txSize: null,\r\n      isInvoicePay: !!(currentActiveAsset.invoice),\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false\r\n    clearTimeout(this.btcFeeTimer)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setCommissions()\r\n    feedback.withdraw.entered()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { \r\n      data: prevData, \r\n      items: prevItems,\r\n    } = prevProps\r\n    const { \r\n      data, \r\n      items,\r\n    } = this.props\r\n    const {\r\n      amount: prevAmount,\r\n      fiatAmount: prevFiatAmount,\r\n    } = prevState\r\n    const {\r\n      amount,\r\n      fiatAmount,\r\n    } = this.state\r\n\r\n    if (prevData !== data || prevItems !== items) {\r\n      this.setCurrenctActiveAsset()\r\n    }\r\n    if (prevAmount !== amount || prevFiatAmount !== fiatAmount) {\r\n      this.updateServiceAndTotalFee()\r\n    }\r\n  }\r\n\r\n  reportError = (error: IError, details: string = '-') => {\r\n    feedback.withdraw.failed(`details(${details}) : error message(${error.message})`)\r\n    console.error(`Withdraw. details(${details}) : error(${JSON.stringify(error)})`)\r\n    this.setState({ \r\n      devError: {\r\n        name: error.name || 'Error',\r\n        message: error.message || '-',\r\n      },\r\n    })\r\n  }\r\n\r\n  setCurrenctActiveAsset = () => {\r\n    const { items, tokenItems, data } = this.props\r\n    const allCurrencyies = items.concat(tokenItems)\r\n    this.setState({\r\n      currentActiveAsset: data,\r\n      allCurrencyies,\r\n    })\r\n  }\r\n\r\n  setBtcFeeRate = async () => {\r\n    const {\r\n      selectedItem: {\r\n        address,\r\n        isUserProtected,\r\n        isSmsProtected,\r\n        isPinProtected,\r\n      },\r\n      currentDecimals,\r\n      amount,\r\n    } = this.state\r\n\r\n    let method = `send`\r\n    if (isUserProtected) method = `send_multisig`\r\n    if (isSmsProtected || isPinProtected) method = `send_2fa`\r\n\r\n    const BYTE_IN_KB = 1024\r\n    const numAmount = Number(amount) || 0\r\n\r\n    try {\r\n      const { feeRate, txSize, fee } = await helpers.btc.estimateFeeValue({\r\n        method,\r\n        speed: 'fast',\r\n        address,\r\n        amount: numAmount,\r\n        moreInfo: true,\r\n      })\r\n      const feeSatByte = new BigNumber(feeRate).dividedBy(BYTE_IN_KB).dp(0, BigNumber.ROUND_CEIL).toNumber()\r\n\r\n      if (!this.mounted) return\r\n      this.setState((state) => ({\r\n        btcFeeRate: feeSatByte,\r\n        txSize,\r\n        fees: {\r\n          ...state.fees,\r\n          miner: new BigNumber(fee),\r\n          total: state.fees.service.plus(fee).dp(currentDecimals, BigNumber.ROUND_CEIL),\r\n        },\r\n      }))\r\n    } catch (error) {\r\n      this.reportError(error)\r\n    }\r\n  }\r\n\r\n  setCommissions = async () => {\r\n    const {\r\n      data: { currency },\r\n    } = this.props\r\n    const {\r\n      isEthToken,\r\n      selectedItem,\r\n      usedAdminFee,\r\n      amount,\r\n      currentDecimals,\r\n    } = this.state\r\n\r\n    const currentCoin = getCurrencyKey(currency, true).toLowerCase()\r\n    const adminFeeSize = usedAdminFee ? adminFee.calc(currency, amount) : 0\r\n    let newMinerFee = new BigNumber(0)\r\n\r\n    if (!this.mounted) return\r\n    this.setState({ fetchFee: true })\r\n\r\n    try {\r\n      if (isEthToken) {\r\n        // if decimals < 7 then equal 0.0...1\r\n        // if decimals >= 7 then equal 1e-<decimals>\r\n        minAmount[currentCoin] = 10 ** -currentDecimals\r\n        minAmount.eth = await helpers.eth.estimateFeeValue({\r\n          method: 'send',\r\n          speed: 'fast',\r\n        })\r\n\r\n        newMinerFee = new BigNumber(await helpers.ethToken.estimateFeeValue({\r\n          method: 'send',\r\n          speed: 'fast',\r\n        }))\r\n      } else if (constants.coinsWithDynamicFee.includes(currentCoin)) {\r\n        let method = 'send'\r\n        if (selectedItem.isUserProtected) method = 'send_multisig'\r\n        if (selectedItem.isPinProtected || selectedItem.isSmsProtected) method = 'send_2fa'\r\n\r\n        newMinerFee = new BigNumber(await helpers[currentCoin].estimateFeeValue({\r\n          method,\r\n          speed: 'fast',\r\n          address: selectedItem.address,\r\n          amount,\r\n        }))\r\n\r\n        minAmount[currentCoin] = newMinerFee.toNumber()\r\n\r\n        if (selectedItem.isBTC) {\r\n          this.setBtcFeeRate()\r\n        }\r\n      }\r\n\r\n      this.setState((state) => ({\r\n        fees: {\r\n          ...state.fees,\r\n          miner: newMinerFee,\r\n          service: new BigNumber(adminFeeSize).dp(currentDecimals, BigNumber.ROUND_CEIL),\r\n          total: newMinerFee.plus(adminFeeSize).dp(currentDecimals, BigNumber.ROUND_CEIL),\r\n          adminFeeSize: new BigNumber(adminFeeSize),\r\n        },\r\n      }))\r\n      this.setAlowedBalances()\r\n    } catch (error) {\r\n      this.reportError(error)\r\n    } finally {\r\n      this.setState({ fetchFee: false })\r\n    }\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    feedback.withdraw.started()\r\n\r\n    const {\r\n      address: to,\r\n      amount,\r\n      ownTx,\r\n      fees,\r\n      selectedItem,\r\n      isEthToken,\r\n      comment = ''\r\n    } = this.state\r\n\r\n    const {\r\n      data: { currency, address, invoice, onReady },\r\n      name,\r\n    } = this.props\r\n\r\n    this.setState(() => ({\r\n      isShipped: true,\r\n      devError: null,\r\n    }))\r\n\r\n    let sendOptions = {\r\n      from: address,\r\n      to,\r\n      amount,\r\n      speed: 'fast',\r\n      name: isEthToken ? currency.toLowerCase() : '',\r\n    }\r\n\r\n    // ? is it need ?\r\n    // Опрашиваем балансы отправителя и получателя на момент выполнения транзакции\r\n    // Нужно для расчета final balance получателя и отправителя\r\n    let beforeBalances = false\r\n    // try {\r\n    //   // beforeBalances = await helpers.transactions.getTxBalances(currency, address, to)\r\n    // } catch (error) {\r\n    //   this.reportError(error, 'Fail fetch balances - may be destination is segwit')\r\n    // }\r\n\r\n    if (invoice && ownTx) {\r\n      await actions.invoices.markInvoice(invoice.id, 'ready', ownTx, address)\r\n      actions.loader.hide()\r\n      actions.notifications.show(constants.notifications.SuccessWithdraw, {\r\n        amount,\r\n        currency,\r\n        address: to,\r\n      })\r\n      this.setState(() => ({ isShipped: false }))\r\n      actions.modals.close(name)\r\n      if (onReady instanceof Function) {\r\n        onReady()\r\n      }\r\n      return\r\n    }\r\n\r\n    if (selectedItem.isPinProtected || selectedItem.isSmsProtected || selectedItem.isUserProtected) {\r\n      let nextStepModal = constants.modals.WithdrawBtcPin\r\n      if (selectedItem.isSmsProtected) nextStepModal = constants.modals.WithdrawBtcSms\r\n      if (selectedItem.isUserProtected) nextStepModal = constants.modals.WithdrawBtcMultisig\r\n\r\n      actions.modals.close(name)\r\n      actions.modals.open(nextStepModal, {\r\n        wallet: selectedItem,\r\n        invoice,\r\n        sendOptions,\r\n        beforeBalances,\r\n        onReady,\r\n        adminFee: fees.adminFeeSize,\r\n      })\r\n      return\r\n    }\r\n\r\n    await actions[currency.toLowerCase()]\r\n      .send(sendOptions)\r\n      .then(async (txRaw) => {\r\n        actions.loader.hide()\r\n        actions[currency.toLowerCase()].getBalance(currency)\r\n        if (invoice) {\r\n          await actions.invoices.markInvoice(invoice.id, 'ready', txRaw, address)\r\n        }\r\n\r\n        this.setState({\r\n          isShipped: false\r\n        })\r\n\r\n        if (onReady instanceof Function) {\r\n          onReady()\r\n        }\r\n\r\n        // Redirect to tx\r\n        const txInfo = helpers.transactions.getInfo(currency.toLowerCase(), txRaw)\r\n        const { tx: txId } = txInfo\r\n\r\n        // Не используем await. Сбрасываем статистику по транзакции (final balance)\r\n        // Без блокировки клиента\r\n        // Результат и успешность запроса критического значения не имеют\r\n        helpers.transactions.pullTxBalances(txId, amount, beforeBalances, adminFee)\r\n\r\n        // Сохраняем транзакцию в кеш\r\n        const txInfoCache = {\r\n          amount,\r\n          senderAddress: address,\r\n          receiverAddress: to,\r\n          confirmed: false,\r\n          adminFee: fees.adminFeeSize,\r\n        }\r\n\r\n        lsDataCache.push({\r\n          key: `TxInfo_${currency.toLowerCase()}_${txId}`,\r\n          time: 3600,\r\n          data: txInfoCache,\r\n        })\r\n        feedback.withdraw.finished()\r\n\r\n        if (comment) {\r\n          actions.comments.setComment({\r\n            key: txId,\r\n            comment: comment\r\n          })\r\n        }\r\n\r\n        const txInfoUrl = helpers.transactions.getTxRouter(currency.toLowerCase(), txId)\r\n        redirectTo(txInfoUrl)\r\n      })\r\n      .then(() => {\r\n        actions.modals.close(name)\r\n      })\r\n      .catch((error) => {\r\n        const { selectedItem } = this.state\r\n        const errorText = error.res ? error.res.text : ''\r\n        const customError = {\r\n          name: {\r\n            id: 'Withdraw218',\r\n            defaultMessage: 'Withdrawal error',\r\n          },\r\n          message: {\r\n            id: 'ErrorNotification12',\r\n            defaultMessage: 'Oops, looks like something went wrong!',\r\n          },\r\n        }\r\n\r\n        if (/insufficient priority|bad-txns-inputs-duplicate/.test(errorText)) {\r\n          customError.message = {\r\n            id: 'Withdraw232',\r\n            defaultMessage: 'There is not enough confirmation of the last transaction. Try later.',\r\n          }\r\n        }\r\n\r\n        this.reportError(error, `selected item: ${selectedItem.fullName} | custom message: ${customError.message.defaultMessage}`)\r\n        this.setState(() => ({\r\n          isShipped: false,\r\n        }))\r\n      })\r\n  }\r\n\r\n  addressIsCorrect() {\r\n    const {\r\n      data: { currency },\r\n    } = this.props\r\n    const { address, isEthToken } = this.state\r\n\r\n    if (getCurrencyKey(currency, false).toLowerCase() === `btc`) {\r\n      if (!typeforce.isCoinAddress.BTC(address)) {\r\n        return actions.btc.addressIsCorrect(address)\r\n      }\r\n      return true\r\n    }\r\n\r\n    if (isEthToken) {\r\n      return typeforce.isCoinAddress.ETH(address)\r\n    }\r\n\r\n    return typeforce.isCoinAddress[getCurrencyKey(currency, false).toUpperCase()](address)\r\n  }\r\n\r\n  openScan = () => {\r\n    const { openScanCam } = this.state\r\n\r\n    this.setState(() => ({\r\n      openScanCam: !openScanCam,\r\n    }))\r\n  }\r\n\r\n  handleScan = (data) => {\r\n    if (data) {\r\n      const address = data.split(':')[1].split('?')[0]\r\n      const amount = data.split('=')[1]\r\n\r\n      this.setState(() => ({ address, amount }))\r\n      this.openScan()\r\n    }\r\n  }\r\n  // (value: any) => void' is not assignable to parameter of type Transform<string>\r\n  handleAmount = (value): any => {\r\n    const {\r\n      currentActiveAsset,\r\n      currentDecimals,\r\n      exCurrencyRate,\r\n      selectedValue,\r\n      selectedItem: {\r\n        isBTC,\r\n      },\r\n    } = this.state\r\n\r\n    if (isBTC) {\r\n      clearTimeout(this.btcFeeTimer)\r\n      this.btcFeeTimer = setTimeout(() => {\r\n        this.setBtcFeeRate()\r\n      }, 2000)\r\n    }\r\n\r\n    const hasExCurrencyRate = exCurrencyRate.isGreaterThan(0)\r\n\r\n    if (selectedValue === currentActiveAsset.currency) {\r\n      this.setState({\r\n        fiatAmount: value && hasExCurrencyRate\r\n          ? exCurrencyRate.times(value).dp(2, BigNumber.ROUND_CEIL).toString()\r\n          : '',\r\n        amount: value,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        fiatAmount: value,\r\n        amount: value && hasExCurrencyRate\r\n          ? new BigNumber(value).div(exCurrencyRate).dp(currentDecimals).toString() \r\n          : '',\r\n      })\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n    const { name } = this.props\r\n\r\n    history.push(localisedUrl(locale, links.home))\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  handleBuyCurrencySelect = (value) => {\r\n    this.setState({\r\n      selectedValue: value,\r\n    })\r\n  }\r\n\r\n  setAlowedBalances = () => {\r\n    const {\r\n      isEthToken,\r\n      usedAdminFee,\r\n      currentDecimals,\r\n      exCurrencyRate,\r\n      balances,\r\n      fees,\r\n    } = this.state\r\n\r\n    const ONE_HUNDRED_PERCENT = 100\r\n    const minerFee = isEthToken ? new BigNumber(0) : fees.miner\r\n    const maxService = usedAdminFee\r\n        ? new BigNumber(usedAdminFee.fee).dividedBy(ONE_HUNDRED_PERCENT).multipliedBy(balances.balance)\r\n        : new BigNumber(0)\r\n    const maxAmount = balances.balance.minus(minerFee).minus(maxService).dp(currentDecimals, BigNumber.ROUND_CEIL)\r\n    const maxFiatAmount = maxAmount.multipliedBy(exCurrencyRate).dp(2, BigNumber.ROUND_CEIL)\r\n\r\n    if (maxAmount.isGreaterThan(balances.balance) || maxAmount.isLessThanOrEqualTo(0)) {\r\n      this.setState((state) => ({\r\n        balances: {\r\n          ...state.balances,\r\n          allowedCurrency: new BigNumber(0),\r\n          allowedFiat: new BigNumber(0),\r\n        },\r\n      }))\r\n    } else {\r\n      this.setState((state) => ({\r\n        balances: {\r\n          ...state.balances,\r\n          allowedCurrency: maxAmount,\r\n          allowedFiat: maxFiatAmount,\r\n        },\r\n      }))\r\n    }\r\n  }\r\n\r\n  setMaxBalance = () => {\r\n    const { balances } = this.state\r\n\r\n    this.setState({\r\n      amount: balances.allowedCurrency.toString(),\r\n      fiatAmount: balances.allowedFiat.toString(),\r\n    })\r\n  }\r\n\r\n  updateServiceAndTotalFee = () => {\r\n    const { usedAdminFee, amount, fees, currentDecimals } = this.state\r\n    const ONE_HUNDRED_PERCENT = 100\r\n\r\n    let newServiceFeeSize = usedAdminFee\r\n      ? new BigNumber(usedAdminFee.fee).dividedBy(ONE_HUNDRED_PERCENT).multipliedBy(amount)\r\n      : new BigNumber(0)\r\n\r\n    newServiceFeeSize = new BigNumber(amount).isGreaterThan(0) \r\n      && newServiceFeeSize.isGreaterThan(fees.adminFeeSize)\r\n        ? newServiceFeeSize\r\n        : fees.adminFeeSize\r\n    \r\n    this.setState((state) => ({\r\n      fees: {\r\n        ...state.fees,\r\n        service: newServiceFeeSize.dp(currentDecimals, BigNumber.ROUND_CEIL),\r\n        total: fees.miner.plus(newServiceFeeSize).dp(currentDecimals, BigNumber.ROUND_CEIL),\r\n      },\r\n    }))\r\n  }\r\n\r\n  amountInputKeyDownCallback = (event) => {\r\n    const { currentDecimals, currentActiveAsset, selectedValue } = this.state\r\n    // key codes\r\n    const BACKSPACE = 8\r\n    const LEFT_ARROW = 37\r\n    const RIGHT_ARROW = 39\r\n    const DELETE = 46\r\n    const isNumber = +event.key >= 0 && +event.key <= 9\r\n    const amountValue = event.target.value\r\n\r\n    if (event.key === ',') {\r\n      inputReplaceCommaWithDot(event)\r\n    }\r\n    \r\n    if (\r\n      !(isNumber ||\r\n        event.keyCode === BACKSPACE ||\r\n        event.keyCode === LEFT_ARROW ||\r\n        event.keyCode === RIGHT_ARROW ||\r\n        event.keyCode === DELETE ||\r\n        event.key === '.' ||\r\n        event.key === ','\r\n      )\r\n    ) {\r\n      event.preventDefault()\r\n    } else if (amountValue.includes('.')) {\r\n      // block number input if quantity decimal places\r\n      // more than allowed (crypto: currentDecimals | fiat: 2)\r\n      const maxQuantityDecimals = selectedValue === currentActiveAsset.currency\r\n        ? amountValue.split('.')[1].length === currentDecimals\r\n        : amountValue.split('.')[1].length === 2\r\n\r\n      maxQuantityDecimals && isNumber && event.preventDefault()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      ownTx,\r\n      amount,\r\n      address,\r\n      balances,\r\n      ethWallet,\r\n      isShipped,\r\n      fiatAmount,\r\n      isEthToken,\r\n      openScanCam,\r\n      exCurrencyRate,\r\n      currentDecimals,\r\n      hiddenCoinsList,\r\n      currentActiveAsset,\r\n      selectedValue,\r\n      usedAdminFee,\r\n      devError,\r\n      fees,\r\n      fetchFee,\r\n      txSize,\r\n      btcFeeRate,\r\n      selectedItem: {\r\n        isBTC: isBTCWallet,\r\n      },\r\n    } = this.state\r\n\r\n    const { name, intl, portalUI, activeFiat, dashboardView } = this.props\r\n    const linked = Link.all(this, 'address', 'amount', 'ownTx', 'fiatAmount', 'comment')\r\n\r\n    const {\r\n      currency,\r\n      address: currentAddress,\r\n      balance: currentBalance,\r\n      invoice,\r\n    } = currentActiveAsset\r\n\r\n    let tableRows = actions.core.getWallets({}).filter(({ currency, address, balance }) => {\r\n      // @ToDo - В будущем нужно убрать проверку только по типу монеты.\r\n      // Старую проверку оставил, чтобы у старых пользователей не вывалились скрытые кошельки\r\n\r\n      return (\r\n        (!hiddenCoinsList.includes(currency) &&\r\n          !hiddenCoinsList.includes(`${currency}:${address}`)) ||\r\n        balance > 0\r\n      )\r\n    })\r\n\r\n    const activeCriptoCurrency = getCurrencyKey(currentActiveAsset.currency, true).toUpperCase()\r\n    const selectedValueView = getCurrencyKey(selectedValue, true).toUpperCase()\r\n    const criptoCurrencyHaveInfoPrice = returnHaveInfoPrice();\r\n    const ethBalanceLessThanMiner = new BigNumber(ethWallet.balance).isLessThan(fees.miner)\r\n    const exEthereumRate = new BigNumber(ethWallet.infoAboutCurrency.price_fiat || 0)\r\n\r\n    function returnHaveInfoPrice(): boolean {\r\n      let result = true\r\n\r\n      tableRows.forEach(item => {\r\n        if (item.currency === activeCriptoCurrency) {\r\n          result = item.infoAboutCurrency && item.infoAboutCurrency.price_fiat\r\n        }\r\n      })\r\n\r\n      return result\r\n    }\r\n\r\n    const isDisabled =\r\n      !address ||\r\n      !+amount ||\r\n      isShipped ||\r\n      !!ownTx ||\r\n      !this.addressIsCorrect() ||\r\n      isEthToken && ethBalanceLessThanMiner ||\r\n      new BigNumber(amount).isGreaterThan(balances.balance) ||\r\n      new BigNumber(amount).dp() > currentDecimals\r\n\r\n\r\n    const labels = defineMessages({\r\n      withdrowModal: {\r\n        id: 'withdrowTitle271',\r\n        defaultMessage: `Send`,\r\n      },\r\n      balanceFiatMobile: {\r\n        id: 'Withdraw_FiatBalanceMobile',\r\n        defaultMessage: '~{amount} {currency}',\r\n      },\r\n      balanceFiatDesktop: {\r\n        id: 'Withdraw_FiatBalanceDesktop',\r\n        defaultMessage: 'это ~{amount} {currency}',\r\n      },\r\n      balanceMobile: {\r\n        id: 'Withdraw_BalanceMobile',\r\n        defaultMessage: '{amount} {currency}',\r\n      },\r\n      balanceDesktop: {\r\n        id: 'Withdraw_BalanceDesktop',\r\n        defaultMessage: '{amount} {currency} will be send',\r\n      },\r\n      ownTxPlaceholder: {\r\n        id: 'withdrawOwnTxPlaceholder',\r\n        defaultMessage: 'If paid from another source',\r\n      },\r\n    })\r\n\r\n    const dataCurrency = isEthToken ? 'ETH' : currency.toUpperCase()\r\n\r\n    const formRender = (\r\n      <Fragment>\r\n        {openScanCam && (\r\n          <QrReader\r\n            openScan={this.openScan}\r\n            handleError={this.reportError}\r\n            handleScan={this.handleScan}\r\n          />\r\n        )}\r\n        {invoice && <InvoiceInfoBlock invoiceData={invoice} />}\r\n        {!dashboardView && (\r\n          <p styleName={isEthToken ? 'rednotes' : 'notice'}>\r\n            <FormattedMessage\r\n              id=\"Withdrow213\"\r\n              defaultMessage=\"Please note: Fee is {minAmount} {data}.{br}Your balance must exceed this sum to perform transaction\"\r\n              values={{\r\n                minAmount: <span>{isEthToken ? minAmount.eth : fees.total.toNumber()}</span>,\r\n                br: <br />,\r\n                data: `${dataCurrency}`,\r\n              }}\r\n            />\r\n          </p>\r\n        )}\r\n\r\n        <div style={{ marginBottom: '40px' }}>\r\n          <div styleName=\"customSelectContainer\">\r\n            <FieldLabel>\r\n              <FormattedMessage id=\"Withdrow559\" defaultMessage=\"Send from wallet \" />\r\n            </FieldLabel>\r\n            <CurrencyList\r\n              {...this.props}\r\n              currentActiveAsset={currentActiveAsset}\r\n              currentBalance={currentBalance}\r\n              currency={currency}\r\n              exCurrencyRate={exCurrencyRate.toNumber()}\r\n              activeFiat={activeFiat}\r\n              tableRows={tableRows}\r\n              currentAddress={currentAddress}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div styleName=\"highLevel\">\r\n          <FieldLabel>\r\n            <FormattedMessage id=\"Withdrow1194\" defaultMessage=\"Address \" />{' '}\r\n            <Tooltip id=\"WtH203\">\r\n              <div style={{ textAlign: 'center' }}>\r\n                <FormattedMessage\r\n                  id=\"WTH275\"\r\n                  defaultMessage=\"Make sure the wallet you{br}are sending the funds to supports {currency}\"\r\n                  values={{\r\n                    br: <br />,\r\n                    currency: `${currency.toUpperCase()}`,\r\n                  }}\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          </FieldLabel>\r\n          <Input\r\n            valueLink={linked.address}\r\n            focusOnInit\r\n            pattern=\"0-9a-zA-Z:\"\r\n            placeholder={`Enter ${currency.toUpperCase()} address to transfer`}\r\n            qr={isMobile}\r\n            openScan={this.openScan}\r\n          />\r\n          {/* show invalid value warning in address input */}\r\n          {address && !this.addressIsCorrect() && (\r\n            <div styleName=\"rednote bottom0\">\r\n              <FormattedMessage\r\n                id=\"WithdrawIncorectAddress\"\r\n                defaultMessage=\"Your address not correct\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div styleName={`lowLevel ${isDark ? 'dark' : ''}`} style={{ marginBottom: '30px' }}>\r\n          {/* why style ? see tip for max button */}  \r\n          <div style={usedAdminFee ? { right: '20px' } : null} styleName=\"additionalСurrencies\">\r\n            {criptoCurrencyHaveInfoPrice && <>\r\n                <span\r\n                  styleName={cx('additionalСurrenciesItem', {\r\n                    additionalСurrenciesItemActive: selectedValue.toUpperCase() === activeFiat,\r\n                  })}\r\n                  onClick={() => this.handleBuyCurrencySelect(activeFiat)}\r\n                >\r\n                  {activeFiat}\r\n                </span>\r\n                <span styleName=\"delimiter\"></span>\r\n              </>\r\n            }\r\n            <span\r\n              styleName={cx('additionalСurrenciesItem', {\r\n                additionalСurrenciesItemActive:\r\n                  selectedValueView === activeCriptoCurrency,\r\n              })}\r\n              onClick={() => this.handleBuyCurrencySelect(currentActiveAsset.currency)}\r\n            >\r\n              {activeCriptoCurrency}\r\n            </span>\r\n          </div>\r\n          {/* why style ? see tip for max button */}\r\n          <p style={usedAdminFee ? { right: '10px' } : null} styleName='balance'>\r\n            {new BigNumber(amount).isGreaterThan(0) && criptoCurrencyHaveInfoPrice && (\r\n              <FormattedMessage\r\n                {...labels[\r\n                  selectedValue !== activeFiat\r\n                    ? isMobile\r\n                      ? `balanceFiatMobile`\r\n                      : `balanceFiatDesktop`\r\n                    : isMobile\r\n                    ? `balanceMobile`\r\n                    : `balanceDesktop`\r\n                ]}\r\n                values={{\r\n                  amount: selectedValue !== activeFiat\r\n                    ? new BigNumber(fiatAmount).dp(2, BigNumber.ROUND_CEIL).toNumber()\r\n                    : new BigNumber(amount).dp(6, BigNumber.ROUND_CEIL).toNumber(),\r\n                  currency: selectedValue !== activeFiat ? activeFiat : activeCriptoCurrency.toUpperCase(),\r\n                }}\r\n              />\r\n            )}\r\n          </p>\r\n\r\n          <FieldLabel>\r\n            <FormattedMessage id=\"Withdrow118\" defaultMessage=\"Amount\" />\r\n          </FieldLabel>\r\n          <div styleName=\"group\">\r\n            <Input\r\n              pattern=\"0-9\\.\"\r\n              onKeyDown={this.amountInputKeyDownCallback}\r\n              valueLink={selectedValue === currentActiveAsset.currency\r\n                ? linked.amount.pipe(this.handleAmount)\r\n                : linked.fiatAmount.pipe(this.handleAmount)\r\n              }\r\n            />\r\n            {/* \r\n            with service commission we can't send all balance (there is a remainder)\r\n            so we disable this button\r\n            */}\r\n            {!usedAdminFee &&\r\n              <>\r\n                <div style={{ marginLeft: '15px' }}>\r\n                  <Button disabled={fetchFee} blue big onClick={this.setMaxBalance} id=\"Withdrow134\">\r\n                    <FormattedMessage id=\"Select210\" defaultMessage=\"MAX\" />\r\n                  </Button>\r\n                </div>\r\n                {!isMobile && (\r\n                  <Tooltip id=\"Withdrow134\" place=\"top\" mark={false}>\r\n                    <FormattedMessage\r\n                      id=\"WithdrawButton32\"\r\n                      defaultMessage=\"When you click this button, in the field, an amount{br}equal to your balance minus the miners commission will appear\"\r\n                      values={{\r\n                        br: <br />,\r\n                      }}\r\n                    />\r\n                  </Tooltip>\r\n                )}\r\n              </>\r\n            }\r\n          </div>\r\n          {/* hint for amount value */}\r\n          {dashboardView && (\r\n            <div styleName={`prompt ${fetchFee ? 'hide' : ''}`}>\r\n              {isEthToken && ethBalanceLessThanMiner \r\n                ? (\r\n                    <FormattedMessage\r\n                      id=\"WithdrowBalanceNotEnoughtEthereumBalancePrompt\"\r\n                      defaultMessage=\"Not enough ethereum balance for miner fee\"\r\n                    />\r\n                  )\r\n                : balances.allowedCurrency.isEqualTo(0) ?\r\n                  (\r\n                    <FormattedMessage\r\n                      id=\"WithdrowBalanceNotEnoughtPrompt\"\r\n                      defaultMessage=\"Not enough balance to send\"\r\n                    />\r\n                  ) : (\r\n                    <FormattedMessage\r\n                      id=\"Withdrow170\"\r\n                      defaultMessage=\"Maximum amount you can send is {allowedBalance} {currency}\"\r\n                      values={{\r\n                        allowedBalance: selectedValue === currentActiveAsset.currency\r\n                          ? balances.allowedCurrency.toNumber()\r\n                          : balances.allowedFiat.toNumber(),\r\n                        currency: selectedValue === currentActiveAsset.currency \r\n                          ? activeCriptoCurrency\r\n                          : activeFiat,\r\n                      }}\r\n                    />\r\n                  )\r\n              }{' '}\r\n              <Tooltip id=\"WtH204\">\r\n                <div style={{ maxWidth: '24em', textAlign: 'center' }}>\r\n                  <FormattedMessage\r\n                    id=\"WTH276\"\r\n                    defaultMessage=\"The amount should not exceed your{br} current balance minus mining fee\"\r\n                    values={{\r\n                      br: <br />,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div styleName=\"commentFormWrapper\" >\r\n          <FieldLabel>\r\n            <FormattedMessage id=\"Comment\" defaultMessage=\"Comment\" />\r\n          </FieldLabel>\r\n          <div styleName=\"group\">\r\n            <Input\r\n              valueLink={linked.comment}\r\n              placeholder={\r\n                intl.formatMessage({\r\n                  id: 'Comment',\r\n                  defaultMessage: 'Comment',\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div styleName=\"sendBtnsWrapper\">\r\n          <div styleName=\"actionBtn\">\r\n            <Button big fill gray onClick={this.handleClose}>\r\n              <Fragment>\r\n                <FormattedMessage id=\"WithdrawModalCancelBtn\" defaultMessage=\"Cancel\" />\r\n              </Fragment>\r\n            </Button>\r\n          </div>\r\n          <div styleName=\"actionBtn\">\r\n            <Button blue big fill disabled={isDisabled} onClick={this.handleSubmit}>\r\n              {isShipped ? (\r\n                <Fragment>\r\n                  <FormattedMessage id=\"WithdrawModal11212\" defaultMessage=\"Processing ...\" />\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  <FormattedMessage id=\"WithdrawModal111\" defaultMessage=\"Send\" />{' '}\r\n                  {`${currency.toUpperCase()}`}\r\n                </Fragment>\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        {usedAdminFee && isEthToken && (\r\n          <AdminFeeInfoBlock {...usedAdminFee} currency={currency} />\r\n        )}\r\n        {invoice && (\r\n          <Fragment>\r\n            <hr />\r\n            <div styleName=\"lowLevel\" style={{ marginBottom: '50px' }}>\r\n              <div styleName=\"groupField\">\r\n                <div styleName=\"downLabel\">\r\n                  <FieldLabel inRow>\r\n                    <span styleName=\"mobileFont\">\r\n                      <FormattedMessage id=\"WithdrowOwnTX\" defaultMessage=\"Или укажите TX\" />\r\n                    </span>\r\n                  </FieldLabel>\r\n                </div>\r\n              </div>\r\n              <div styleName=\"group\">\r\n                <Input\r\n                  styleName=\"input\"\r\n                  valueLink={linked.ownTx}\r\n                  placeholder={`${intl.formatMessage(labels.ownTxPlaceholder)}`}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Button\r\n              styleName=\"buttonFull\"\r\n              blue\r\n              big\r\n              fullWidth\r\n              disabled={!ownTx || isShipped}\r\n              onClick={this.handleSubmit}\r\n            >\r\n              {isShipped ? (\r\n                <Fragment>\r\n                  <FormattedMessage id=\"WithdrawModal11212\" defaultMessage=\"Processing ...\" />\r\n                </Fragment>\r\n              ) : (\r\n                <FormattedMessage\r\n                  id=\"WithdrawModalInvoiceSaveTx\"\r\n                  defaultMessage=\"Отметить как оплаченный\"\r\n                />\r\n              )}\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n        {dashboardView && (\r\n          <>\r\n            <div style={{ paddingTop: '2em' }}>\r\n              <FeeInfoBlock\r\n                isEthToken={isEthToken}\r\n                currency={currency}\r\n                currentDecimals={currentDecimals}\r\n                activeFiat={activeFiat}\r\n                dataCurrency={dataCurrency}\r\n                exEthereumRate={exEthereumRate}\r\n                exCurrencyRate={exCurrencyRate}\r\n                feeCurrentCurrency={btcFeeRate}\r\n                isLoading={fetchFee}\r\n                usedAdminFee={usedAdminFee}\r\n                hasTxSize={isBTCWallet}\r\n                txSize={txSize}\r\n                minerFee={fees.miner}\r\n                serviceFee={fees.service}\r\n                totalFee={fees.total}\r\n              />\r\n            </div>\r\n            {devError && (\r\n                <div styleName=\"errorBlock\">\r\n                  <p>\r\n                    Error name: {devError.name}<br />\r\n                    Message: {devError.message}\r\n                  </p>\r\n                </div>\r\n              )\r\n            }\r\n          </>\r\n        )}\r\n      </Fragment>\r\n    )\r\n    return portalUI ? (\r\n      formRender\r\n    ) : (\r\n      <Modal\r\n        name={name}\r\n        onClose={this.handleClose}\r\n        title={`${intl.formatMessage(labels.withdrowModal)}${' '}${currency.toUpperCase()}`}\r\n      >\r\n        <div style={{ paddingBottom: '50px', paddingTop: '15px' }}>{formRender}</div>\r\n      </Modal>\r\n    )\r\n  }\r\n}"]}]}