{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Exchange\\AddressSelect\\AddressSelect.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Exchange\\AddressSelect\\AddressSelect.tsx","mtime":1614842914159},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Exchange/AddressSelect/AddressSelect.tsx"],"names":["React","Component","Fragment","withRouter","connect","Link","styles","cssModules","FormattedMessage","defineMessages","injectIntl","Input","DropDown","Address","AddressFormat","metamask","Button","ethToken","Option","links","localisedUrl","actions","feedback","web3Icons","isMobile","QrReader","iconInternal","iconCustom","AddressType","AddressRole","COIN_DATA","COIN_MODEL","langLabels","labelSpecifyAddress","id","defaultMessage","optionInternal","optionInternalDisabled","optionInternalCreate","optionConnect","optionCustom","placeholderAddress","connectMetamask","AddressSelect","hiddenCoinsList","core","user","btcData","ethData","ghostData","nextData","tokensData","allData","Object","keys","map","k","account","keyPair","data","allowMultiple","props","isScanActive","state","setState","currency","hasError","selectedType","walletAddressFocused","customAddress","isMetamaskConnected","isConnected","metamaskAddress","getAddress","toUpperCase","ticker","getTicker","internalAddress","i","length","item","address","getInternalAddress","result","hiddenCoin","includes","web3connect","on","onWeb3Updated","bind","off","newCurrency","oldCurrency","oldSelectedType","oldHasError","value","applyAddress","type","Custom","history","locale","intl","exchangeForm","redirectedCreateWallet","url","createWallet","push","dontRedirect","then","Metamask","error","console","err","split","toggleScan","option","dontSelect","goСreateWallet","Internal","handleConnectMetamask","onChange","isDark","label","role","getWallet","addressType","internalBalance","balance","isInternalOptionDisabled","Send","isMetamaskOption","isEthOrEthToken","name","isMetamaskInstalled","isEnabled","isCustomAddressOption","isCustomOptionInputHidden","model","UTXO","web3Icon","getProviderType","getInjectedType","options","title","disabled","hidden","isCurrencyInInternalWallet","icon","Short","getProviderTitle","reduceSelectedItemText","handleOptionSelect","fontSize","textOverflow","handleFocusAddress","event","handleBlurAddress","target","all","_","handleScanError","handleScan"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'redaction'\r\nimport Link from 'local_modules/sw-valuelink'\r\n\r\nimport styles from './AddressSelect.scss'\r\nimport cssModules from 'react-css-modules'\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl'\r\nimport Input from 'components/forms/Input/Input'\r\nimport DropDown from 'components/ui/DropDown/DropDown'\r\nimport Address from 'components/ui/Address/Address'\r\nimport { AddressFormat } from 'domain/address'\r\nimport metamask from 'helpers/metamask'\r\nimport { Button } from 'components/controls'\r\nimport ethToken from 'helpers/ethToken'\r\nimport Option from './Option/Option'\r\nimport { links } from 'helpers'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport actions from 'redux/actions'\r\nimport feedback from 'shared/helpers/feedback'\r\nimport web3Icons from 'shared/images'\r\nimport { isMobile } from 'react-device-detect'\r\nimport QrReader from 'components/QrReader'\r\nimport iconInternal from '../../../images/logo/logo-black.svg'\r\nimport iconCustom from '../../../images/custom.svg'\r\n\r\nimport { AddressType, AddressRole } from 'domain/address'\r\nimport { COIN_DATA, COIN_MODEL } from 'swap.app/constants/COINS'\r\n\r\nconst langLabels = defineMessages({\r\n  labelSpecifyAddress: {\r\n    id: 'Exchange_SpecifyAddress',\r\n    defaultMessage: 'Select...',\r\n  },\r\n  optionInternal: {\r\n    id: 'Exchange_InternalAddressOption',\r\n    defaultMessage: 'Internal',\r\n  },\r\n  optionInternalDisabled: {\r\n    id: 'Exchange_InternalAddressOptionDisabled',\r\n    defaultMessage: 'Internal (insufficient balance)',\r\n  },\r\n  optionInternalCreate: {\r\n    id: 'Exchange_InternalCreate',\r\n    defaultMessage: 'Create wallet',\r\n  },\r\n  optionConnect: {\r\n    id: 'Exchange_ConnectAddressOption',\r\n    defaultMessage: 'Connect Wallet',\r\n  },\r\n  optionCustom: {\r\n    id: 'Exchange_CustomAddressOption',\r\n    defaultMessage: 'External wallet',\r\n  },\r\n  placeholderAddress: {\r\n    id: 'Exchange_PlaceholderEnterAddress',\r\n    defaultMessage: 'Enter the receiving wallet address',\r\n  },\r\n  connectMetamask: {\r\n    id: 'CommonTextConnect',\r\n    defaultMessage: 'Connect',\r\n  },\r\n})\r\n\r\n@injectIntl\r\n@withRouter\r\n@connect(\r\n  ({ core: { hiddenCoinsList }, user: { btcData, ethData, ghostData, nextData, tokensData } }) => {\r\n    const allData = [\r\n      btcData,\r\n      ethData,\r\n      ghostData,\r\n      nextData,\r\n      ...Object.keys(tokensData).map((k) => tokensData[k]),\r\n    ].map(({ account, keyPair, ...data }) => ({\r\n      ...data,\r\n    }))\r\n\r\n    return {\r\n      allData,\r\n      hiddenCoinsList,\r\n    }\r\n  }\r\n)\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class AddressSelect extends Component<any, any> {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const { currency, hasError = false, selectedType = false } = props\r\n\r\n    this.state = {\r\n      currency,\r\n      hasError,\r\n      selectedType: selectedType || 'placeholder',\r\n      walletAddressFocused: false,\r\n      customAddress: '',\r\n      isMetamaskConnected: metamask.isConnected(),\r\n      metamaskAddress: metamask.getAddress(),\r\n      isScanActive: false,\r\n    }\r\n  }\r\n\r\n  getTicker() {\r\n    return this.props.currency.toUpperCase()\r\n  }\r\n\r\n  getInternalAddress() {\r\n    const { allData } = this.props\r\n    const ticker = this.getTicker()\r\n    let internalAddress\r\n    for (let i = 0; i < allData.length; i++) {\r\n      const item = allData[i]\r\n      if (ticker === item.currency && item.address) {\r\n        internalAddress = item.address\r\n        break\r\n      }\r\n    }\r\n    return internalAddress\r\n  }\r\n\r\n  isCurrencyInInternalWallet() {\r\n    const { hiddenCoinsList } = this.props\r\n    const ticker = this.getTicker()\r\n    const internalAddress = this.getInternalAddress()\r\n\r\n    let result = true\r\n\r\n    for (let i = 0; i < hiddenCoinsList.length; i++) {\r\n      const hiddenCoin = hiddenCoinsList[i]\r\n      if (\r\n        hiddenCoin === ticker ||\r\n        (internalAddress && hiddenCoin.includes(`${ticker}:${internalAddress}`))\r\n      ) {\r\n        result = false\r\n        break\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  handleFocusAddress() {\r\n    this.setState({\r\n      walletAddressFocused: true,\r\n    })\r\n  }\r\n\r\n  onWeb3Updated() {\r\n    this.setState({\r\n      isMetamaskConnected: metamask.isConnected(),\r\n      metamaskAddress: metamask.getAddress(),\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    metamask.web3connect.on('updated', this.onWeb3Updated.bind(this))\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    metamask.web3connect.off('updated', this.onWeb3Updated)\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { currency: newCurrency, selectedType, hasError = false } = this.props\r\n\r\n    const {\r\n      currency: oldCurrency,\r\n      selectedType: oldSelectedType,\r\n      hasError: oldHasError = false,\r\n    } = this.state\r\n\r\n    if (newCurrency !== oldCurrency || hasError !== oldHasError) {\r\n      this.setState({\r\n        currency: newCurrency,\r\n        hasError,\r\n        selectedType,\r\n        customAddress: '',\r\n      })\r\n    }\r\n  }\r\n\r\n  handleBlurAddress(value) {\r\n    this.setState({\r\n      walletAddressFocused: false,\r\n    })\r\n    // todo: validate value\r\n    /*\r\n    if (getCurrency === \"btc\") {\r\n      return util.typeforce.isCoinAddress.BTC(customWallet)\r\n    }\r\n    return util.typeforce.isCoinAddress.ETH(customWallet);\r\n    */\r\n    this.applyAddress({\r\n      type: AddressType.Custom,\r\n      value,\r\n    })\r\n  }\r\n\r\n  goСreateWallet() {\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n    const ticker = this.getTicker()\r\n\r\n    feedback.exchangeForm.redirectedCreateWallet(ticker)\r\n\r\n    const url = localisedUrl(locale, `${links.createWallet}/${ticker}`)\r\n    history.push(url)\r\n  }\r\n\r\n  handleConnectMetamask() {\r\n    metamask\r\n      .connect({\r\n        dontRedirect: true,\r\n      })\r\n      .then((isConnected) => {\r\n        if (!isConnected) {\r\n          return\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            isMetamaskConnected: true,\r\n            metamaskAddress: metamask.getAddress(),\r\n          },\r\n          () => {\r\n            this.applyAddress({\r\n              type: AddressType.Metamask,\r\n              value: metamask.getAddress(),\r\n            })\r\n          }\r\n        )\r\n      }).catch((error) => {\r\n        console.error('Metamask rejected', error)\r\n      })\r\n  }\r\n\r\n  toggleScan = () => {\r\n    const { isScanActive } = this.state\r\n    this.setState(() => ({\r\n      isScanActive: !isScanActive,\r\n    }))\r\n  }\r\n\r\n  handleScanError(err) {\r\n    console.error('Scan error', err)\r\n  }\r\n\r\n  handleScan(data) {\r\n    if (data) {\r\n      const address = data.includes(':') ? data.split(':')[1] : data\r\n      this.toggleScan()\r\n      this.applyAddress({\r\n        type: AddressType.Custom,\r\n        value: address,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleOptionSelect(option) {\r\n    const { selectedType: oldSelectedType } = this.state\r\n\r\n    const { value: selectedType, dontSelect } = option\r\n\r\n    if (selectedType === 'InternalAddressCreate') {\r\n      this.goСreateWallet()\r\n      return\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        selectedType: dontSelect ? oldSelectedType : selectedType,\r\n      },\r\n      () => {\r\n        if (!selectedType) {\r\n          return\r\n        }\r\n\r\n        let value\r\n\r\n        if (selectedType === AddressType.Internal) {\r\n          value = this.getInternalAddress()\r\n        }\r\n\r\n        if (selectedType === AddressType.Metamask) {\r\n          value = metamask.getAddress()\r\n        }\r\n\r\n        /*if (selectedType === AddressType.Custom) {\r\n        // apply address input blur / qrScan\r\n        return\r\n      }*/\r\n\r\n        if (selectedType === AddressType.Metamask && !metamask.isConnected()) {\r\n          this.handleConnectMetamask()\r\n        } else {\r\n          this.applyAddress({\r\n            type: selectedType,\r\n            value,\r\n          })\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  applyAddress(address) {\r\n    const { onChange, currency } = this.props\r\n    const { type, value } = address\r\n\r\n    if (typeof onChange !== 'function') {\r\n      return\r\n    }\r\n\r\n    onChange({\r\n      currency,\r\n      type,\r\n      value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { currency, isDark, label, hiddenCoinsList, allData, role } = this.props\r\n\r\n    const {\r\n      selectedType,\r\n      walletAddressFocused,\r\n      isMetamaskConnected,\r\n      metamaskAddress,\r\n      isScanActive,\r\n      hasError,\r\n    } = this.state\r\n\r\n    const ticker = this.getTicker()\r\n\r\n    const { balance: internalBalance } = actions.core.getWallet({\r\n      currency,\r\n      addressType: AddressType.Internal,\r\n    })\r\n\r\n    const isInternalOptionDisabled =\r\n      role === AddressRole.Send && (!internalBalance || internalBalance === 0)\r\n\r\n    const isMetamaskOption = ethToken.isEthOrEthToken({ name: currency })\r\n    const isMetamaskInstalled = metamask.isEnabled()\r\n\r\n    // Forbid `Custom address` option when using ethereum/tokens\r\n    // because you need to make a request to the contract\r\n    const isCustomAddressOption = !ethToken.isEthOrEthToken({ name: currency })\r\n    const isCustomOptionInputHidden =\r\n      role === AddressRole.Send && COIN_DATA[ticker] && COIN_DATA[ticker].model === COIN_MODEL.UTXO\r\n\r\n    const web3Icon = metamask.isConnected()\r\n      ? web3Icons[metamask.web3connect.getProviderType()] || false\r\n      : web3Icons[metamask.web3connect.getInjectedType()] || false\r\n\r\n    const options = [\r\n      {\r\n        value: 'placeholder',\r\n        title: <FormattedMessage {...langLabels.labelSpecifyAddress} />,\r\n        disabled: true,\r\n        hidden: true,\r\n      },\r\n      ...(this.isCurrencyInInternalWallet()\r\n        ? [\r\n            {\r\n              value: AddressType.Internal,\r\n              icon: iconInternal,\r\n              title: !isInternalOptionDisabled ? (\r\n                <Fragment>\r\n                  <FormattedMessage {...langLabels.optionInternal} />\r\n                  <Address\r\n                    address={this.getInternalAddress()}\r\n                    format={AddressFormat.Short}\r\n                    type={AddressType.Internal}\r\n                  />\r\n                </Fragment>\r\n              ) : (\r\n                <FormattedMessage {...langLabels.optionInternalDisabled} />\r\n              ),\r\n              disabled: isInternalOptionDisabled,\r\n            },\r\n          ]\r\n        : [\r\n            {\r\n              value: 'InternalAddressCreate',\r\n              icon: iconInternal,\r\n              title: <FormattedMessage {...langLabels.optionInternalCreate} />,\r\n            },\r\n          ]),\r\n      ...(isMetamaskOption\r\n        ? isMetamaskConnected\r\n          ? [\r\n              {\r\n                value: AddressType.Metamask,\r\n                icon: web3Icon,\r\n                title: (\r\n                  <Fragment>\r\n                    {metamask.web3connect.getProviderTitle()}\r\n                    <Address\r\n                      address={metamaskAddress}\r\n                      format={AddressFormat.Short}\r\n                      type={AddressType.Metamask}\r\n                    />\r\n                  </Fragment>\r\n                ),\r\n              },\r\n            ]\r\n          : [\r\n              {\r\n                value: AddressType.Metamask,\r\n                icon: web3Icon,\r\n                title: <FormattedMessage {...langLabels.optionConnect} />,\r\n                dontSelect: true,\r\n              },\r\n            ]\r\n        : []),\r\n      ...(isCustomAddressOption\r\n        ? [\r\n            {\r\n              value: AddressType.Custom,\r\n              icon: iconCustom,\r\n              title: <FormattedMessage {...langLabels.optionCustom} />,\r\n              reduceSelectedItemText: !isCustomOptionInputHidden,\r\n            },\r\n          ]\r\n        : []),\r\n    ]\r\n\r\n    return (\r\n      <div\r\n        styleName={`addressSelect ${hasError ? 'addressSelect_error' : ''} ${\r\n          isDark ? '--dark' : ''\r\n        }`}\r\n      >\r\n        <div styleName=\"label\">{label}</div>\r\n        <DropDown\r\n          styleName=\"dropDown\"\r\n          items={options}\r\n          initialValue=\"placeholder\"\r\n          selectedValue={selectedType}\r\n          disableSearch={true}\r\n          dontScroll={true}\r\n          arrowSide=\"left\"\r\n          itemRender={(item) => <Option {...item} />}\r\n          onSelect={(value) => this.handleOptionSelect(value)}\r\n        />\r\n        {selectedType === AddressType.Metamask && metamask.isEnabled() && !isMetamaskConnected && (\r\n          <div styleName=\"selectedInner connectWrapper\">\r\n            <Button\r\n              styleName=\"button\"\r\n              blue\r\n              onClick={() => {\r\n                this.handleConnectMetamask()\r\n              }}\r\n            >\r\n              <FormattedMessage {...langLabels.connectMetamask} />\r\n            </Button>\r\n          </div>\r\n        )}\r\n        {selectedType === AddressType.Custom && !isCustomOptionInputHidden && (\r\n          <div styleName=\"selectedInner\">\r\n            <div styleName={`customWallet ${walletAddressFocused ? 'customWallet_focus' : ''}`}>\r\n              <div styleName=\"customAddressInput\">\r\n                <Input\r\n                  inputCustomStyle={{\r\n                    fontSize: '15px',\r\n                    textOverflow: 'ellipsis',\r\n                  }}\r\n                  required\r\n                  pattern=\"0-9a-zA-Z\"\r\n                  onFocus={() => this.handleFocusAddress()}\r\n                  onBlur={(event) => this.handleBlurAddress(event.target.value)}\r\n                  placeholder=\"Enter address\"\r\n                  valueLink={Link.all(this, '_')._} // required\r\n                  openScan={this.toggleScan}\r\n                  qr={isMobile}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {isScanActive && (\r\n          <QrReader\r\n            openScan={this.toggleScan}\r\n            handleError={this.handleScanError}\r\n            handleScan={this.handleScan}\r\n          />\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}]}