{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawModal\\components\\CurrencyList\\index.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawModal\\components\\CurrencyList\\index.tsx","mtime":1614842914035},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/WithdrawModal/components/CurrencyList/index.tsx"],"names":["React","Component","cssModules","styles","cx","Coin","PartOfAddress","isMobile","helpers","constants","actions","localisedUrl","getCurrencyKey","isDark","localStorage","getItem","CurrencyList","allowMultiple","props","currency","address","setState","isAssetsOpen","history","locale","intl","currentAsset","core","getWallets","filter","item","toLowerCase","targetCurrency","isToken","ethToken","isEthToken","name","push","state","currentActiveAsset","currentBalance","activeFiat","tableRows","currentAddress","toUpperCase","infoAboutCurrency","price_fiat","toFixed","active","map","index","disabled","balance","openModal","fullName"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,OAAP,IAAkBC,SAAlB,QAAmC,SAAnC;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAGA,IAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqBN,SAAS,CAACK,YAAV,CAAuBD,MAA5C,CAAf;IAEqBG,Y,WADpBd,UAAU,CAACC,MAAD,EAAS;AAAEc,EAAAA,aAAa,EAAE;AAAjB,CAAT,C;;;;;AAET,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,gEAQP,UAACC,QAAD,EAAWC,OAAX,EAAuB;AACjC,YAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE;AADF,OAAd,EAEG,YAAM;AAAA,0BAIH,MAAKJ,KAJF;AAAA,YAELK,OAFK,eAELA,OAFK;AAAA,YAGGC,MAHH,eAGLC,IAHK,CAGGD,MAHH;AAMP,YAAME,YAAY,GAAGhB,OAAO,CAACiB,IAAR,CAAaC,UAAb,CAAwB,EAAxB,EAA4BC,MAA5B,CAAmC,UAACC,IAAD;AAAA,iBAAUX,QAAQ,KAAKW,IAAI,CAACX,QAAlB,IAA8BC,OAAO,CAACW,WAAR,OAA0BD,IAAI,CAACV,OAAL,CAAaW,WAAb,EAAlE;AAAA,SAAnC,CAArB;AAEA,YAAIC,cAAc,GAAGN,YAAY,CAAC,CAAD,CAAZ,CAAgBP,QAArC;;AAEA,gBAAQA,QAAQ,CAACY,WAAT,EAAR;AACE,eAAK,gBAAL;AACA,eAAK,qBAAL;AACA,eAAK,qBAAL;AACEC,YAAAA,cAAc,GAAG,KAAjB;AACA;AALJ;;AAQA,YAAMC,OAAO,GAAGzB,OAAO,CAAC0B,QAAR,CAAiBC,UAAjB,CAA4B;AAAEC,UAAAA,IAAI,EAAEjB;AAAR,SAA5B,CAAhB;AAEAI,QAAAA,OAAO,CAACc,IAAR,CACE1B,YAAY,CAACa,MAAD,EAAS,CAACS,OAAO,GAAG,QAAH,GAAc,EAAtB,eAAgCD,cAAhC,cAAkDN,YAAY,CAAC,CAAD,CAAZ,CAAgBN,OAAlE,UAAT,CADd;AAGD,OAzBD;AA0BD,KAnCkB;;AAGjB,UAAKkB,KAAL,GAAa;AACXhB,MAAAA,YAAY,EAAE;AADH,KAAb;AAHiB;AAMlB;;;;WA+BD,kBAAS;AAAA;;AAAA,yBAQH,KAAKJ,KARF;AAAA,UAELqB,kBAFK,gBAELA,kBAFK;AAAA,UAGLC,cAHK,gBAGLA,cAHK;AAAA,UAILrB,QAJK,gBAILA,QAJK;AAAA,UAKLsB,UALK,gBAKLA,UALK;AAAA,UAMLC,SANK,gBAMLA,SANK;AAAA,UAOLC,cAPK,gBAOLA,cAPK;AAAA,UAWLrB,YAXK,GAYH,KAAKgB,KAZF,CAWLhB,YAXK;AAcP,0BACE,uDACE;AACE,QAAA,SAAS,8BAAuBT,MAAM,GAAG,MAAH,GAAY,EAAzC,CADX;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACQ,QAAL,CAAc;AAAA,gBAAGC,YAAH,QAAGA,YAAH;AAAA,mBAAuB;AAAEA,cAAAA,YAAY,EAAE,CAACA;AAAjB,aAAvB;AAAA,WAAd,CAAN;AAAA;AAFX,sBAIE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEiB,kBAAkB,CAACpB;AAA/B,QADF,CAJF,eAOE,8CACE,+BAAIoB,kBAAkB,CAACpB,QAAvB,CADF,eAEE;AAAM,QAAA,SAAS,EAAC;AAAhB,SAA2BwB,cAA3B,CAFF,eAGE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGpC,QAAQ,gBAAG,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAEoC,cAAxB;AAAwC,QAAA,WAAW;AAAnD,QAAH,GAA4D,EADvE,CAHF,CAPF,eAcE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGH,cADH,OACoB5B,cAAc,CAACO,QAAD,EAAW,IAAX,CAAd,CAA+ByB,WAA/B,EADpB,CADF,eAIE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGL,kBAAkB,CAACM,iBAAnB,IAAwCN,kBAAkB,CAACM,iBAAnB,CAAqCC,UAA7E,gBACG,kCAAO,CAACN,cAAc,GAAGD,kBAAkB,CAACM,iBAAnB,CAAqCC,UAAvD,EAAmEC,OAAnE,CAA2E,CAA3E,CAAP,OAAuFN,UAAvF,CADH,GAEG,IAHN,CAJF,CAdF,eAyBE;AAAK,QAAA,SAAS,EAAErC,EAAE,CAAC,mBAAD,EAAsB;AAAE4C,UAAAA,MAAM,EAAE1B;AAAV,SAAtB;AAAlB,QAzBF,CADF,EA4BGA,YAAY,iBACX;AAAK,QAAA,SAAS,6BAAsBT,MAAM,GAAG,UAAH,GAAgB,EAA5C;AAAd,SACG6B,SAAS,CAACO,GAAV,CAAc,UAACnB,IAAD,EAAOoB,KAAP;AAAA,4BACb;AAAK,UAAA,GAAG,EAAEA,KAAV;AACE,UAAA,SAAS,EAAE9C,EAAE,CAAC,wCAAD,EAA2C;AACtD+C,YAAAA,QAAQ,EAAErB,IAAI,CAACsB,OAAL,KAAiB;AAD2B,WAA3C,CADf;AAIE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAACC,SAAL,CAAevB,IAAI,CAACX,QAApB,EAA8BW,IAAI,CAACV,OAAnC;AACD;AANH,wBAQE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAEU,IAAI,CAACX;AAAjB,UARF,eASE,8CACE,+BAAIW,IAAI,CAACwB,QAAT,CADF,eAEE;AAAM,UAAA,SAAS,EAAC;AAAhB,WAA2BxB,IAAI,CAACV,OAAhC,CAFF,eAGE;AAAM,UAAA,SAAS,EAAC;AAAhB,WACGb,QAAQ,gBAAG,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAEuB,IAAI,CAACV,OAA7B;AAAsC,UAAA,WAAW;AAAjD,UAAH,GAA0D,EADrE,CAHF,CATF,eAgBE;AAAK,UAAA,SAAS,EAAC;AAAf,wBACE;AAAM,UAAA,SAAS,EAAC;AAAhB,WACGU,IAAI,CAACsB,OADR,OACkBxC,cAAc,CAACkB,IAAI,CAACX,QAAN,EAAgB,IAAhB,CAAd,CAAoCyB,WAApC,EADlB,CADF,eAIE;AAAM,UAAA,SAAS,EAAC;AAAhB,WACGd,IAAI,CAACe,iBAAL,IAA0Bf,IAAI,CAACe,iBAAL,CAAuBC,UAAjD,gBACG,kCAAO,CAAChB,IAAI,CAACsB,OAAL,GAAetB,IAAI,CAACe,iBAAL,CAAuBC,UAAvC,EAAmDC,OAAnD,CAA2D,CAA3D,CAAP,OAAuEN,UAAvE,CADH,GAEG,IAHN,CAJF,CAhBF,CADa;AAAA,OAAd,CADH,CA7BJ,CADF;AAiED;;;;EArHuCxC,S;SAArBe,Y","sourcesContent":["import React, { Component } from 'react'\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './index.scss'\r\nimport cx from 'classnames'\r\nimport Coin from 'components/Coin/Coin'\r\nimport PartOfAddress from 'pages/Wallet/components/PartOfAddress'\r\nimport { isMobile } from 'react-device-detect'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport getCurrencyKey from 'helpers/getCurrencyKey'\r\n\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class CurrencyList extends Component<any, any> {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isAssetsOpen: false,\r\n    }\r\n  }\r\n\r\n  openModal = (currency, address) => {\r\n    this.setState({\r\n      isAssetsOpen: false,\r\n    }, () => {\r\n      const {\r\n        history,\r\n        intl: { locale },\r\n      } = this.props\r\n\r\n      const currentAsset = actions.core.getWallets({}).filter((item) => currency === item.currency && address.toLowerCase() === item.address.toLowerCase())\r\n\r\n      let targetCurrency = currentAsset[0].currency\r\n\r\n      switch (currency.toLowerCase()) {\r\n        case 'btc (multisig)':\r\n        case 'btc (sms-protected)':\r\n        case 'btc (pin-protected)':\r\n          targetCurrency = 'btc'\r\n          break\r\n      }\r\n\r\n      const isToken = helpers.ethToken.isEthToken({ name: currency })\r\n\r\n      history.push(\r\n        localisedUrl(locale, (isToken ? '/token' : '') + `/${targetCurrency}/${currentAsset[0].address}/send`)\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentActiveAsset,\r\n      currentBalance,\r\n      currency,\r\n      activeFiat,\r\n      tableRows,\r\n      currentAddress,\r\n    } = this.props\r\n\r\n    const {\r\n      isAssetsOpen,\r\n    } = this.state\r\n\r\n    return (\r\n      <>\r\n        <div\r\n          styleName={`customSelectValue ${isDark ? 'dark' : ''}`}\r\n          onClick={() => this.setState(({ isAssetsOpen }) => ({ isAssetsOpen: !isAssetsOpen }))}\r\n        >\r\n          <div styleName=\"coin\">\r\n            <Coin name={currentActiveAsset.currency} />\r\n          </div>\r\n          <div>\r\n            <a>{currentActiveAsset.currency}</a>\r\n            <span styleName=\"address\">{currentAddress}</span>\r\n            <span styleName=\"mobileAddress\">\r\n              {isMobile ? <PartOfAddress address={currentAddress} withoutLink /> : ''}\r\n            </span>\r\n          </div>\r\n          <div styleName=\"amount\">\r\n            <span styleName=\"currency\">\r\n              {currentBalance} {getCurrencyKey(currency, true).toUpperCase()}\r\n            </span>\r\n            <span styleName=\"usd\">\r\n              {currentActiveAsset.infoAboutCurrency && currentActiveAsset.infoAboutCurrency.price_fiat\r\n                ? <span>{(currentBalance * currentActiveAsset.infoAboutCurrency.price_fiat).toFixed(2)} {activeFiat}</span>\r\n                : null\r\n              }\r\n            </span>\r\n          </div>\r\n          <div styleName={cx('customSelectArrow', { active: isAssetsOpen })}></div>\r\n        </div>\r\n        {isAssetsOpen && (\r\n          <div styleName={`customSelectList ${isDark ? 'darkList' : ''}`}>\r\n            {tableRows.map((item, index) => (\r\n              <div key={index}\r\n                styleName={cx('customSelectListItem customSelectValue', {\r\n                  disabled: item.balance === 0,\r\n                })}\r\n                onClick={() => {\r\n                  this.openModal(item.currency, item.address)\r\n                }}\r\n              >\r\n                <Coin name={item.currency} />\r\n                <div>\r\n                  <a>{item.fullName}</a>\r\n                  <span styleName=\"address\">{item.address}</span>\r\n                  <span styleName=\"mobileAddress\">\r\n                    {isMobile ? <PartOfAddress address={item.address} withoutLink /> : ''}\r\n                  </span>\r\n                </div>\r\n                <div styleName=\"amount\">\r\n                  <span styleName=\"currency\">\r\n                    {item.balance} {getCurrencyKey(item.currency, true).toUpperCase()}\r\n                  </span>\r\n                  <span styleName=\"usd\">\r\n                    {item.infoAboutCurrency && item.infoAboutCurrency.price_fiat\r\n                      ? <span>{(item.balance * item.infoAboutCurrency.price_fiat).toFixed(2)} {activeFiat}</span>\r\n                      : null\r\n                    }\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\n"]}]}