{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.app\\ServiceInterface.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.app\\ServiceInterface.ts","mtime":1614842913745},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IFN3YXBBcHAgZnJvbSAnLi9Td2FwQXBwJzsKCnZhciBTZXJ2aWNlSW50ZXJmYWNlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBTZXJ2aWNlSW50ZXJmYWNlKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNlcnZpY2VJbnRlcmZhY2UpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiX3NlcnZpY2VOYW1lIiwgdm9pZCAwKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgIl9kZXBlbmRzT24iLCB2b2lkIDApOwoKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiX3NweUhhbmRsZXJzIiwgdm9pZCAwKTsKCiAgICBfZGVmaW5lUHJvcGVydHkodGhpcywgImFwcCIsIHZvaWQgMCk7CgogICAgdGhpcy5fY29uc3RydWN0b3IoKTsKICB9CgogIF9jcmVhdGVDbGFzcyhTZXJ2aWNlSW50ZXJmYWNlLCBbewogICAga2V5OiAiX2NvbnN0cnVjdG9yIiwKICAgIHZhbHVlOiAvLyBfY29uc3RydWN0b3IgZm9yIGFnZ3JlZ2F0aW9uCiAgICBmdW5jdGlvbiBfY29uc3RydWN0b3IoKSB7CiAgICAgIC8vIHNlcnZpY2UgbmFtZSwgd2l0aGluIGl0IHdpbGwgYmUgc3RvcmVkIGluIHRoaXMuYXBwLnNlcnZpY2VzCiAgICAgIHRoaXMuX3NlcnZpY2VOYW1lID0gbnVsbDsKICAgICAgdGhpcy5fZGVwZW5kc09uID0gbnVsbDsKICAgICAgdGhpcy5fc3B5SGFuZGxlcnMgPSBbXTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJfYXR0YWNoU3dhcEFwcCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2F0dGFjaFN3YXBBcHAoYXBwKSB7CiAgICAgIFN3YXBBcHAucmVxdWlyZWQoYXBwKTsKICAgICAgdGhpcy5hcHAgPSBhcHA7CiAgICB9CiAgfSwgewogICAga2V5OiAiX3dhaXRSZWxhdGlvbnNSZXNvbHZlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfd2FpdFJlbGF0aW9uc1Jlc29sdmUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBTd2FwQXBwLnJlcXVpcmVkKHRoaXMuYXBwKTsKCiAgICAgIGlmICh0aGlzLl9kZXBlbmRzT24gJiYgdGhpcy5fZGVwZW5kc09uLmxlbmd0aCkgewogICAgICAgIHZhciBkZXBlbmRzT25NYXAgPSB7fTsKCiAgICAgICAgdGhpcy5fZGVwZW5kc09uLmZvckVhY2goZnVuY3Rpb24gKFNlcnZpY2UpIHsKICAgICAgICAgIGRlcGVuZHNPbk1hcFtTZXJ2aWNlLm5hbWVdID0gewogICAgICAgICAgICBpbml0aWFsaXplZDogZmFsc2UKICAgICAgICAgIH07CgogICAgICAgICAgX3RoaXMuYXBwLnNlcnZpY2VzW1NlcnZpY2UubmFtZV0uX2FkZFdhaXRSZWxhdGlvbkhhbmRsZXIoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBkZXBlbmRzT25NYXBbU2VydmljZS5uYW1lXS5pbml0aWFsaXplZCA9IHRydWU7CiAgICAgICAgICAgIHZhciBhcmVBbGxFeHBlY3RzSW5pdGlhbGl6ZWQgPSBPYmplY3Qua2V5cyhkZXBlbmRzT25NYXApLmV2ZXJ5KGZ1bmN0aW9uIChzZXJ2aWNlTmFtZSkgewogICAgICAgICAgICAgIHJldHVybiBkZXBlbmRzT25NYXBbc2VydmljZU5hbWVdLmluaXRpYWxpemVkOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGlmIChhcmVBbGxFeHBlY3RzSW5pdGlhbGl6ZWQpIHsKICAgICAgICAgICAgICBfdGhpcy5pbml0U2VydmljZSgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogIl9hZGRXYWl0UmVsYXRpb25IYW5kbGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfYWRkV2FpdFJlbGF0aW9uSGFuZGxlcihoYW5kbGVyKSB7CiAgICAgIHRoaXMuX3NweUhhbmRsZXJzLnB1c2goaGFuZGxlcik7CiAgICB9CiAgfSwgewogICAga2V5OiAiX3RyeUluaXRTZXJ2aWNlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBfdHJ5SW5pdFNlcnZpY2UoKSB7CiAgICAgIC8vIGluaXQgc2VydmljZSBvbiBTd2FwQXBwIG1vdW50aW5nCiAgICAgIFN3YXBBcHAucmVxdWlyZWQodGhpcy5hcHApOwoKICAgICAgaWYgKCF0aGlzLl9kZXBlbmRzT24gfHwgIXRoaXMuX2RlcGVuZHNPbi5sZW5ndGgpIHsKICAgICAgICB0aGlzLmluaXRTZXJ2aWNlKCk7CgogICAgICAgIHRoaXMuX3NweUhhbmRsZXJzLmZvckVhY2goZnVuY3Rpb24gKGhhbmRsZXIpIHsKICAgICAgICAgIHJldHVybiBoYW5kbGVyKCk7CiAgICAgICAgfSk7CgogICAgICAgIHRoaXMuX3NweUhhbmRsZXJzID0gW107CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJpbml0U2VydmljZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdFNlcnZpY2UoKSB7Ly8gaW5pdCBzZXJ2aWNlIG9uIFN3YXBBcHAgbW91bnRpbmcKICAgIH0KICB9XSk7CgogIHJldHVybiBTZXJ2aWNlSW50ZXJmYWNlOwp9KCk7CgpleHBvcnQgZGVmYXVsdCBTZXJ2aWNlSW50ZXJmYWNlOw=="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.app/ServiceInterface.ts"],"names":["SwapApp","ServiceInterface","_constructor","_serviceName","_dependsOn","_spyHandlers","app","required","length","dependsOnMap","forEach","Service","name","initialized","services","_addWaitRelationHandler","areAllExpectsInitialized","Object","keys","every","serviceName","initService","handler","push"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,WAApB;;IAGMC,gB;AAgBJ,8BAAc;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACZ,SAAKC,YAAL;AACD;;;;WAVD;AACA,4BAAe;AACb;AACA,WAAKC,YAAL,GAAwB,IAAxB;AACA,WAAKC,UAAL,GAAwB,IAAxB;AACA,WAAKC,YAAL,GAAwB,EAAxB;AACD;;;WAMD,wBAAeC,GAAf,EAAoB;AAClBN,MAAAA,OAAO,CAACO,QAAR,CAAiBD,GAAjB;AAEA,WAAKA,GAAL,GAAWA,GAAX;AACD;;;WAED,iCAAwB;AAAA;;AACtBN,MAAAA,OAAO,CAACO,QAAR,CAAiB,KAAKD,GAAtB;;AAEA,UAAI,KAAKF,UAAL,IAAmB,KAAKA,UAAL,CAAgBI,MAAvC,EAA+C;AAC7C,YAAMC,YAAY,GAAG,EAArB;;AAEA,aAAKL,UAAL,CAAgBM,OAAhB,CAAwB,UAACC,OAAD,EAAa;AACnCF,UAAAA,YAAY,CAACE,OAAO,CAACC,IAAT,CAAZ,GAA6B;AAC3BC,YAAAA,WAAW,EAAE;AADc,WAA7B;;AAIA,UAAA,KAAI,CAACP,GAAL,CAASQ,QAAT,CAAkBH,OAAO,CAACC,IAA1B,EAAgCG,uBAAhC,CAAwD,YAAM;AAC5DN,YAAAA,YAAY,CAACE,OAAO,CAACC,IAAT,CAAZ,CAA2BC,WAA3B,GAAyC,IAAzC;AAEA,gBAAMG,wBAAwB,GAAGC,MAAM,CAACC,IAAP,CAAYT,YAAZ,EAA0BU,KAA1B,CAAgC,UAACC,WAAD;AAAA,qBAC/DX,YAAY,CAACW,WAAD,CAAZ,CAA0BP,WADqC;AAAA,aAAhC,CAAjC;;AAIA,gBAAIG,wBAAJ,EAA8B;AAC5B,cAAA,KAAI,CAACK,WAAL;AACD;AACF,WAVD;AAWD,SAhBD;AAiBD;AACF;;;WAED,iCAAwBC,OAAxB,EAAiC;AAC/B,WAAKjB,YAAL,CAAkBkB,IAAlB,CAAuBD,OAAvB;AACD;;;WAED,2BAAkB;AAChB;AACAtB,MAAAA,OAAO,CAACO,QAAR,CAAiB,KAAKD,GAAtB;;AAEA,UAAI,CAAC,KAAKF,UAAN,IAAoB,CAAC,KAAKA,UAAL,CAAgBI,MAAzC,EAAiD;AAC/C,aAAKa,WAAL;;AACA,aAAKhB,YAAL,CAAkBK,OAAlB,CAA0B,UAACY,OAAD;AAAA,iBAAaA,OAAO,EAApB;AAAA,SAA1B;;AACA,aAAKjB,YAAL,GAAoB,EAApB;AACD;AACF;;;WAED,uBAAc,CACZ;AACD;;;;;;AAIH,eAAeJ,gBAAf","sourcesContent":["import SwapApp from './SwapApp'\r\n\r\n\r\nclass ServiceInterface {\r\n\r\n  _serviceName: any\r\n  _dependsOn: any\r\n  _spyHandlers: any\r\n  app: any\r\n\r\n\r\n  // _constructor for aggregation\r\n  _constructor() {\r\n    // service name, within it will be stored in this.app.services\r\n    this._serviceName     = null\r\n    this._dependsOn       = null\r\n    this._spyHandlers     = []\r\n  }\r\n\r\n  constructor() {\r\n    this._constructor()\r\n  }\r\n\r\n  _attachSwapApp(app) {\r\n    SwapApp.required(app)\r\n\r\n    this.app = app\r\n  }\r\n\r\n  _waitRelationsResolve() {\r\n    SwapApp.required(this.app)\r\n\r\n    if (this._dependsOn && this._dependsOn.length) {\r\n      const dependsOnMap = {}\r\n\r\n      this._dependsOn.forEach((Service) => {\r\n        dependsOnMap[Service.name] = {\r\n          initialized: false,\r\n        }\r\n\r\n        this.app.services[Service.name]._addWaitRelationHandler(() => {\r\n          dependsOnMap[Service.name].initialized = true\r\n\r\n          const areAllExpectsInitialized = Object.keys(dependsOnMap).every((serviceName) => (\r\n            dependsOnMap[serviceName].initialized\r\n          ))\r\n\r\n          if (areAllExpectsInitialized) {\r\n            this.initService()\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  _addWaitRelationHandler(handler) {\r\n    this._spyHandlers.push(handler)\r\n  }\r\n\r\n  _tryInitService() {\r\n    // init service on SwapApp mounting\r\n    SwapApp.required(this.app)\r\n\r\n    if (!this._dependsOn || !this._dependsOn.length) {\r\n      this.initService()\r\n      this._spyHandlers.forEach((handler) => handler())\r\n      this._spyHandlers = []\r\n    }\r\n  }\r\n\r\n  initService() {\r\n    // init service on SwapApp mounting\r\n  }\r\n}\r\n\r\n\r\nexport default ServiceInterface\r\n"]}]}