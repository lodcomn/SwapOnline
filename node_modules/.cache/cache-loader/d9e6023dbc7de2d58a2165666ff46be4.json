{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\CurrencyWallet\\CurrencyWallet.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\CurrencyWallet\\CurrencyWallet.tsx","mtime":1614852117577},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/CurrencyWallet/CurrencyWallet.tsx"],"names":["React","Component","Fragment","connect","actions","withRouter","helpers","links","constants","ethToken","getTokenWallet","getBitcoinWallet","getEtherWallet","getGhostWallet","getNextWallet","CSSModules","styles","stylesHere","Row","SwapsHistory","Table","PageSeo","getSeoPage","injectIntl","defineMessages","localisedUrl","config","BalanceForm","BigNumber","ContentLoader","FilterForm","DashboardLayout","getCurrencyKey","lsDataCache","isWidgetBuild","isWidget","isDark","localStorage","getItem","CurrencyWallet","isSigned","signUp","core","user","history","transactions","swapHistory","ethData","btcData","ghostData","nextData","activeFiat","activeCurrency","btcMultisigSMSData","btcMultisigUserData","isFetching","isBalanceFetching","tokensData","multisigStatus","multisigPendingCount","items","Object","keys","map","k","tokens","historyTx","hiddenCoinsList","txHistory","allowMultiple","props","setState","rows","_mounted","data","concat","sort","a","b","date","txItems","state","currency","address","push","key","toLowerCase","time","isClosedNotifyBlockBanner","isClosedNotifyBlockSignUp","isPrivateKeysSaved","privateKeysSaved","walletTitle","modals","open","ReceiveModal","InvoiceModal","toUpperCase","toAddress","locale","intl","itemCurrency","contractAddress","decimals","balance","isBalanceEmpty","withdrawModal","Withdraw","isSmsProtected","WithdrawMultisigSMS","isUserProtected","WithdrawMultisigUser","targetCurrency","isToken","isEthToken","name","wallet","exchange","row","rowIndex","target","value","filterValue","loading","length","newRows","filter","includes","resetFilter","isLoading","setTimeout","setTransactions","pullTransactions","match","params","fullName","ticker","action","getWallets","isRedirecting","redirectUrl","walletAddress","item","infoAboutCurrency","hasCachedData","get","token","console","log","getBalances","location","reload","getBalance","fetchBalance","then","setLocalStorageItems","getSwapHistory","withdrawUrl","receiveUrl","pathname","modalType","currencyRate","pullActiveCurrency","prevProps","prevFiat","prevAddress","modalWithdraw","oldTxItems","currentUrl","currencyKey","tx","type","showSwapHistory","swap","sellCurrency","buyCurrency","reverse","seoPage","titleSwapOnline","metaTitle","id","defaultMessage","titleWidgetBuild","title","description","metaDescription","markCoinAsVisible","currencyFiatBalance","changePercent","price_fiat","dp","ROUND_FLOOR","toString","percent_change_1h","settings","infinite","speed","autoplay","autoplaySpeed","fade","slidesToShow","slidesToScroll","formatMessage","handleReceive","handleWithdraw","handleGoTrade","handleInvoice","isOwner","handleFilter","handleFilterChange","rowRender","btcmultisig","isBTCSMSAddress","isBTCMSUserAddress","step","footer"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport { connect } from 'redaction'\r\nimport actions from 'redux/actions'\r\nimport Slider from 'pages/Wallet/components/WallerSlider'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport helpers, { links, constants, ethToken } from 'helpers'\r\nimport { getTokenWallet, getBitcoinWallet, getEtherWallet, getGhostWallet, getNextWallet } from 'helpers/links'\r\n\r\nimport CSSModules from 'react-css-modules'\r\nimport styles from './CurrencyWallet.scss'\r\nimport stylesHere from '../History/History.scss'\r\n\r\nimport Row from 'pages/History/Row/Row'\r\nimport SwapsHistory from 'pages/History/SwapsHistory/SwapsHistory'\r\n\r\nimport Table from 'components/tables/Table/Table'\r\nimport PageSeo from 'components/Seo/PageSeo'\r\nimport { getSeoPage } from 'helpers/seo'\r\nimport { injectIntl, defineMessages } from 'react-intl'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport config from 'app-config'\r\nimport BalanceForm from 'components/BalanceForm/BalanceForm'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport ContentLoader from 'components/loaders/ContentLoader/ContentLoader'\r\nimport FilterForm from 'components/FilterForm/FilterForm'\r\nimport DashboardLayout from 'components/layout/DashboardLayout/DashboardLayout'\r\n\r\nimport getCurrencyKey from 'helpers/getCurrencyKey'\r\nimport lsDataCache from 'helpers/lsDataCache'\r\n\r\n\r\nconst isWidgetBuild = config && config.isWidget\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\n@connect(({ signUp: { isSigned } }) => ({\r\n  isSigned,\r\n}))\r\n@connect(\r\n  ({\r\n    core,\r\n    user,\r\n    history: { transactions, swapHistory },\r\n    history,\r\n    user: {\r\n      ethData,\r\n      btcData,\r\n      ghostData,\r\n      nextData,\r\n      activeFiat,\r\n      activeCurrency,\r\n      btcMultisigSMSData,\r\n      btcMultisigUserData,\r\n      isFetching,\r\n      isBalanceFetching,\r\n      tokensData,\r\n      multisigStatus,\r\n      multisigPendingCount,\r\n    },\r\n  }) => ({\r\n    items: [\r\n      ethData,\r\n      btcData,\r\n      ghostData,\r\n      nextData,\r\n      btcMultisigSMSData,\r\n      btcMultisigUserData,\r\n      ...Object.keys(tokensData).map((k) => tokensData[k]),\r\n    ],\r\n    tokens: [...Object.keys(tokensData).map((k) => tokensData[k])],\r\n    user,\r\n    activeFiat,\r\n    historyTx: history,\r\n    hiddenCoinsList: core.hiddenCoinsList,\r\n    txHistory: transactions,\r\n    swapHistory,\r\n    isFetching,\r\n    activeCurrency,\r\n    isBalanceFetching,\r\n    multisigStatus,\r\n    multisigPendingCount,\r\n  })\r\n)\r\n@injectIntl\r\n@withRouter\r\n@CSSModules({ ...styles, ...stylesHere }, { allowMultiple: true })\r\nexport default class CurrencyWallet extends Component<any, any> {\r\n  _mounted = false\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {\r\n      match: {\r\n        params: { fullName = null, ticker = null, address = null, action = null },\r\n      },\r\n      intl: { locale },\r\n      //items,\r\n      txHistory,\r\n      hiddenCoinsList,\r\n    } = props\r\n\r\n    const items = actions.core.getWallets({})\r\n\r\n    if (!address && !ticker) {\r\n      if (fullName) {\r\n        // Если это токен - перенаправляем на адрес /token/name/address\r\n        if (ethToken.isEthToken({ name: fullName })) {\r\n          this.state = {\r\n            ...this.state,\r\n            ...{\r\n              isRedirecting: true,\r\n              redirectUrl: getTokenWallet(fullName),\r\n            },\r\n          }\r\n          return\r\n        }\r\n\r\n        if (fullName.toLowerCase() === `bitcoin`) {\r\n          this.state = {\r\n            ...this.state,\r\n            ...{\r\n              isRedirecting: true,\r\n              redirectUrl: getBitcoinWallet(),\r\n            },\r\n          }\r\n          return\r\n        }\r\n        if (fullName.toLowerCase() === `ghost`) {\r\n          this.state = {\r\n            ...this.state,\r\n            ...{\r\n              isRedirecting: true,\r\n              redirectUrl: getGhostWallet(),\r\n            },\r\n          }\r\n          return\r\n        }\r\n        if (fullName.toLowerCase() === `next`) {\r\n          this.state = {\r\n            ...this.state,\r\n            ...{\r\n              isRedirecting: true,\r\n              redirectUrl: getNextWallet(),\r\n            },\r\n          }\r\n          return\r\n        }\r\n\r\n        if (fullName.toLowerCase() === `ethereum`) {\r\n          this.state = {\r\n            ...this.state,\r\n            ...{\r\n              isRedirecting: true,\r\n              redirectUrl: getEtherWallet(),\r\n            },\r\n          }\r\n          return\r\n        }\r\n      }\r\n      // @ToDO throw error\r\n    }\r\n\r\n    const walletAddress = address\r\n\r\n    // оставляю запасной вариант для старых ссылок\r\n    if (fullName) {\r\n      //@\r\n      ticker = fullName\r\n    }\r\n\r\n    // MultiWallet - after Sweep - названию валюты доверять нельзя - нужно проверяться также адрес - и выбирать по адресу\r\n    let itemCurrency = items.filter((item) => {\r\n      if (ethToken.isEthToken({ name: ticker })) {\r\n        if (\r\n          item.currency.toLowerCase() === ticker.toLowerCase() &&\r\n          item.address.toLowerCase() === walletAddress.toLowerCase()\r\n        ) {\r\n          return true\r\n        }\r\n      } else {\r\n        if (!ethToken.isEthToken({ name: ticker }) && item.address.toLowerCase() === walletAddress.toLowerCase()) {\r\n          return true\r\n        }\r\n      }\r\n    })\r\n    if (!itemCurrency.length) {\r\n      itemCurrency = items.filter((item) => {\r\n        if (item.balance > 0 && item.currency.toLowerCase() === ticker.toLowerCase()) return true\r\n      })\r\n    }\r\n    if (!itemCurrency.length) {\r\n      itemCurrency = items.filter((item) => {\r\n        if (item.balance >= 0 && item.currency.toLowerCase() === ticker.toLowerCase()) return true\r\n      })\r\n    }\r\n\r\n    if (itemCurrency.length) {\r\n      itemCurrency = itemCurrency[0]\r\n      //@\r\n      const { currency, address, contractAddress, decimals, balance, infoAboutCurrency } = itemCurrency\r\n\r\n      const hasCachedData = lsDataCache.get(`TxHistory_${getCurrencyKey(currency, true).toLowerCase()}_${address}`)\r\n\r\n      this.state = {\r\n        itemCurrency,\r\n        address,\r\n        walletAddress,\r\n        balance,\r\n        decimals,\r\n        currency,\r\n        txItems: hasCachedData,\r\n        contractAddress,\r\n        hiddenCoinsList,\r\n        isLoading: false,\r\n        infoAboutCurrency,\r\n        filterValue: walletAddress || address || '',\r\n        token: ethToken.isEthToken({ name: ticker }),\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._mounted = true\r\n    console.log('CurrencyWallet mounted')\r\n    const {\r\n      currency,\r\n      itemCurrency,\r\n      token,\r\n      isRedirecting,\r\n      redirectUrl,\r\n      balance,\r\n      infoAboutCurrency,\r\n      hiddenCoinsList,\r\n    } = this.state\r\n\r\n    actions.user.getBalances()\r\n\r\n    if (isRedirecting) {\r\n      const {\r\n        history,\r\n        intl: { locale },\r\n      } = this.props\r\n      history.push(localisedUrl(locale, redirectUrl))\r\n      setTimeout(() => {\r\n        location.reload()\r\n      }, 100)\r\n      return\r\n    }\r\n\r\n    let {\r\n      match: {\r\n        params: { address = null },\r\n      },\r\n      activeCurrency,\r\n      activeFiat\r\n    } = this.props\r\n\r\n    if (currency) {\r\n      // actions.analytics.dataEvent(`open-page-${currency.toLowerCase()}-wallet`)\r\n    }\r\n    if (token) {\r\n      actions.token.getBalance(currency.toLowerCase())\r\n    }\r\n\r\n    // set balance for the address\r\n    address &&\r\n      actions[getCurrencyKey(currency.toLowerCase(), false)]\r\n        .fetchBalance(address)\r\n        .then((balance) => this.setState({ balance }))\r\n\r\n    this.setLocalStorageItems()\r\n\r\n    // if address is null, take transactions from current user\r\n    address\r\n      ? actions.history.setTransactions(address, currency.toLowerCase(), this.pullTransactions)\r\n      : actions.user.setTransactions()\r\n\r\n    if (!address) {\r\n      actions.core.getSwapHistory()\r\n    }\r\n\r\n    const { Withdraw, WithdrawMultisigSMS, WithdrawMultisigUser } = constants.modals\r\n\r\n    const targetCurrency = getCurrencyKey(currency.toLowerCase(), true)\r\n    const isToken = helpers.ethToken.isEthToken({ name: currency })\r\n\r\n    const withdrawUrl = (isToken ? '/token' : '') + `/${targetCurrency}/${address}/send`\r\n    const receiveUrl = (isToken ? '/token' : '') + `/${targetCurrency}/${address}/receive`\r\n\r\n    if (this.props.history.location.pathname.toLowerCase() === withdrawUrl.toLowerCase() && balance !== 0) {\r\n      let modalType = Withdraw\r\n      // if (itemCurrency.isSmsProtected) modalType = WithdrawMultisigSMS\r\n      // if (itemCurrency.isUserProtected) modalType = WithdrawMultisigUser\r\n\r\n      actions.modals.open(modalType, {\r\n        currency,\r\n        address,\r\n        balance,\r\n        infoAboutCurrency,\r\n        hiddenCoinsList,\r\n        currencyRate: itemCurrency.currencyRate,\r\n      })\r\n      if (activeCurrency.toUpperCase() !== activeFiat) {\r\n        actions.user.pullActiveCurrency(currency.toLowerCase())\r\n      }\r\n    }\r\n    if (this.props.history.location.pathname.toLowerCase() === receiveUrl.toLowerCase()) {\r\n      actions.modals.open(constants.modals.ReceiveModal, {\r\n        currency,\r\n        address,\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { currency } = this.state\r\n\r\n    const { activeFiat } = this.props\r\n    const { activeFiat: prevFiat } = prevProps\r\n\r\n    let {\r\n      match: {\r\n        params: { address = null, fullName = null, ticker = null, action = null },\r\n      },\r\n      hiddenCoinsList,\r\n      activeCurrency\r\n    } = this.props\r\n\r\n    let {\r\n      match: {\r\n        params: { address: prevAddress = null },\r\n      },\r\n    } = prevProps\r\n    if (prevAddress !== address) {\r\n      address\r\n        ? actions.history.setTransactions(address, currency.toLowerCase(), this.pullTransactions)\r\n        : actions.user.setTransactions()\r\n    }\r\n\r\n    if (\r\n      prevProps.location.pathname !== this.props.location.pathname ||\r\n      prevProps.isBalanceFetching !== this.props.isBalanceFetching\r\n    ) {\r\n      const items = actions.core.getWallets({})\r\n\r\n      if (!address && !ticker) {\r\n        if (fullName) {\r\n          // Если это токен - перенаправляем на адрес /token/name/address\r\n          if (ethToken.isEthToken({ name: fullName })) {\r\n            this.state = {\r\n              ...this.state,\r\n              ...{\r\n                isRedirecting: true,\r\n                redirectUrl: getTokenWallet(fullName),\r\n              },\r\n            }\r\n            return\r\n          }\r\n\r\n          if (fullName.toLowerCase() === `bitcoin`) {\r\n            this.state = {\r\n              ...this.state,\r\n              ...{\r\n                isRedirecting: true,\r\n                redirectUrl: getBitcoinWallet(),\r\n              },\r\n            }\r\n            return\r\n          }\r\n\r\n          if (fullName.toLowerCase() === `ghost`) {\r\n            this.state = {\r\n              ...this.state,\r\n              ...{\r\n                isRedirecting: true,\r\n                redirectUrl: getGhostWallet(),\r\n              },\r\n            }\r\n            return\r\n          }\r\n\r\n          if (fullName.toLowerCase() === `next`) {\r\n            this.state = {\r\n              ...this.state,\r\n              ...{\r\n                isRedirecting: true,\r\n                redirectUrl: getNextWallet(),\r\n              },\r\n            }\r\n            return\r\n          }\r\n\r\n          if (fullName.toLowerCase() === `ethereum`) {\r\n            this.state = {\r\n              ...this.state,\r\n              ...{\r\n                isRedirecting: true,\r\n                redirectUrl: getEtherWallet(),\r\n              },\r\n            }\r\n            return\r\n          }\r\n        }\r\n        // @ToDO throw error\r\n      }\r\n\r\n      const walletAddress = address\r\n\r\n      // оставляю запасной вариант для старых ссылок\r\n      if (fullName) {\r\n        ticker = fullName\r\n      }\r\n      // MultiWallet - after Sweep - названию валюты доверять нельзя - нужно проверяться также адрес - и выбирать по адресу\r\n      let itemCurrency = items.filter((item) => {\r\n        if (ethToken.isEthToken({ name: ticker })) {\r\n          if (\r\n            item.currency.toLowerCase() === ticker.toLowerCase() &&\r\n            item.address.toLowerCase() === walletAddress.toLowerCase()\r\n          ) {\r\n            return true\r\n          }\r\n        } else {\r\n          if (!ethToken.isEthToken({ name: ticker }) && item.address.toLowerCase() === walletAddress.toLowerCase()) {\r\n            return true\r\n          }\r\n        }\r\n      })\r\n\r\n      if (itemCurrency.length) {\r\n        itemCurrency = itemCurrency[0]\r\n        //@\r\n        const { currency, address, contractAddress, decimals, balance, infoAboutCurrency } = itemCurrency\r\n\r\n        const { Withdraw, WithdrawMultisigSMS, WithdrawMultisigUser } = constants.modals\r\n\r\n        let modalWithdraw = Withdraw\r\n        // if (itemCurrency.isSmsProtected) modalWithdraw = WithdrawMultisigSMS\r\n        // if (itemCurrency.isUserProtected) modalWithdraw = WithdrawMultisigUser\r\n\r\n        const {\r\n          txItems: oldTxItems,\r\n        } = this.state\r\n\r\n        const hasCachedData = lsDataCache.get(`TxHistory_${getCurrencyKey(currency, true).toLowerCase()}_${address}`)\r\n\r\n        this.setState(\r\n          {\r\n            itemCurrency,\r\n            address,\r\n            decimals,\r\n            currency,\r\n            balance,\r\n            txItems: (hasCachedData || oldTxItems),\r\n            contractAddress,\r\n            isLoading: false,\r\n            infoAboutCurrency,\r\n            filterValue: address || '',\r\n            token: ethToken.isEthToken({ name: ticker }),\r\n          },\r\n          () => {\r\n            if (prevProps.location.pathname !== this.props.location.pathname) {\r\n              if (activeCurrency.toUpperCase() !== activeFiat) {\r\n                actions.user.pullActiveCurrency(currency.toLowerCase())\r\n              }\r\n            }\r\n            const targetCurrency = getCurrencyKey(currency.toLowerCase(), true)\r\n            const isToken = helpers.ethToken.isEthToken({ name: currency })\r\n\r\n            const withdrawUrl = (isToken ? '/token' : '') + `/${targetCurrency}/${address}/send`\r\n            const receiveUrl = (isToken ? '/token' : '') + `/${targetCurrency}/${address}/receive`\r\n            const currentUrl = this.props.location.pathname.toLowerCase()\r\n\r\n            if (currentUrl === withdrawUrl.toLowerCase()) {\r\n              actions.modals.open(modalWithdraw, {\r\n                currency,\r\n                address,\r\n                balance,\r\n                infoAboutCurrency,\r\n                hiddenCoinsList,\r\n                itemCurrency,\r\n                //@\r\n                currencyRate: itemCurrency.currencyRate,\r\n              })\r\n            }\r\n            if (currentUrl === receiveUrl.toLowerCase()) {\r\n              actions.modals.open(constants.modals.ReceiveModal, {\r\n                currency,\r\n                address,\r\n              })\r\n            }\r\n          }\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._mounted = false\r\n    console.log('CurrencyWallet unmounted')\r\n  }\r\n\r\n  getRows = (txHistory) => {\r\n    this.setState(() => ({ rows: txHistory }))\r\n  }\r\n\r\n  pullTransactions = (transactions) => {\r\n    if (!this._mounted) return\r\n    let data = [].concat([], ...transactions).sort((a, b) => b.date - a.date)\r\n    this.setState({\r\n      txItems: data,\r\n    })\r\n\r\n    const {\r\n      currency,\r\n      address,\r\n    } = this.state\r\n\r\n    lsDataCache.push({\r\n      key: `TxHistory_${getCurrencyKey(currency, true).toLowerCase()}_${address}`,\r\n      data,\r\n      time: 3600,\r\n    })\r\n  }\r\n\r\n  setLocalStorageItems = () => {\r\n    //@\r\n    const isClosedNotifyBlockBanner = localStorage.getItem(constants.localStorage.isClosedNotifyBlockBanner)\r\n    //@\r\n    const isClosedNotifyBlockSignUp = localStorage.getItem(constants.localStorage.isClosedNotifyBlockSignUp)\r\n    const isPrivateKeysSaved = localStorage.getItem(constants.localStorage.privateKeysSaved)\r\n    const walletTitle = localStorage.getItem(constants.localStorage.walletTitle)\r\n\r\n    this.setState({\r\n      isClosedNotifyBlockBanner,\r\n      isClosedNotifyBlockSignUp,\r\n      walletTitle,\r\n      isPrivateKeysSaved,\r\n    })\r\n  }\r\n\r\n  handleReceive = () => {\r\n    const { currency, address } = this.state\r\n\r\n    actions.modals.open(constants.modals.ReceiveModal, {\r\n      currency,\r\n      address,\r\n    })\r\n  }\r\n\r\n  handleInvoice = () => {\r\n    const { currency, address } = this.state\r\n\r\n    actions.modals.open(constants.modals.InvoiceModal, {\r\n      currency: currency.toUpperCase(),\r\n      toAddress: address,\r\n    })\r\n  }\r\n\r\n  handleWithdraw = () => {\r\n    const {\r\n      history,\r\n      hiddenCoinsList,\r\n      intl: { locale },\r\n    } = this.props\r\n    const { itemCurrency, currency, address, contractAddress, decimals, balance, isBalanceEmpty } = this.state\r\n\r\n    // actions.analytics.dataEvent(`balances-withdraw-${currency.toLowerCase()}`)\r\n    let withdrawModal = constants.modals.Withdraw\r\n    if (itemCurrency.isSmsProtected) withdrawModal = withdrawModal = constants.modals.WithdrawMultisigSMS\r\n    if (itemCurrency.isUserProtected) withdrawModal = constants.modals.WithdrawMultisigUser\r\n\r\n    let targetCurrency = getCurrencyKey(currency.toLowerCase(), true).toLowerCase()\r\n\r\n    const isToken = helpers.ethToken.isEthToken({ name: currency })\r\n\r\n    history.push(localisedUrl(locale, (isToken ? '/token' : '') + `/${targetCurrency}/${address}/send`))\r\n  }\r\n\r\n  handleGoWalletHome = () => {\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n\r\n    history.push(localisedUrl(locale, links.wallet))\r\n  }\r\n\r\n  handleGoTrade = () => {\r\n    const { currency } = this.state\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n\r\n    history.push(localisedUrl(locale, `${links.exchange}/btc-to-${currency.toLowerCase()}`))\r\n  }\r\n\r\n  rowRender = (row, rowIndex) => {\r\n    const {\r\n      history,\r\n      activeFiat,\r\n    } = this.props\r\n\r\n    return <Row key={rowIndex} {...row} activeFiat={activeFiat} history={history} />\r\n  }\r\n\r\n  handleFilterChange = ({ target }) => {\r\n    const { value } = target\r\n\r\n    this.setState(() => ({ filterValue: value }))\r\n  }\r\n\r\n  handleFilter = () => {\r\n    const { filterValue, txItems } = this.state\r\n    this.loading()\r\n\r\n    if (filterValue.toLowerCase() && filterValue.length) {\r\n      const newRows = txItems.filter(\r\n        ({ address }) => address && address.toLowerCase().includes(filterValue.toLowerCase())\r\n      )\r\n\r\n      this.setState(() => ({ txItems: newRows }))\r\n    } else {\r\n      this.resetFilter()\r\n    }\r\n  }\r\n\r\n  loading = () => {\r\n    this.setState(() => ({ isLoading: true }))\r\n    setTimeout(() => this.setState(() => ({ isLoading: false })), 1000)\r\n  }\r\n\r\n  resetFilter = () => {\r\n    this.loading()\r\n    const { address, currency } = this.state\r\n    this.setState(() => ({ filterValue: address }))\r\n    actions.history.setTransactions(address, currency.toLowerCase(), this.pullTransactions)\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      swapHistory,\r\n      txHistory,\r\n      location,\r\n      match: {\r\n        params: { address = null },\r\n      },\r\n      intl,\r\n      hiddenCoinsList,\r\n      isSigned,\r\n      isBalanceFetching,\r\n      activeFiat,\r\n      multisigStatus,\r\n      activeCurrency,\r\n      multisigPendingCount,\r\n    } = this.props\r\n\r\n    const {\r\n      currency,\r\n      itemCurrency,\r\n      balance,\r\n      fullName,\r\n      infoAboutCurrency,\r\n      isRedirecting,\r\n      txItems,\r\n      filterValue,\r\n      isLoading,\r\n    } = this.state\r\n\r\n    const currencyKey = getCurrencyKey(currency, true)\r\n\r\n    if (isRedirecting) return null\r\n\r\n    txHistory = txItems || txHistory\r\n\r\n    if (txHistory) {\r\n      txHistory = txHistory.filter((tx) => {\r\n        if (tx && tx.type) {\r\n          return tx.type.toLowerCase() === currencyKey.toLowerCase()\r\n        }\r\n        return false\r\n      })\r\n    }\r\n\r\n    const showSwapHistory = (address.toLowerCase() === itemCurrency.address.toLowerCase())\r\n\r\n    if (showSwapHistory)\r\n      swapHistory = Object.keys(swapHistory)\r\n      .map((key) => swapHistory[key])\r\n      .filter((swap) => swap.sellCurrency === currency || swap.buyCurrency === currency)\r\n      .reverse()\r\n\r\n    const seoPage = getSeoPage(location.pathname)\r\n\r\n    const titleSwapOnline = defineMessages({\r\n      metaTitle: {\r\n        id: 'CurrencyWalletTitle',\r\n        defaultMessage: 'Swap.Online - {fullName} ({currency}) Web Wallet with Atomic Swap.',\r\n      },\r\n    })\r\n    const titleWidgetBuild = defineMessages({\r\n      metaTitle: {\r\n        id: 'CurrencyWalletWidgetBuildTitle',\r\n        defaultMessage: '{fullName} ({currency}) Web Wallet with Atomic Swap.',\r\n      },\r\n    })\r\n    const title = isWidgetBuild ? titleWidgetBuild : titleSwapOnline\r\n\r\n    const description = defineMessages({\r\n      metaDescription: {\r\n        id: 'CurrencyWallet154',\r\n        defaultMessage:\r\n          'Atomic Swap Wallet allows you to manage and securely exchange ${fullName} (${currency}) with 0% fees. Based on Multi-Sig and Atomic Swap technologies.',\r\n      },\r\n    })\r\n\r\n    if (hiddenCoinsList.includes(currency)) {\r\n      actions.core.markCoinAsVisible(currency)\r\n    }\r\n\r\n    let currencyFiatBalance\r\n    let changePercent\r\n\r\n    if (infoAboutCurrency && infoAboutCurrency.price_fiat) {\r\n      currencyFiatBalance =\r\n        new BigNumber(balance).dp(6, BigNumber.ROUND_FLOOR).toString() as any * infoAboutCurrency.price_fiat as any\r\n      changePercent = infoAboutCurrency.percent_change_1h\r\n    } else {\r\n      currencyFiatBalance = 0\r\n    }\r\n\r\n    let settings = {\r\n      infinite: true,\r\n      speed: 500,\r\n      autoplay: true,\r\n      autoplaySpeed: 6000,\r\n      fade: true,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n    }\r\n\r\n    return (\r\n      <div styleName={`root ${isDark ? 'dark' : ''}`}>\r\n        <PageSeo\r\n          location={location}\r\n          defaultTitle={intl.formatMessage(title.metaTitle, {\r\n            fullName,\r\n            currency,\r\n          })}\r\n          defaultDescription={intl.formatMessage(description.metaDescription, {\r\n            fullName,\r\n            currency,\r\n          })}\r\n        />\r\n\r\n        <DashboardLayout\r\n          page=\"history\"\r\n          BalanceForm={\r\n            txHistory\r\n              ?\r\n              <BalanceForm\r\n                address={address}\r\n                activeFiat={activeFiat}\r\n                currencyBalance={balance}\r\n                fiatBalance={currencyFiatBalance}\r\n                changePercent={changePercent}\r\n                activeCurrency={activeCurrency}\r\n                isFetching={isBalanceFetching}\r\n                handleReceive={this.handleReceive}\r\n                handleWithdraw={this.handleWithdraw}\r\n                handleExchange={this.handleGoTrade}\r\n                handleInvoice={this.handleInvoice}\r\n                showButtons={actions.user.isOwner(address, currency)}\r\n                currency={currency.toLowerCase()}\r\n                singleWallet={true}\r\n                multisigPendingCount={multisigPendingCount}\r\n              />\r\n              :\r\n              <Fragment>\r\n                {/*\r\n                //@ */}\r\n                <ContentLoader leftSideContent />\r\n              </Fragment>\r\n          }\r\n        >\r\n          <div styleName={`currencyWalletActivity ${isDark ? 'darkActivity' : ''}`}>\r\n            <FilterForm\r\n              filterValue={filterValue}\r\n              onSubmit={this.handleFilter}\r\n              onChange={this.handleFilterChange}\r\n              resetFilter={this.resetFilter}\r\n            />\r\n            {txHistory &&\r\n              !isLoading &&\r\n              (txHistory.length > 0 ? (\r\n                <Table rows={txHistory} styleName=\"currencyHistory\" rowRender={this.rowRender} />\r\n              ) : (\r\n                  <div styleName=\"historyContent\">\r\n                    {/*\r\n                    //@ */}\r\n                    <ContentLoader rideSideContent empty nonHeader inner />\r\n                  </div>\r\n                ))}\r\n            {(!txHistory || isLoading) && (\r\n              <div styleName=\"historyContent\">\r\n                {/*\r\n                //@ */}\r\n                <ContentLoader rideSideContent nonHeader />\r\n              </div>\r\n            )}\r\n          </div>\r\n          {showSwapHistory && (\r\n            <>\r\n              {!actions.btcmultisig.isBTCSMSAddress(`${address}`) &&\r\n                !actions.btcmultisig.isBTCMSUserAddress(`${address}`) &&\r\n                (swapHistory.filter((item) => item.step >= 1).length > 0 ? (\r\n                    <SwapsHistory orders={swapHistory.filter((item) => item.step >= 4)} />\r\n                  ) : (\r\n                    ''\r\n                  )\r\n                )\r\n              }\r\n            </>\r\n          )}\r\n        </DashboardLayout>\r\n        <Fragment>{seoPage && seoPage.footer && <div>{seoPage.footer}</div>}</Fragment>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}]}