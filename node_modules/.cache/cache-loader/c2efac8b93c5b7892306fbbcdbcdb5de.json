{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\Swap.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\Swap.tsx","mtime":1614842914203},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Swap/Swap.tsx"],"names":["React","PureComponent","Fragment","Swap","SwapApp","cssModules","styles","connect","helpers","links","constants","apiLooper","isMobile","actions","swapComponents","Debug","injectIntl","FormattedMessage","localisedUrl","DeleteSwapAfterEnd","feedback","config","isWidgetBuild","isWidget","isDark","localStorage","getItem","SwapComponent","user","ethData","btcData","ghostData","nextData","tokensData","activeFiat","peer","pubsubRoom","rememberedOrders","items","tokenItems","Object","keys","map","k","currenciesData","errors","checked","savedOrders","allowMultiple","props","orderId","state","swap","flow","step","utxoScriptValues","flowState","swapsId","JSON","parse","length","includes","push","id","buyCurrency","sellCurrency","buyAmount","sellAmount","destinationBuyAddress","destinationSellAddress","owner","participant","sendedData","toNumber","sendedJSON","stringify","setItem","clearInterval","sendDebugInfoTimer","started","isStoppedSwap","deleteThisSwap","setState","isSwapCancelled","isFinished","isRefunded","core","rememberOrder","saveDeletedOrder","forgetOrders","balance","isBalanceEnough","isSellCurrencyEthOrEthToken","ethToken","isEthOrEthToken","name","stepForCheckBalance","enoughBalance","requireWithdrawFee","requireWithdrawFeeSended","withdrawRequestIncoming","withdrawRequestAccepted","sendWithdrawRequest","waitWithdrawOther","window","setTimeout","acceptWithdrawRequest","isFaucetRequested","continueSwap","post","body","eth","ethAddress","toString","then","rv","console","info","txid","error","warn","checkOtherSideRefund","isOtherSideRefunded","otherSideRefunded","isFailedTransaction","participantSwap","canCreateEthTransaction","currency","currencyData","sendRequestToFaucet","isShowDebug","locale","intl","history","e","isAddressCopied","isMy","isAmountMore","depositWindow","shouldStopCheckSendingOfRequesting","match","params","performance","navigation","type","location","reload","exchange","wallets","forEach","item","address","shared","log","_flowName","filter","concat","toUpperCase","currencies","amount","getExchangeRate","toLowerCase","exRate","Number","notifications","show","ErrorNotification","setSaveSwapId","saveThisSwap","setInterval","sendSwapDebugInformation","checkingCycle","isFinallyFinished","checkIsFinished","checkStoppedSwap","finished","stopped","checkEnoughFee","requestingWithdrawFee","checkFailSwap","checkingConfirmSuccess","checkIsConfirmed","checkingConfirmSuccessTimer","checkingCycleTimer","clearTimeout","requestToFaucetSended","toggleDebug","goWallet"],"mappings":"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","sourcesContent":["\r\nimport React, { PureComponent, Fragment } from 'react'\r\n\r\nimport Swap from 'swap.swap'\r\nimport SwapApp from 'swap.app'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './Swap.scss'\r\n\r\nimport { connect } from 'redaction'\r\nimport helpers, { links, constants, apiLooper } from 'helpers'\r\nimport request from 'common/utils/request'\r\nimport { isMobile } from 'react-device-detect'\r\nimport actions from 'redux/actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { swapComponents } from './swaps'\r\nimport Debug from './Debug/Debug'\r\nimport { injectIntl, FormattedMessage } from 'react-intl'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport DeleteSwapAfterEnd from './DeleteSwapAfterEnd'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\n\r\nimport feedback from 'shared/helpers/feedback'\r\n\r\nimport config from 'app-config'\r\n\r\n\r\nconst isWidgetBuild = config && config.isWidget\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\n@injectIntl\r\n@connect(({\r\n  user: { ethData, btcData, ghostData, nextData, tokensData, activeFiat },\r\n  pubsubRoom: { peer },\r\n  rememberedOrders,\r\n}) => ({\r\n  activeFiat,\r\n  items: [ethData, btcData, ghostData, nextData],\r\n  tokenItems: [...Object.keys(tokensData).map(k => (tokensData[k]))],\r\n  currenciesData: [ethData, btcData, ghostData, nextData],\r\n  tokensData: [...Object.keys(tokensData).map(k => (tokensData[k]))],\r\n  errors: 'api.errors',\r\n  checked: 'api.checked',\r\n  savedOrders: rememberedOrders.savedOrders,\r\n  peer,\r\n}))\r\n\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class SwapComponent extends PureComponent<any, any> {\r\n\r\n  wallets: any\r\n  checkingConfirmSuccessTimer: any\r\n  checkingCycleTimer: any\r\n  sendDebugInfoTimer: any\r\n\r\n\r\n  /*\r\n    ================================================================\r\n    This is debug information without any secret and private data.\r\n    This information can help me resolve problems.\r\n    Contact me https://t.me/sashanoxon with any questions\r\n  */\r\n  sendSwapDebugInformation = (orderId) => {\r\n    const {\r\n      swap: {\r\n        flow: {\r\n          state: {\r\n            step,\r\n            utxoScriptValues,\r\n          },\r\n          state: flowState,\r\n        },\r\n        flow,\r\n      },\r\n      swap,\r\n    } = this.state\r\n\r\n    if (step >= 3) {\r\n\r\n      let swapsId = JSON.parse(localStorage.getItem('axiosSwaps'))\r\n\r\n      if (swapsId === null || swapsId.length === 0) {\r\n        swapsId = []\r\n      }\r\n      if (!swapsId.includes(orderId)) {\r\n        swapsId.push(orderId)\r\n\r\n        const {\r\n          id,\r\n          buyCurrency,\r\n          sellCurrency,\r\n          buyAmount,\r\n          sellAmount,\r\n          destinationBuyAddress,\r\n          destinationSellAddress,\r\n          owner,\r\n          participant,\r\n        } = swap\r\n\r\n        const sendedData = {\r\n          id,\r\n          buyCurrency,\r\n          sellCurrency,\r\n          buyAmount: buyAmount.toNumber(),\r\n          sellAmount: sellAmount.toNumber(),\r\n          destinationBuyAddress,\r\n          destinationSellAddress,\r\n          owner,\r\n          participant,\r\n          utxoScriptValues\r\n        }\r\n        const sendedJSON = JSON.stringify(sendedData)\r\n\r\n        localStorage.setItem('axiosSwaps', JSON.stringify(swapsId))\r\n        clearInterval(this.sendDebugInfoTimer)\r\n\r\n        feedback.swap.started(sendedJSON)\r\n      }\r\n    }\r\n  }\r\n  /* ================================================================ */\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isAddressCopied: false,\r\n      swap: null,\r\n      isMy: false,\r\n      currencyData: null,\r\n      isAmountMore: null,\r\n      SwapComponent: null,\r\n      continueSwap: true,\r\n      enoughBalance: true,\r\n      depositWindow: false,\r\n      isShowDebug: false,\r\n      shouldStopCheckSendingOfRequesting: false,\r\n      waitWithdrawOther: false,\r\n      isFaucetRequested: false,\r\n      isSwapCancelled: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { items, tokenItems, currenciesData, tokensData, intl: { locale } } = this.props\r\n    let { match: { params: { orderId } }, history, activeFiat } = this.props\r\n\r\n    if (!!window.performance && window.performance.navigation.type === 2) {\r\n      window.location.reload()\r\n    }\r\n\r\n    if (!orderId) {\r\n      history.push(localisedUrl(links.exchange))\r\n      return\r\n    }\r\n\r\n    this.wallets = {}\r\n    currenciesData.forEach(item => {\r\n      this.wallets[item.currency] = item.address\r\n    })\r\n    tokensData.forEach(item => {\r\n      this.wallets[item.currency] = item.address\r\n    })\r\n\r\n    try {\r\n      const swap = new Swap(orderId, SwapApp.shared())\r\n      console.log('Swap flow:', swap.flow._flowName);\r\n\r\n      const SwapComponent = swapComponents[swap.flow._flowName]\r\n      const ethData = items.filter(item => item.currency === 'ETH')\r\n      const currencyData = items.concat(tokenItems)\r\n        .filter(item => item.currency === swap.sellCurrency.toUpperCase())[0]\r\n      const currencies = [\r\n        {\r\n          currency: swap.sellCurrency,\r\n          amount: swap.sellAmount,\r\n        },\r\n        {\r\n          currency: swap.buyCurrency,\r\n          amount: swap.buyAmount,\r\n        },\r\n      ]\r\n\r\n      currencies.forEach(item => {\r\n        actions.user.getExchangeRate(item.currency, activeFiat.toLowerCase())\r\n          .then(exRate => {\r\n            const amount = exRate * Number(item.amount)\r\n\r\n            if (Number(amount) >= 50) {\r\n              this.setState(() => ({ isAmountMore: 'enable' }))\r\n            } else {\r\n              this.setState(() => ({ isAmountMore: 'disable' }))\r\n            }\r\n          })\r\n      })\r\n\r\n      this.setState(() => ({\r\n        swap,\r\n        ethData,\r\n        SwapComponent,\r\n        currencyData,\r\n        ethAddress: ethData[0].address,\r\n      }))\r\n\r\n      /* hide my orders */\r\n      // disable for now TODO\r\n      // actions.core.hideMyOrders()\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n      actions.notifications.show(constants.notifications.ErrorNotification, {\r\n        error: 'Sorry, but this order do not exsit already'\r\n      })\r\n      this.props.history.push(localisedUrl(links.exchange))\r\n    }\r\n\r\n    if (!this.props.savedOrders.includes(orderId)) {\r\n      this.setSaveSwapId(orderId)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { swap } = this.state\r\n    const { flow } = swap\r\n    const { step } = flow.state\r\n\r\n    const { match: { params: { orderId } }, savedOrders } = this.props\r\n\r\n    if (step >= 4 && !savedOrders.includes(orderId)) {\r\n      this.saveThisSwap(orderId)\r\n    }\r\n\r\n    if (swap !== null) {\r\n      console.log('checkingCycle')\r\n      this.sendDebugInfoTimer = setInterval(() => {\r\n        this.sendSwapDebugInformation(orderId)\r\n      }, 1000)\r\n\r\n      const checkingCycle = setInterval(() => {\r\n        const isFinallyFinished = this.checkIsFinished()\r\n        const isStoppedSwap = this.checkStoppedSwap()\r\n\r\n        if (isFinallyFinished) {\r\n          feedback.swap.finished()\r\n        }\r\n        if (isStoppedSwap) {\r\n          feedback.swap.stopped()\r\n        }\r\n\r\n        if (isFinallyFinished || isStoppedSwap) {\r\n          clearInterval(checkingCycle)\r\n          return\r\n        }\r\n\r\n        this.checkEnoughFee()\r\n        this.requestingWithdrawFee()\r\n        this.isBalanceEnough()\r\n        this.checkFailSwap()\r\n        this.checkOtherSideRefund()\r\n      }, 5000)\r\n\r\n      const checkingConfirmSuccess = setTimeout(() => {\r\n        if (!this.checkIsConfirmed()) {\r\n          window.location.reload()\r\n        }\r\n      }, 30000)\r\n\r\n      this.checkingConfirmSuccessTimer = checkingConfirmSuccess\r\n      this.checkingCycleTimer = checkingCycle\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.checkingCycleTimer)\r\n    clearTimeout(this.checkingConfirmSuccessTimer)\r\n    clearInterval(this.sendDebugInfoTimer)\r\n  }\r\n\r\n  checkStoppedSwap = () => {\r\n    const { swap: { id, flow: { state: { isStoppedSwap } } } } = this.state\r\n\r\n    if (!isStoppedSwap) {\r\n      return false\r\n    }\r\n\r\n    this.deleteThisSwap(id)\r\n\r\n    this.setState(() => ({\r\n      isSwapCancelled: true,\r\n    }))\r\n\r\n    return true\r\n  }\r\n\r\n  checkIsConfirmed = () => {\r\n    const { swap: { flow: { state: { step } } } } = this.state\r\n    return !(step === 1)\r\n  }\r\n\r\n  checkIsFinished = () => {\r\n    const { swap: { id, flow: { state: { isFinished, step, isRefunded } } } } = this.state\r\n\r\n    if (isFinished || step > 7 || isRefunded) {\r\n      this.deleteThisSwap(id)\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  saveThisSwap = (orderId) => {\r\n    actions.core.rememberOrder(orderId)\r\n  }\r\n\r\n  deleteThisSwap = (orderId) => {\r\n    actions.core.saveDeletedOrder(orderId)\r\n    actions.core.forgetOrders(orderId)\r\n  }\r\n\r\n  setSaveSwapId = (orderId) => {\r\n    let swapsId = JSON.parse(localStorage.getItem('swapId'))\r\n\r\n    if (swapsId === null || swapsId.length === 0) {\r\n      swapsId = []\r\n    }\r\n    if (!swapsId.includes(orderId)) {\r\n      swapsId.push(orderId)\r\n    }\r\n    localStorage.setItem('swapId', JSON.stringify(swapsId))\r\n  }\r\n\r\n  isBalanceEnough = () => {\r\n    const { swap } = this.state\r\n    const { flow, sellCurrency } = swap\r\n    const { step, balance, isBalanceEnough } = flow.state\r\n\r\n    const isSellCurrencyEthOrEthToken = helpers.ethToken.isEthOrEthToken({ name: sellCurrency })\r\n    const stepForCheckBalance = isSellCurrencyEthOrEthToken\r\n      ? 4\r\n      : 3\r\n\r\n    if (!isBalanceEnough && step === stepForCheckBalance) {\r\n      this.setState(() => ({ enoughBalance: false }))\r\n    } else {\r\n      this.setState(() => ({ enoughBalance: true }))\r\n    }\r\n  }\r\n\r\n  requestingWithdrawFee = () => {\r\n    const {\r\n      swap: {\r\n        flow: {\r\n          state: {\r\n            requireWithdrawFee,\r\n            requireWithdrawFeeSended,\r\n            withdrawRequestIncoming,\r\n            withdrawRequestAccepted,\r\n          },\r\n        },\r\n      },\r\n    } = this.state\r\n\r\n    if (requireWithdrawFee && !requireWithdrawFeeSended) {\r\n      if (this.state.swap && this.state.swap.flow) {\r\n        this.state.swap.flow.sendWithdrawRequest()\r\n        this.setState({\r\n          waitWithdrawOther: true,\r\n        })\r\n        window.setTimeout(() => {\r\n          this.setState({\r\n            waitWithdrawOther: false,\r\n          })\r\n        }, 1000 * 60 * 2)\r\n      }\r\n    }\r\n\r\n    if (withdrawRequestIncoming && !withdrawRequestAccepted) {\r\n      if (this.state.swap && this.state.swap.flow) {\r\n        this.state.swap.flow.acceptWithdrawRequest()\r\n      }\r\n    }\r\n  }\r\n\r\n  sendRequestToFaucet = () => {\r\n    const {\r\n      swap: {\r\n        owner,\r\n        buyCurrency,\r\n        buyAmount,\r\n        sellCurrency,\r\n        sellAmount,\r\n      },\r\n      isFaucetRequested,\r\n      continueSwap,\r\n    } = this.state\r\n\r\n    if (isFaucetRequested) {\r\n      return\r\n    }\r\n\r\n    this.setState(() => ({\r\n      isFaucetRequested: true,\r\n    }))\r\n\r\n    apiLooper.post('faucet', '', {\r\n      body: {\r\n        eth: this.state.ethAddress,\r\n        buyCurrency,\r\n        buyAmount: buyAmount.toString(),\r\n        sellCurrency,\r\n        sellAmount: sellAmount.toString(),\r\n      },\r\n    }).then((rv: any) => {\r\n      console.info('faucet answered', rv.txid)\r\n      this.setState(() => ({\r\n        continueSwap: true,\r\n      }))\r\n    }).catch((error) => {\r\n      console.warn('faucet error:', error)\r\n      this.setState(() => ({\r\n        continueSwap: false,\r\n      }))\r\n    })\r\n  }\r\n\r\n  checkOtherSideRefund = async () => {\r\n    const {\r\n      swap: {\r\n        flow,\r\n      },\r\n    } = this.state\r\n\r\n    if (typeof flow.checkOtherSideRefund === 'function') {\r\n      const isOtherSideRefunded = await flow.checkOtherSideRefund()\r\n      if (isOtherSideRefunded) {\r\n        this.setState(() => ({\r\n          otherSideRefunded: true,\r\n        }))\r\n      }\r\n    }\r\n  }\r\n\r\n  checkFailSwap = () => {\r\n    const {\r\n      swap: {\r\n        flow: {\r\n          state: {\r\n            isFailedTransaction,\r\n          },\r\n        },\r\n      },\r\n      continueSwap,\r\n    } = this.state\r\n\r\n    if (!isFailedTransaction) {\r\n      return\r\n    }\r\n\r\n    this.setState(() => ({\r\n      continueSwap: false,\r\n    }))\r\n  }\r\n\r\n  checkEnoughFee = () => {\r\n    const {\r\n      swap: {\r\n        participantSwap,\r\n        flow: {\r\n          state: {\r\n            canCreateEthTransaction,\r\n          },\r\n        },\r\n      },\r\n      currencyData: {\r\n        currency,\r\n      },\r\n    } = this.state\r\n\r\n    if (canCreateEthTransaction === false &&\r\n      helpers.ethToken.isEthOrEthToken({ name: currency })\r\n    ) {\r\n      this.sendRequestToFaucet()\r\n    } else {\r\n      this.setState(() => ({\r\n        continueSwap: true,\r\n      }))\r\n    }\r\n  }\r\n\r\n  toggleDebug = () => {\r\n    const isShowDebug = this.state.isShowDebug;\r\n    this.setState({\r\n      isShowDebug: !isShowDebug,\r\n    })\r\n  }\r\n\r\n  goWallet = () => {\r\n    const { intl: { locale } } = this.props\r\n    this.props.history.push(localisedUrl(locale, '/'))\r\n  }\r\n\r\n  handleCopyAddress = (e) => {\r\n    this.setState({\r\n      isAddressCopied: true,\r\n    }, () => {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isAddressCopied: false,\r\n        })\r\n      }, 500)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { peer, tokenItems, history, intl: { locale } } = this.props\r\n    const {\r\n      swap,\r\n      SwapComponent,\r\n      currencyData,\r\n      isAmountMore,\r\n      ethData,\r\n      continueSwap,\r\n      enoughBalance,\r\n      depositWindow,\r\n      ethAddress,\r\n      isShowDebug,\r\n      requestToFaucetSended,\r\n      isAddressCopied,\r\n      waitWithdrawOther,\r\n      isSwapCancelled,\r\n    } = this.state\r\n\r\n    if (!swap || !SwapComponent || !peer || !isAmountMore) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {!isSwapCancelled ?\r\n          <div styleName={`${isMobile ? 'swap swapMobile' : 'swap'} ${isDark ? 'dark' : ''}`}>\r\n            <SwapComponent\r\n              tokenItems={tokenItems}\r\n              depositWindow={depositWindow}\r\n              disabledTimer={isAmountMore === 'enable'}\r\n              history={history}\r\n              swap={swap}\r\n              ethAddress={ethAddress}\r\n              currencyData={currencyData}\r\n              styles={styles}\r\n              enoughBalance={enoughBalance}\r\n              ethData={ethData}\r\n              continueSwap={continueSwap}\r\n              requestToFaucetSended={requestToFaucetSended}\r\n              waitWithdrawOther={waitWithdrawOther}\r\n              locale={locale}\r\n              wallets={this.wallets}\r\n            />\r\n            <div>\r\n              <p styleName=\"reloadText\" role=\"presentation\">\r\n                <FormattedMessage\r\n                  id=\"SwapStuck\"\r\n                  defaultMessage=\"The swap was stuck? Try to \"\r\n                />\r\n                <span styleName=\"pseudolink\" onClick={() => this.toggleDebug()}>\r\n                  <FormattedMessage\r\n                    id=\"SwapDebug\"\r\n                    defaultMessage=\"debug\"\r\n                  />\r\n                </span>\r\n                <FormattedMessage\r\n                  id=\"SwapOr\"\r\n                  defaultMessage=\" or \"\r\n                />\r\n                <span styleName=\"pseudolink\" onClick={() => window.location.reload()}>\r\n                  <FormattedMessage\r\n                    id=\"SwapReload\"\r\n                    defaultMessage=\"reload the page\"\r\n                  />\r\n                </span>\r\n\r\n              </p>\r\n\r\n              {isShowDebug &&\r\n                <Debug flow={swap.flow} />\r\n              }\r\n\r\n              {peer === swap.owner.peer &&\r\n                <DeleteSwapAfterEnd swap={swap} />\r\n              }\r\n            </div>\r\n          </div>\r\n          :\r\n          <div>\r\n            <h3 styleName=\"canceled\" onClick={this.goWallet}>\r\n              <FormattedMessage id=\"swappropgress327\" defaultMessage=\"This swap is canceled\" />\r\n            </h3>\r\n            <div>\r\n              <h3 styleName=\"refHex\">\r\n                <FormattedMessage\r\n                  id=\"swappropgress400\"\r\n                  defaultMessage=\"Refund is taking automatically\"\r\n                />\r\n              </h3>\r\n            </div>\r\n          </div>\r\n        }\r\n      </Fragment>\r\n    )\r\n  }\r\n}"]}]}