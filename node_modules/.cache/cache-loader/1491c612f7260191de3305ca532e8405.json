{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\RegisterSMSProtected\\RegisterSMSProtected.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\RegisterSMSProtected\\RegisterSMSProtected.tsx","mtime":1614842914018},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/RegisterSMSProtected/RegisterSMSProtected.tsx"],"names":["React","Fragment","PropTypes","constants","actions","Link","connect","cssModules","styles","ownStyle","isValidPhoneNumber","Modal","FieldLabel","Input","PhoneInput","Button","FormattedMessage","injectIntl","defineMessages","CopyToClipboard","moment","okSvg","RegisterSMSProtected","user","btcData","btcMultisigSMSData","allowMultiple","props","state","version","phone","mnemonic","generatedKey","useGeneratedKey","useGeneratedKeyEnabled","btc","validateMnemonicWords","trim","setState","isMnemonicValid","error","mnemonicWallet","getWalletByWords","isShipped","btcmultisig","beginRegisterSMS","result","answer","step","console","log","smsServerOffline","smsCode","isWalletLockedOtherPhone","confirmRegisterSMS","generateRestoreInstruction","addSMSWallet","isMnemonicCopied","setTimeout","isInstructionCopied","restoreInstruction","isInstructionDownloaded","element","document","createElement","message","setAttribute","encodeURIComponent","window","location","hostname","format","style","display","body","appendChild","click","removeChild","isMnemonicGenerated","getRandomMnemonicWords","name","enableWalletSMS","modals","close","data","callback","open","Share","title","link","SaveMnemonicModal","onClose","localStorage","getItem","privateKeyNames","twentywords","mnemonicSaved","initStep","btcSmsMnemonicKeyGenerated","showFinalInstruction","DefaultCountryCode","smsConfirmed","intl","linked","all","langs","registerSMSModal","id","defaultMessage","mnemonicPlaceholder","phonePlaceHolder","smsPlaceHolder","needSaveMnemonicToContinue","pleaseSaveMnemonicToContinue","buttonSaveMnemonic","buttonCancel","sentBtnDisabled","formatMessage","__html","handleBeginSaveMnemonic","handleClose","locale","onPhoneChange","handleGenerateMnemonic","handleCopyMnemonic","handleRestoreWallet","handleSendSMS","handleCheckSMS","fontSize","textAlign","marginBottom","handleCopyInstruction","handleDownloadInstruction","handleShareInstruction","handleFinish","Component","string","object"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from '../Styles/default.scss'\r\nimport ownStyle from './RegisterSMSProtected.scss'\r\n\r\nimport { isValidPhoneNumber } from 'react-phone-number-input'\r\n\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport { PhoneInput } from 'components/forms/PhoneInput'\r\nimport Button from 'components/controls/Button/Button'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\n\r\nimport typeforce from 'swap.app/util/typeforce'\r\n// import { isCoinAddress } from 'swap.app/util/typeforce'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport moment from 'moment/moment'\r\nimport okSvg from 'shared/images/ok.svg'\r\n\r\n@injectIntl\r\n@connect(({ user: { btcData, btcMultisigSMSData } }) => ({\r\n  btcData,\r\n  btcMultisigSMSData,\r\n}))\r\n@cssModules({ ...styles, ...ownStyle }, { allowMultiple: true })\r\nexport default class RegisterSMSProtected extends React.Component<any, any> {\r\n  props: any\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    data: PropTypes.object,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    let {\r\n      data: { version, initStep },\r\n    } = props\r\n\r\n    version = version ? version : '2of3' // 2of2\r\n\r\n    const generatedKey = localStorage.getItem(constants.privateKeyNames.btcSmsMnemonicKeyGenerated)\r\n\r\n    const mnemonic = localStorage.getItem(constants.privateKeyNames.twentywords)\r\n    const mnemonicSaved = mnemonic === `-`\r\n    const useGeneratedKeyEnabled = !!generatedKey\r\n\r\n    let step = 'enterPhoneAndMnemonic' // \"enterPhone\",\r\n    if (useGeneratedKeyEnabled && !mnemonicSaved) step = 'saveMnemonicWords'\r\n\r\n    let showFinalInstruction = false\r\n    if (initStep === 'export') {\r\n      showFinalInstruction = true\r\n      step = 'ready'\r\n    }\r\n\r\n    this.state = {\r\n      version,\r\n      phone: window.DefaultCountryCode || '',\r\n      step,\r\n      error: false,\r\n      smsCode: '',\r\n      smsConfirmed: false,\r\n      isShipped: false,\r\n      showFinalInstruction,\r\n      useGeneratedKey: useGeneratedKeyEnabled,\r\n      generatedKey,\r\n      useGeneratedKeyEnabled,\r\n      mnemonicSaved,\r\n      mnemonic: version === '2of3' ? actions.btc.getRandomMnemonicWords() : false,\r\n      mnemonicWallet: false,\r\n      isMnemonicCopied: false,\r\n      isMnemonicGenerated: false,\r\n      isMnemonicValid: true,\r\n      isWalletLockedOtherPhone: false,\r\n      isInstructionCopied: false,\r\n      isInstructionDownloaded: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateRestoreInstruction()\r\n  }\r\n\r\n  handleSendSMS = async () => {\r\n    const {\r\n      version,\r\n      phone,\r\n      mnemonic,\r\n      generatedKey,\r\n      useGeneratedKey,\r\n      useGeneratedKeyEnabled,\r\n    } = this.state\r\n\r\n    if (!useGeneratedKey) {\r\n      // Old - own mnemonic for unlock\r\n      if (version === '2of3' && !actions.btc.validateMnemonicWords(mnemonic.trim())) {\r\n        this.setState({\r\n          isMnemonicValid: false,\r\n          error: false,\r\n        })\r\n        return\r\n      } else {\r\n        const mnemonicWallet = actions.btc.getWalletByWords(mnemonic.trim(), 1)\r\n        this.setState({\r\n          mnemonicWallet,\r\n          isMnemonicValid: true,\r\n        })\r\n      }\r\n    }\r\n\r\n    if (!phone) {\r\n      this.setState({\r\n        error: (\r\n          <FormattedMessage\r\n            id=\"registerSMS_NotValidPhone\"\r\n            defaultMessage=\"Укажите номер телефона\"\r\n          />\r\n        ),\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      isShipped: true,\r\n      error: false,\r\n    })\r\n\r\n    const result = await actions.btcmultisig.beginRegisterSMS(\r\n      phone,\r\n      mnemonic ? mnemonic.trim() : false,\r\n      useGeneratedKey && useGeneratedKeyEnabled ? generatedKey : false\r\n    )\r\n\r\n    if (result && result.answer && result.answer == 'ok') {\r\n      this.setState({\r\n        isShipped: false,\r\n        step: 'enterCode',\r\n      })\r\n    } else {\r\n      console.log('One step set', result)\r\n      const smsServerOffline = result === false\r\n      this.setState({\r\n        isShipped: false,\r\n        error: result && result.error ? result.error : 'Unknown error',\r\n        smsServerOffline,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleCheckSMS = async () => {\r\n    const {\r\n      phone,\r\n      smsCode,\r\n      mnemonic,\r\n      useGeneratedKey,\r\n      useGeneratedKeyEnabled,\r\n      generatedKey,\r\n    } = this.state\r\n\r\n    if (!smsCode) {\r\n      this.setState({\r\n        error: (\r\n          <FormattedMessage\r\n            id=\"RegisterSMSProtected_SmsCodeRequery\"\r\n            defaultMessage=\"Введите смс-код\"\r\n          />\r\n        ),\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      isShipped: true,\r\n      error: false,\r\n      smsServerOffline: false,\r\n      isWalletLockedOtherPhone: false,\r\n    })\r\n\r\n    const result = await actions.btcmultisig.confirmRegisterSMS(\r\n      phone,\r\n      smsCode,\r\n      mnemonic ? mnemonic.trim() : false,\r\n      useGeneratedKey && useGeneratedKeyEnabled ? generatedKey : false\r\n    )\r\n\r\n    if (result && result.answer && result.answer == 'ok') {\r\n      this.generateRestoreInstruction()\r\n      this.setState({\r\n        isShipped: false,\r\n        step: 'ready',\r\n      })\r\n    } else {\r\n      if (result && result.error == 'Already registered') {\r\n        this.generateRestoreInstruction()\r\n        this.setState({\r\n          isShipped: false,\r\n          step: 'ready',\r\n        })\r\n      } else {\r\n        if (result && result.error == 'This wallet already locked by other phone number') {\r\n          // Кошелек зарегистрирован на другой номер телефона\r\n          // Может быть так, что человек потерял телефон или забыл его\r\n          // Даем возможность подключить кошелек, чтобы если у клиента есть\r\n          // валидный mnemonic - он мог разблокировать средства\r\n          this.setState({\r\n            isShipped: false,\r\n            isWalletLockedOtherPhone: true,\r\n          })\r\n        } else {\r\n          const smsServerOffline = result === false\r\n          this.setState({\r\n            isShipped: false,\r\n            smsServerOffline,\r\n            error: result && result.error ? result.error : 'Unknown error',\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  handleRestoreWallet = async () => {\r\n    const { mnemonic } = this.state\r\n\r\n    if (!mnemonic || !actions.btc.validateMnemonicWords(mnemonic.trim())) {\r\n      this.setState({\r\n        isMnemonicValid: false,\r\n        error: false,\r\n      })\r\n      return\r\n    } else {\r\n      const mnemonicWallet = actions.btc.getWalletByWords(mnemonic.trim(), 1)\r\n      this.setState({\r\n        mnemonicWallet,\r\n        isShipped: true,\r\n        isMnemonicValid: true,\r\n      })\r\n    }\r\n\r\n    await actions.btcmultisig.addSMSWallet(mnemonic.trim())\r\n\r\n    this.generateRestoreInstruction()\r\n\r\n    this.setState({\r\n      isShipped: false,\r\n      step: 'ready',\r\n    })\r\n  }\r\n\r\n  handleCopyMnemonic = async () => {\r\n    this.setState(\r\n      {\r\n        isMnemonicCopied: true,\r\n      },\r\n      () => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isMnemonicCopied: false,\r\n          })\r\n        }, 1000)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleCopyInstruction = async () => {\r\n    this.setState(\r\n      {\r\n        isInstructionCopied: true,\r\n      },\r\n      () => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isInstructionCopied: false,\r\n          })\r\n        }, 1000)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleDownloadInstruction = async () => {\r\n    const { restoreInstruction } = this.state\r\n\r\n    this.setState(\r\n      {\r\n        isInstructionDownloaded: true,\r\n      },\r\n      () => {\r\n        const element = document.createElement('a')\r\n        const message = 'Check your browser downloads'\r\n\r\n        element.setAttribute(\r\n          'href',\r\n          `data:text/plaincharset=utf-8,${encodeURIComponent(restoreInstruction)}`\r\n        )\r\n        element.setAttribute(\r\n          'download',\r\n          `${window.location.hostname}_btc_sms_protected_keys_${moment().format('DD.MM.YYYY')}.txt`\r\n        )\r\n\r\n        element.style.display = 'none'\r\n        document.body.appendChild(element)\r\n        element.click()\r\n        document.body.removeChild(element)\r\n\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isInstructionDownloaded: false,\r\n          })\r\n        }, 1000)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleGenerateMnemonic = async () => {\r\n    this.setState(\r\n      {\r\n        isMnemonicGenerated: true,\r\n        isMnemonicValid: true,\r\n        mnemonic: actions.btc.getRandomMnemonicWords(),\r\n      },\r\n      () => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isMnemonicGenerated: false,\r\n          })\r\n        }, 1000)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleFinish = async () => {\r\n    const { name } = this.props\r\n\r\n    actions.btcmultisig.enableWalletSMS()\r\n    actions.modals.close(name)\r\n    if (this.props.data.callback) {\r\n      this.props.data.callback()\r\n    }\r\n  }\r\n\r\n  handleShareInstruction = async () => {\r\n    const { restoreInstruction } = this.state\r\n\r\n    actions.modals.open(constants.modals.Share, {\r\n      title: `BTC Sms-protected wallet restory instruction`,\r\n      link: restoreInstruction,\r\n    })\r\n  }\r\n\r\n  handleBeginSaveMnemonic = async () => {\r\n    actions.modals.open(constants.modals.SaveMnemonicModal, {\r\n      onClose: () => {\r\n        const mnemonic = localStorage.getItem(constants.privateKeyNames.twentywords)\r\n        const mnemonicSaved = mnemonic === `-`\r\n        const step = mnemonicSaved ? 'enterPhoneAndMnemonic' : 'saveMnemonicWords'\r\n\r\n        this.setState({\r\n          mnemonicSaved,\r\n          step,\r\n        })\r\n      },\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { name, data, onClose } = this.props\r\n\r\n    if (typeof onClose === 'function') {\r\n      onClose()\r\n    }\r\n\r\n    if (typeof data.onClose === 'function') {\r\n      data.onClose()\r\n    }\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  generateRestoreInstruction = () => {\r\n    // @ToDo - temp comment - find error, fix, and uncomment\r\n    /*\r\n    const { mnemonic, mnemonicWallet, useGeneratedKey } = this.state\r\n\r\n    const { btcData, btcMultisigSMSData } = this.props\r\n\r\n    let restoreInstruction = ''\r\n\r\n    restoreInstruction = `Wallet address:\\r\\n`\r\n    restoreInstruction += `${btcMultisigSMSData.address}\\r\\n`\r\n    restoreInstruction += `To withdraw funds create transaction using this code https://github.com/bitcoinjs/bitcoinjs-lib/blob/master/test/integration/transactions.spec.ts#L193\\r\\n`\r\n    restoreInstruction += `\\r\\n`\r\n    restoreInstruction += `Public keys for create Multisig (2of3) wallet:\\r\\n`\r\n    if (btcMultisigSMSData.publicKeys[0])\r\n      restoreInstruction += `${btcMultisigSMSData.publicKeys[0].toString('Hex')}\\r\\n`\r\n    if (btcMultisigSMSData.publicKeys[1])\r\n      restoreInstruction += `${btcMultisigSMSData.publicKeys[1].toString('Hex')}\\r\\n`\r\n    if (btcMultisigSMSData.publicKeys[2])\r\n      restoreInstruction += `${btcMultisigSMSData.publicKeys[2].toString('Hex')}\\r\\n`\r\n    restoreInstruction += `\\r\\n`\r\n    restoreInstruction += `Hot wallet private key (WIF) (first of three for sign tx):\\r\\n`\r\n    restoreInstruction += `Wallet delivery path from your secret phrase:\\r\\n`\r\n    restoreInstruction += `m/44'/0'/0'/0/0\\r\\n`\r\n    restoreInstruction += `${btcData.privateKey}\\r\\n`\r\n    restoreInstruction += `*** (this private key stored in your browser)\\r\\n`\r\n    restoreInstruction += `\\r\\n`\r\n    if (!useGeneratedKey) {\r\n      restoreInstruction += `Secret mnemonic:\\r\\n`\r\n      restoreInstruction += `${mnemonic}\\r\\n`\r\n      restoreInstruction += `Wallet delivery path for mnemonic:\\r\\n`\r\n      restoreInstruction += `m/44'/0'/0'/0/0\\r\\n`\r\n      restoreInstruction += `Private key (WIF) of wallet, generated from mnemonic:\\r\\n`\r\n      restoreInstruction += `(DELETE THIS LINE!) ${mnemonicWallet.WIF}\\r\\n`\r\n      restoreInstruction += `*** (this private key does not stored anywhere! but in case if our  2fa server does down, you can withdraw your fond using this private key)\\r\\n`\r\n    } else {\r\n      restoreInstruction += `Second of three for sign tx:\\r\\n`\r\n      restoreInstruction += `Wallet delivery path from your secret phrase:\\r\\n`\r\n      restoreInstruction += `m/44'/0'/0'/0/1\\r\\n`\r\n      restoreInstruction += `\\r\\n`\r\n    }\r\n    restoreInstruction += `If our service is unavailable, use a local copy of the wallet.\\r\\n`\r\n    restoreInstruction += `https://swaponline.github.io/2fa_wallet.zip\\r\\n`\r\n\r\n    this.setState({\r\n      restoreInstruction,\r\n    })\r\n    */\r\n  }\r\n\r\n  onPhoneChange = (phone) => {\r\n    this.setState(() => ({ phone }))\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      step,\r\n      error,\r\n      phone,\r\n      isShipped,\r\n      // useGeneratedKey,\r\n      useGeneratedKeyEnabled,\r\n      mnemonic,\r\n      isMnemonicCopied,\r\n      isMnemonicGenerated,\r\n      isMnemonicValid,\r\n      smsServerOffline,\r\n      isWalletLockedOtherPhone,\r\n      isInstructionCopied,\r\n      isInstructionDownloaded,\r\n      restoreInstruction,\r\n      showFinalInstruction,\r\n    } = this.state\r\n\r\n    const { name, intl } = this.props\r\n\r\n    const linked = Link.all(this, 'smsCode', 'mnemonic')\r\n\r\n    const langs = defineMessages({\r\n      registerSMSModal: {\r\n        id: 'registerSMSProtectedTitle',\r\n        defaultMessage: `Activate SMS Protected Wallet`,\r\n      },\r\n      mnemonicPlaceholder: {\r\n        id: 'registerSMSMPlaceHolder',\r\n        defaultMessage: `12 слов`,\r\n      },\r\n      phonePlaceHolder: {\r\n        id: 'registerSMSModalPhonePlaceholder',\r\n        defaultMessage: `Enter your phone`,\r\n      },\r\n      smsPlaceHolder: {\r\n        id: 'registerSMSModalSmsCodePlaceholder',\r\n        defaultMessage: `Enter code from SMS`,\r\n      },\r\n      needSaveMnemonicToContinue: {\r\n        id: 'registerSMS_YouNeedSaveMnemonic',\r\n        defaultMessage: `Для активации 2fa вы должны сохранить 12 слов.`,\r\n      },\r\n      pleaseSaveMnemonicToContinue: {\r\n        id: 'registerSMS_SaveYourMnemonic',\r\n        defaultMessage: `Пожалуйста сохраните свою секретную фразу.`,\r\n      },\r\n      buttonSaveMnemonic: {\r\n        id: 'registerSMS_ButtonSaveMnemonic',\r\n        defaultMessage: `Save`,\r\n      },\r\n      buttonCancel: {\r\n        id: 'registerSMS_ButtonCancel',\r\n        defaultMessage: `Cancel`,\r\n      },\r\n    })\r\n\r\n    const sentBtnDisabled = isShipped || !phone || (phone && !isValidPhoneNumber(phone))\r\n    return (\r\n      <Modal name={name} title={`${intl.formatMessage(langs.registerSMSModal)}`}>\r\n        <div styleName=\"registerSMSModalHolder\">\r\n          <style\r\n            dangerouslySetInnerHTML={{\r\n              __html: `\r\n            .PhoneInputCountryIcon {\r\n              width: 26px !important;\r\n            }\r\n          `,\r\n            }}\r\n          />\r\n          {step === 'saveMnemonicWords' && (\r\n            <Fragment>\r\n              <div styleName=\"content-overlay\">\r\n                <p styleName=\"centerInfoBlock\">\r\n                  <strong>\r\n                    <FormattedMessage {...langs.needSaveMnemonicToContinue} />\r\n                  </strong>\r\n                  <br />\r\n                  <FormattedMessage {...langs.pleaseSaveMnemonicToContinue} />\r\n                </p>\r\n              </div>\r\n\r\n              <div styleName=\"buttonsHolder buttonsHolder_2_buttons button-overlay\">\r\n                <Button blue onClick={this.handleBeginSaveMnemonic}>\r\n                  <FormattedMessage {...langs.buttonSaveMnemonic} />\r\n                </Button>\r\n                <Button gray onClick={this.handleClose}>\r\n                  <FormattedMessage {...langs.buttonCancel} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {step === 'enterPhoneAndMnemonic' && (\r\n            <Fragment>\r\n              <PhoneInput\r\n                value={phone}\r\n                error={error}\r\n                locale={intl.locale}\r\n                onChange={this.onPhoneChange}\r\n                placeholder={`${intl.formatMessage(langs.phonePlaceHolder)}`}\r\n                label={\r\n                  <FieldLabel>\r\n                    <FormattedMessage id=\"registerSMSModalPhone\" defaultMessage=\"Your phone:\" />\r\n                  </FieldLabel>\r\n                }\r\n              />\r\n              {!useGeneratedKeyEnabled && (\r\n                <Fragment>\r\n                  <div styleName=\"highLevel\">\r\n                    <div styleName=\"infoCaption\">\r\n                      <FormattedMessage\r\n                        id=\"registerSMSWordsInfoBlock\"\r\n                        defaultMessage=\"Сгенерируйте секретную фразу или укажите ранее сохраненную для восстановления старого кошелька\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div styleName=\"highLevel\" className=\"ym-hide-content\">\r\n                    <FieldLabel>\r\n                      <FormattedMessage\r\n                        id=\"registerSMSModalWords\"\r\n                        defaultMessage=\"Секретная фраза (12 слов):\"\r\n                      />\r\n                    </FieldLabel>\r\n\r\n                    <div styleName=\"mnemonicButtonsHolder\">\r\n                      <Button\r\n                        blue\r\n                        fullWidth\r\n                        disabled={isMnemonicGenerated}\r\n                        onClick={this.handleGenerateMnemonic}\r\n                      >\r\n                        {isMnemonicGenerated ? (\r\n                          <FormattedMessage\r\n                            id=\"registerSMSModalMnemonicGenerateNewGenerated\"\r\n                            defaultMessage=\"Создана\"\r\n                          />\r\n                        ) : (\r\n                          <FormattedMessage\r\n                            id=\"registerSMSModalMnemonicGenerateNew\"\r\n                            defaultMessage=\"Создать новую\"\r\n                          />\r\n                        )}\r\n                      </Button>\r\n                      <CopyToClipboard text={mnemonic} onCopy={this.handleCopyMnemonic}>\r\n                        <Button\r\n                          blue\r\n                          fullWidth\r\n                          disabled={isMnemonicCopied}\r\n                          onClick={this.handleCopyMnemonic}\r\n                        >\r\n                          {isMnemonicCopied ? (\r\n                            <FormattedMessage\r\n                              id=\"registerSMSModalMnemonicCopied\"\r\n                              defaultMessage=\"Фраза скопирована\"\r\n                            />\r\n                          ) : (\r\n                            <FormattedMessage\r\n                              id=\"registerSMSModalMnemonicCopy\"\r\n                              defaultMessage=\"Скопировать\"\r\n                            />\r\n                          )}\r\n                        </Button>\r\n                      </CopyToClipboard>\r\n                    </div>\r\n                    <div styleName=\"notice mnemonicNotice\">\r\n                      <FormattedMessage\r\n                        id=\"registerSMSMnemonicNotice\"\r\n                        defaultMessage=\"Она поможет разблокировать средства на кошельке, если сервер 2fa будет не доступен\"\r\n                      />\r\n                    </div>\r\n                    {!isMnemonicValid && (\r\n                      <div styleName=\"rednotes mnemonicNotice\">\r\n                        <FormattedMessage\r\n                          id=\"registerSMSMnemonicError\"\r\n                          defaultMessage=\"Вы указали не валидный набор слов\"\r\n                        />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n              <div>\r\n                {smsServerOffline ? (\r\n                  <Fragment>\r\n                    <Button blue fullWidth disabled={isShipped} onClick={this.handleRestoreWallet}>\r\n                      <FormattedMessage\r\n                        id=\"registerSMSAddOffline\"\r\n                        defaultMessage=\"Восстановить кошелек\"\r\n                      />\r\n                    </Button>\r\n                    <hr />\r\n                  </Fragment>\r\n                ) : (\r\n                  <Fragment>\r\n                    {error && <div styleName=\"rednotes mnemonicNotice\">{error}</div>}\r\n                  </Fragment>\r\n                )}\r\n              </div>\r\n              <Button blue big fullWidth disabled={sentBtnDisabled} onClick={this.handleSendSMS}>\r\n                {isShipped ? (\r\n                  <Fragment>\r\n                    <FormattedMessage\r\n                      id=\"registerSMSModalProcess\"\r\n                      defaultMessage=\"Processing ...\"\r\n                    />\r\n                  </Fragment>\r\n                ) : (\r\n                  <Fragment>\r\n                    <FormattedMessage id=\"registerSMSModalSendSMS\" defaultMessage=\"Send SMS\" />\r\n                  </Fragment>\r\n                )}\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n          {step === 'enterPhone' && (\r\n            <Fragment>\r\n              <PhoneInput\r\n                value={phone}\r\n                error={error}\r\n                locale={intl.locale}\r\n                onChange={this.onPhoneChange}\r\n                placeholder={`${intl.formatMessage(langs.phonePlaceHolder)}`}\r\n                label={\r\n                  <FieldLabel>\r\n                    <FormattedMessage id=\"registerSMSModalPhone\" defaultMessage=\"Your phone:\" />\r\n                  </FieldLabel>\r\n                }\r\n              />\r\n              <Button blue big fullWidth disabled={sentBtnDisabled} onClick={this.handleSendSMS}>\r\n                {isShipped ? (\r\n                  <Fragment>\r\n                    <FormattedMessage\r\n                      id=\"registerSMSModalProcess\"\r\n                      defaultMessage=\"Processing ...\"\r\n                    />\r\n                  </Fragment>\r\n                ) : (\r\n                  <Fragment>\r\n                    <FormattedMessage id=\"registerSMSModalSendSMS\" defaultMessage=\"Send SMS\" />\r\n                  </Fragment>\r\n                )}\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n          {step === 'enterCode' && (\r\n            <Fragment>\r\n              {error && <div styleName=\"rednotes smsInfoBlock\">{error}</div>}\r\n              {isWalletLockedOtherPhone && (\r\n                <div styleName=\"rednotes smsInfoBlock\">\r\n                  <FormattedMessage\r\n                    id=\"registerSMS_WalletLocked\"\r\n                    defaultMessage=\"Этот счет привязан к другому номеру телефона\"\r\n                  />\r\n                </div>\r\n              )}\r\n              {smsServerOffline && (\r\n                <div styleName=\"rednotes smsInfoBlock\">\r\n                  <FormattedMessage\r\n                    id=\"registerSMS_ConfigServerOffline\"\r\n                    defaultMessage=\"Сервер авторизации не доступен. Попробуйте позже или используйте секретную фраза для разблокировки счета\"\r\n                  />\r\n                </div>\r\n              )}\r\n              <div styleName=\"highLevel smsCodeHolder\">\r\n                <FieldLabel>\r\n                  <FormattedMessage\r\n                    id=\"registerSMSModalCode\"\r\n                    defaultMessage=\"Enter code from SMS:\"\r\n                  />\r\n                </FieldLabel>\r\n                <Input\r\n                  styleName=\"input inputMargin25\"\r\n                  valueLink={linked.smsCode}\r\n                  focusOnInit\r\n                  placeholder={`${intl.formatMessage(langs.smsPlaceHolder)}`}\r\n                />\r\n              </div>\r\n              <Button\r\n                styleName=\"confirmSmsCode\"\r\n                big\r\n                blue\r\n                fullWidth\r\n                disabled={isShipped}\r\n                onClick={this.handleCheckSMS}\r\n              >\r\n                {isShipped ? (\r\n                  <FormattedMessage id=\"registerSMSModalProcess\" defaultMessage=\"Processing ...\" />\r\n                ) : (\r\n                  <FormattedMessage id=\"registerSMSModalSendSMS165\" defaultMessage=\"Confirm\" />\r\n                )}\r\n              </Button>\r\n              <hr />\r\n              <p styleName=\"notice\">\r\n                <FormattedMessage\r\n                  id=\"registerSMS_MnemonicRestoreNotes\"\r\n                  defaultMessage=\"Если не приходит код подтверждения или у вас нет доступа к указаному номеру телефона, вы можете восстановить кошелек используя секретную фразу\"\r\n                />\r\n              </p>\r\n              <p styleName=\"notice\">\r\n                <FormattedMessage\r\n                  id=\"registerSMS_MnemonicUseNotes\"\r\n                  defaultMessage=\"Используя секретную фразу, вы сможете разблокировать средства на счете\"\r\n                />\r\n              </p>\r\n              <p styleName=\"buttonContainer\">\r\n                <Button\r\n                  blue\r\n                  fullWidth\r\n                  autoHeight\r\n                  disabled={isShipped}\r\n                  onClick={this.handleRestoreWallet}\r\n                >\r\n                  <FormattedMessage\r\n                    id=\"registerSMSRestoryMnemonic\"\r\n                    defaultMessage=\"Восстановить кошелек используя секретную фразу\"\r\n                  />\r\n                </Button>\r\n              </p>\r\n            </Fragment>\r\n          )}\r\n          {step === 'ready' && (\r\n            <Fragment>\r\n              <div styleName=\"highLevel\">\r\n                <div>\r\n                  <img styleName=\"finishImg\" src={okSvg} alt=\"finish\" />\r\n                </div>\r\n                <span\r\n                  style={{\r\n                    fontSize: '25px',\r\n                    display: 'block',\r\n                    textAlign: 'center',\r\n                    marginBottom: '40px',\r\n                  }}\r\n                >\r\n                  <FormattedMessage\r\n                    id=\"registerSMSModalReady\"\r\n                    defaultMessage=\"Your protected wallet activated\"\r\n                  />\r\n                </span>\r\n              </div>\r\n              {showFinalInstruction && (\r\n                <div styleName=\"restoreInstruction\" className=\"ym-hide-content\">\r\n                  <h1>\r\n                    <FormattedMessage\r\n                      id=\"registerSMSModalFinishSaveThisInfo\"\r\n                      defaultMessage=\"Информация на случай недоступности нашего сервиса\"\r\n                    />\r\n                  </h1>\r\n                  <div>\r\n                    <pre>{restoreInstruction}</pre>\r\n                    <a\r\n                      styleName=\"link\"\r\n                      target=\"_blank\"\r\n                      href=\"https://github.com/bitcoinjs/bitcoinjs-lib/blob/master/test/integration/addresses.spec.ts\"\r\n                    >\r\n                      <FormattedMessage\r\n                        id=\"registerSMS_LinkToManualRestore\"\r\n                        defaultMessage=\"How to withdraw money manually\"\r\n                      />\r\n                    </a>\r\n                  </div>\r\n                  <div styleName=\"buttonsHolder\">\r\n                    <CopyToClipboard text={restoreInstruction} onCopy={this.handleCopyInstruction}>\r\n                      <Button\r\n                        blue\r\n                        disabled={isInstructionCopied}\r\n                        onClick={this.handleCopyInstruction}\r\n                      >\r\n                        {isInstructionCopied ? (\r\n                          <FormattedMessage\r\n                            id=\"registerSMSModalInstCopied\"\r\n                            defaultMessage=\"Скопировано\"\r\n                          />\r\n                        ) : (\r\n                          <FormattedMessage\r\n                            id=\"registerSMSModalInstCopy\"\r\n                            defaultMessage=\"Скопировать\"\r\n                          />\r\n                        )}\r\n                      </Button>\r\n                    </CopyToClipboard>\r\n                    <Button\r\n                      blue\r\n                      disabled={isInstructionDownloaded}\r\n                      onClick={this.handleDownloadInstruction}\r\n                    >\r\n                      {isInstructionDownloaded ? (\r\n                        <FormattedMessage\r\n                          id=\"registerSMSModalInstDownloaded\"\r\n                          defaultMessage=\"Загружается\"\r\n                        />\r\n                      ) : (\r\n                        <FormattedMessage\r\n                          id=\"registerSMSModalInstDownload\"\r\n                          defaultMessage=\"Скачать\"\r\n                        />\r\n                      )}\r\n                    </Button>\r\n                    <Button blue onClick={this.handleShareInstruction}>\r\n                      <FormattedMessage id=\"registerSMS_ShareInstruction\" defaultMessage=\"Share\" />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <Button big blue fullWidth onClick={this.handleFinish}>\r\n                <Fragment>\r\n                  <FormattedMessage id=\"registerSMSModalFinish\" defaultMessage=\"Finish\" />\r\n                </Fragment>\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}