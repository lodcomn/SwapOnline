{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.swap\\Swap.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.swap\\Swap.ts","mtime":1614850224833},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.swap/Swap.ts"],"names":["debug","BigNumber","SwapApp","Events","util","Room","COIN_DATA","COIN_MODEL","Swap","id","app","order","isMy","isTurbo","owner","participant","buyCurrency","sellCurrency","buyAmount","sellAmount","ownerSwap","participantSwap","destinationBuyAddress","destinationSellAddress","createUnixTimeStamp","Math","floor","Date","getTime","participantMetamaskAddress","waitConfirm","_attachSwapApp","data","env","storage","getItem","services","orders","getByKey","_getDataFromOrder","update","events","room","swapId","participantPeer","peer","swaps","toUpperCase","flowKey","flows","Error","Flow","flow","console","log","setupEvents","on","address","isFinished","required","attachSwap","pullProps","destination","rest","ownerAddress","participantAddress","swap","_pullRequiredData","setItem","timeoutUTS","sellCoin","buyCoin","model","_Sell","toLowerCase","_Buy","sellModel","buyModel","UTXO","AB","state","scriptValues","utxoScriptValues","scriptCreatingTransactionHash","utxoScriptCreatingTransactionHash","sendMessage","event","eventData","step","finishStep","secretHash","silentError","setState","participantHasLockedUTXO","requestScriptFunc","_isFinished","setTimeout","warn","metamask","isEnabled","isConnected","getAddress","values","Object","keys","forEach","key","String","_saveState","eventName","handler","subscribe","unsubscribe"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport debug from 'debug'\r\nimport BigNumber from 'bignumber.js'\r\nimport SwapApp, { Events, util } from 'swap.app'\r\nimport SwapInterface from 'swap.app/SwapInterface'\r\nimport Room from './Room'\r\nimport { Flow as FlowType } from 'swap.swap'\r\nimport { COIN_DATA, COIN_MODEL, COIN_TYPE } from 'swap.app/constants/COINS'\r\n\r\n\r\nclass Swap {\r\n\r\n  id: string\r\n  isMy: boolean\r\n  isTurbo: boolean\r\n  owner: any\r\n  participant: any\r\n  buyCurrency: string // @ToDo CoinType\r\n  sellCurrency: string// @ToDo CoinType\r\n  buyAmount: BigNumber\r\n  sellAmount: BigNumber\r\n  ownerSwap: any\r\n  participantSwap: any\r\n  destinationBuyAddress: any\r\n  destinationSellAddress: any\r\n  app: SwapApp\r\n  createUnixTimeStamp: number\r\n  participantMetamaskAddress: any\r\n  waitConfirm: boolean\r\n  events: Events\r\n  room: Room\r\n  flow: FlowType\r\n\r\n  constructor(id, app, order?) {\r\n    this.id                     = null\r\n    this.isMy                   = null\r\n    this.isTurbo                = null\r\n    this.owner                  = null\r\n    this.participant            = null\r\n    this.buyCurrency            = null\r\n    this.sellCurrency           = null\r\n    this.buyAmount              = null\r\n    this.sellAmount             = null\r\n    this.ownerSwap              = null\r\n    this.participantSwap        = null\r\n    this.destinationBuyAddress  = null\r\n    this.destinationSellAddress = null\r\n    this.app                    = null\r\n    this.createUnixTimeStamp    = Math.floor(new Date().getTime() / 1000)\r\n\r\n    this.participantMetamaskAddress = null\r\n\r\n    // Wait confirm > 1\r\n    this.waitConfirm            = false\r\n\r\n    this._attachSwapApp(app)\r\n\r\n    let data = this.app.env.storage.getItem(`swap.${id}`)\r\n\r\n    if (!data) {\r\n      order = order || this.app.services.orders.getByKey(id)\r\n\r\n      data = this._getDataFromOrder(order)\r\n    }\r\n\r\n    this.update(data)\r\n\r\n    this.events = new Events()\r\n\r\n    this.room = new Room(app, {\r\n      swapId: id,\r\n      participantPeer: this.participant.peer,\r\n    })\r\n\r\n    this.ownerSwap        = this.app.swaps[data.buyCurrency.toUpperCase()]\r\n    this.participantSwap  = this.app.swaps[data.sellCurrency.toUpperCase()]\r\n\r\n    const flowKey = this.isTurbo ?\r\n      (this.isMy ? 'TurboMaker' : 'TurboTaker')\r\n      :\r\n      `${data.sellCurrency.toUpperCase()}2${data.buyCurrency.toUpperCase()}`\r\n\r\n    if (!this.app.flows[flowKey]) {\r\n      throw new Error(`Flow with name \"${flowKey}\" not found in SwapApp.flows`)\r\n    }\r\n\r\n    const Flow = this.app.flows[flowKey]\r\n    this.flow = new Flow(this)\r\n    console.log(`Flow \"${flowKey}\" created!`)\r\n\r\n    this.setupEvents()\r\n    // Change destination address on run time\r\n    this.room.on('set destination buy address', (data) => {\r\n      debug('swap.core:swap')('Other side change destination buy address', data)\r\n      this.update({\r\n        destinationSellAddress: data.address,\r\n      })\r\n    })\r\n\r\n    this.room.on('set destination sell address', (data) => {\r\n      debug('swap.core:swap')('Other side change destination sell address', data)\r\n      this.update({\r\n        destinationBuyAddress: data.address,\r\n      })\r\n    })\r\n\r\n    this.room.on('set metamask address', (data) => {\r\n      debug('swap.core:swap')('Participant use metamask')\r\n      this.update({\r\n        participantMetamaskAddress: data.address,\r\n      })\r\n    })\r\n  }\r\n\r\n/* static read(app, { id }) {\r\n    SwapApp.required(app)\r\n\r\n    if (!id) {\r\n      debug('swap.core:swap')(`SwapReadError: id not given: ${id}`)\r\n      return {}\r\n    }\r\n\r\n    const data = app.env.storage.getItem(`swap.${id}`)\r\n\r\n    if (!data) {\r\n      debug('swap.core:swap')(`SwapReadError: No swap with id=${id}`)\r\n      return {}\r\n    }\r\n\r\n    const flowKey = this.isTurbo ?\r\n      (this.isMy ? 'TurboMaker' : 'TurboTaker')\r\n      :\r\n      `${data.sellCurrency.toUpperCase()}2${data.buyCurrency.toUpperCase()}`\r\n\r\n    if (!app.flows[flowKey]) {\r\n      throw new Error(`Flow with name \"${flowKey}\" not found in SwapApp.flows`)\r\n    }\r\n\r\n    const Flow = app.flows[flowKey]\r\n    data.flow = Flow.read(app, data)\r\n\r\n    return data\r\n  }*/\r\n\r\n  isFinished(): boolean {\r\n    return this.flow.isFinished()\r\n  }\r\n\r\n  _attachSwapApp(app) {\r\n    SwapApp.required(app)\r\n\r\n    this.app = app\r\n    this.app.attachSwap(this)\r\n  }\r\n\r\n  _getDataFromOrder(order) {\r\n    // TODO add check order format (typeforce)\r\n\r\n    const data = util.pullProps(\r\n      order,\r\n      'id',\r\n      'isMy',\r\n      'isTurbo',\r\n      'owner',\r\n      'participant',\r\n      'sellCurrency',\r\n      'sellAmount',\r\n      'buyCurrency',\r\n      'buyAmount',\r\n      'destination',\r\n    )\r\n\r\n    const {\r\n      //@\r\n      isMy,\r\n      //@\r\n      isTurbo,\r\n      //@\r\n      sellCurrency,\r\n      //@\r\n      sellAmount,\r\n      //@\r\n      buyCurrency,\r\n      //@\r\n      buyAmount,\r\n      //@\r\n      destination,\r\n      ...rest\r\n    } = data\r\n\r\n    const { ownerAddress, participantAddress } = destination\r\n\r\n    const swap = {\r\n      ...rest,\r\n      isMy,\r\n      isTurbo,\r\n      sellCurrency: isMy ? sellCurrency : buyCurrency,\r\n      sellAmount: isMy ? sellAmount : buyAmount,\r\n      buyCurrency: isMy ? buyCurrency : sellCurrency,\r\n      buyAmount: isMy ? buyAmount : sellAmount,\r\n      destinationBuyAddress: isMy ? ownerAddress : participantAddress,\r\n      destinationSellAddress: isMy ? participantAddress : ownerAddress,\r\n    }\r\n    //@\r\n    if (!swap.participant && !isMy) {\r\n      //@\r\n      swap.participant = swap.owner\r\n    }\r\n\r\n    return swap\r\n  }\r\n\r\n  _pullRequiredData(data) {\r\n    return util.pullProps(\r\n      data,\r\n      'id',\r\n      'isMy',\r\n      'isTurbo',\r\n      'owner',\r\n      'participant',\r\n      'sellCurrency',\r\n      'sellAmount',\r\n      'buyCurrency',\r\n      'buyAmount',\r\n      'destinationBuyAddress',\r\n      'destinationSellAddress',\r\n      'createUnixTimeStamp',\r\n      'participantMetamaskAddress',\r\n      'waitConfirm',\r\n    )\r\n  }\r\n\r\n  _saveState() {\r\n    const data = this._pullRequiredData(this)\r\n\r\n    this.app.env.storage.setItem(`swap.${this.id}`, data)\r\n  }\r\n\r\n  checkTimeout(timeoutUTS) {\r\n    // return true if timeout passed\r\n    return !((this.createUnixTimeStamp + timeoutUTS) > Math.floor(new Date().getTime() / 1000))\r\n  }\r\n\r\n  setupEvents() {\r\n    const {\r\n      sellCurrency: sellCoin,\r\n      buyCurrency: buyCoin,\r\n    } = this\r\n\r\n    if (COIN_DATA[sellCoin]\r\n      && COIN_DATA[sellCoin].model\r\n      && COIN_DATA[buyCoin]\r\n      && COIN_DATA[buyCoin].model\r\n    ) {\r\n      const _Sell = sellCoin.toLowerCase()\r\n      const _Buy = buyCoin.toLowerCase()\r\n\r\n      const sellModel = COIN_DATA[sellCoin].model\r\n      const buyModel = COIN_DATA[buyCoin].model\r\n\r\n      // sell UTXO buy AB \r\n      if (sellModel === COIN_MODEL.UTXO && buyModel === COIN_MODEL.AB) {\r\n        // @ToDo after refactoring use 'request script'\r\n        this.room.on(`request utxo script`, () => {\r\n          if (this.flow) {\r\n            const {\r\n              utxoScriptValues: scriptValues,\r\n              utxoScriptCreatingTransactionHash: scriptCreatingTransactionHash,\r\n            } = this.flow.state\r\n            \r\n            if (scriptValues && scriptCreatingTransactionHash) {\r\n              this.room.sendMessage({\r\n                event:  `create utxo script`,\r\n                data: {\r\n                  scriptValues,\r\n                  utxoScriptCreatingTransactionHash: scriptCreatingTransactionHash,\r\n                }\r\n              })\r\n            }\r\n          }\r\n        })\r\n      }\r\n      // sell AB buy UTXO\r\n      if (sellModel === COIN_MODEL.AB && buyModel === COIN_MODEL.UTXO) {\r\n        this.room.on(`create utxo script`, (eventData) => {\r\n          if (this.flow) {\r\n            const {\r\n              scriptValues,\r\n              utxoScriptCreatingTransactionHash: scriptCreatingTransactionHash, \r\n            } = eventData\r\n\r\n            const { step } = this.flow.state\r\n\r\n            if (step >= 3) {\r\n              return\r\n            }\r\n\r\n            this.flow.finishStep({\r\n              secretHash: scriptValues.secretHash,\r\n              utxoScriptValues: scriptValues,\r\n              utxoScriptCreatingTransactionHash: scriptCreatingTransactionHash,\r\n            }, { step: `wait-lock-utxo`, silentError: true })\r\n          }\r\n        })\r\n        // Seller has unconfirmed tx in mem pool\r\n        this.room.on('wait utxo unlock', () => {\r\n          this.flow.setState({\r\n            participantHasLockedUTXO: true,\r\n          }, true)\r\n        })\r\n\r\n        const requestScriptFunc = () => {\r\n          if (this.flow && !this.flow._isFinished()) {\r\n            const { step } = this.flow.state\r\n\r\n            if (step >= 3) {\r\n              return\r\n            }\r\n\r\n            this.flow.swap.room.sendMessage({\r\n              event: `request ${_Buy} script`,\r\n            })\r\n\r\n            setTimeout( requestScriptFunc, 5000 )\r\n          }\r\n        }\r\n        requestScriptFunc()\r\n      }\r\n      // sell UTXO buy UTXO\r\n      if (sellModel === COIN_MODEL.UTXO && buyModel === COIN_MODEL.UTXO) { /* ---- */ }\r\n      // sell AB buy AB\r\n      if (sellModel === COIN_MODEL.AB && buyModel === COIN_MODEL.AB) { /* ----- */ }\r\n    } else {\r\n      console.warn(`Core->Swap->setupEvents - Unknown coins models Sell(${sellCoin}) Buy(${buyCoin})`)\r\n    }\r\n  }\r\n\r\n  needWaitConfirm() {\r\n    this.update({\r\n      waitConfirm: true,\r\n    })\r\n  }\r\n\r\n  processMetamask() {\r\n    if (this.app.env.metamask\r\n      && this.app.env.metamask.isEnabled()\r\n      && this.app.env.metamask.isConnected()\r\n    ) {\r\n      this.room.sendMessage({\r\n        event: 'set metamask address',\r\n        data: {\r\n          address: this.app.env.metamask.getAddress(),\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  setDestinationBuyAddress(address) {\r\n    this.update({\r\n      destinationBuyAddress: address,\r\n    })\r\n\r\n    this.room.sendMessage({\r\n      event: 'set destination buy address',\r\n      data: {\r\n        address,\r\n      },\r\n    })\r\n  }\r\n\r\n  setDestinationSellAddress(address) {\r\n    this.update({\r\n      destinationSellAddress: address,\r\n    })\r\n\r\n    this.room.sendMessage({\r\n      event: 'set destination sell address',\r\n      data: {\r\n        address,\r\n      },\r\n    })\r\n  }\r\n\r\n  update(values) {\r\n    Object.keys(values).forEach((key) => {\r\n      if (key === 'buyAmount' || key === 'sellAmount') {\r\n        this[key] = new BigNumber(String(values[key]))\r\n      }\r\n      else {\r\n        this[key] = values[key]\r\n      }\r\n    })\r\n    this._saveState()\r\n  }\r\n\r\n  on(eventName, handler) {\r\n    this.events.subscribe(eventName, handler)\r\n  }\r\n\r\n  off(eventName, handler) {\r\n    this.events.unsubscribe(eventName, handler)\r\n  }\r\n}\r\n\r\n\r\nexport default Swap\r\n"]}]}