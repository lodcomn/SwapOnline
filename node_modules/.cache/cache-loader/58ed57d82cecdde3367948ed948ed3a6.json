{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\common\\web3connect\\providers\\InjectedProvider.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\common\\web3connect\\providers\\InjectedProvider.ts","mtime":1614842913726},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/common/web3connect/providers/InjectedProvider.ts"],"names":["InjectedConnector","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","InjectedProvider","web3Connect","options","_web3Connect","window","opr","addons","opera","navigator","userAgent","indexOf","ethereum","enable","isConnected","isTrust","ready","_isLocked","deactivate","connection","console","warn","test","message","error"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,iBAAT,QAAkC,gCAAlC;AACA,SACEC,uBADF,EAEEC,wBAAwB,IAAIC,gCAF9B,QAGO,gCAHP;;IAMqBC,gB;;;;;AAInB,4BAAYC,WAAZ,EAAyBC,OAAzB,EAAkC;AAAA;;AAAA;;AAChC,8BAAMA,OAAN;;AADgC,mEAHnB,IAGmB;;AAAA,gEAFtB,KAEsB;;AAEhC,UAAKC,YAAL,GAAoBF,WAApB;AAFgC;AAGjC;;;;;kFAED;AAAA;AAAA;AAAA;AAAA;AAAA,sBACO,CAAC,CAACG,MAAM,CAACC,GAAT,IAAgB,CAAC,CAACD,MAAM,CAACC,GAAP,CAAWC,MAA9B,IAAyC,CAAC,CAACF,MAAM,CAACG,KAAlD,IAA2DC,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4B,OAA5B,KAAwC,CADzG;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAGUN,MAAM,CAACO,QAAP,CAAgBC,MAAhB,EAHV;;AAAA;AAAA,iDAIWR,MAAM,CAACO,QAAP,CAAgBE,WAAhB,EAJX;;AAAA;AAAA,qBAMQT,MAAM,CAACO,QAAP,CAAgBG,OANxB;AAAA;AAAA;AAAA;;AAAA,iDAOaV,MAAM,CAACO,QAAP,CAAgBI,KAP7B;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAaA,oBAAW;AACT,aAAO,KAAKC,SAAZ;AACD;;;;iFAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQ,KAAKC,UAAL,EADR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;8EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,qBAAKD,SAAL,GAAiB,KAAjB;AADF;AAAA;AAAA;;AAAA;AAGUE,gBAAAA,UAHV;AAAA,kDAIYA,UAAD,GAAe,IAAf,GAAsB,KAJjC;;AAAA;AAAA;AAAA;;AAMI,oBAAI,wBAAenB,gCAAnB,EAAqD;AACnDoB,kBAAAA,OAAO,CAACC,IAAR,CAAa,0CAAb;AACD,iBAFD,MAEO,IAAI,wBAAevB,uBAAnB,EAA4C;AACjDsB,kBAAAA,OAAO,CAACC,IAAR,CAAa,4BAAb;AACD,iBAFM,MAEA,IAAI,mBAAmBC,IAAnB,CAAwB,aAAIC,OAA5B,CAAJ,EAA0C;AAC/C,uBAAKN,SAAL,GAAiB,IAAjB;AACAG,kBAAAA,OAAO,CAACC,IAAR,CAAa,eAAb;AACD,iBAHM,MAGA;AACLD,kBAAAA,OAAO,CAACI,KAAR;AACD;;AAfL,kDAgBW,KAhBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;EA9B4C3B,iB;;SAAzBI,gB","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from '@web3-react/injected-connector'\r\n\r\n\r\nexport default class InjectedProvider extends InjectedConnector {\r\n  _web3Connect = null\r\n  _isLocked = false\r\n\r\n  constructor(web3Connect, options) {\r\n    super(options)\r\n    this._web3Connect = web3Connect\r\n  }\r\n\r\n  async isConnected() {\r\n    if ((!!window.opr && !!window.opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0) {\r\n      // This is opera\r\n      await window.ethereum.enable()\r\n      return window.ethereum.isConnected()\r\n    } else {\r\n      if (window.ethereum.isTrust) {\r\n        return window.ethereum.ready\r\n      }\r\n      return await super.isAuthorized()\r\n    }\r\n  }\r\n\r\n  isLocked() {\r\n    return this._isLocked\r\n  }\r\n\r\n  async Disconnect() {\r\n    await this.deactivate()\r\n  }\r\n\r\n  async Connect() {\r\n    this._isLocked = false\r\n    try {\r\n      const connection = await super.activate()\r\n      return (connection) ? true : false\r\n    } catch (err) {\r\n      if (err instanceof UserRejectedRequestErrorInjected) {\r\n        console.warn('User reject connect to Injected provider')\r\n      } else if (err instanceof NoEthereumProviderError) {\r\n        console.warn('There no injected provider')\r\n      } else if (/Wallet is locked/.test(err.message)) {\r\n        this._isLocked = true\r\n        console.warn('Wallet locked')\r\n      } else {\r\n        console.error(err)\r\n      }\r\n      return false\r\n    }\r\n  }\r\n}"]}]}