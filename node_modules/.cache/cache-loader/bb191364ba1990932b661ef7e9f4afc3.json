{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\RestoryMnemonicWallet\\RestoryMnemonicWallet.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\RestoryMnemonicWallet\\RestoryMnemonicWallet.tsx","mtime":1614850725266},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/RestoryMnemonicWallet/RestoryMnemonicWallet.tsx"],"names":["React","Fragment","constants","actions","connect","config","cssModules","defaultStyles","styles","okSvg","Modal","FieldLabel","Button","Tooltip","FormattedMessage","injectIntl","defineMessages","links","MnemonicInput","feedback","langPrefix","langLabels","title","id","defaultMessage","mnemonicLabel","mnemonicPlaceholder","readyNotice","Ready","restoringWallet","restoryWallet","cancelRestory","mnemonicInvalid","RestoryMnemonicWallet","user","btcData","btcMultisigSMSData","btcMultisigUserData","ethData","ghostData","nextData","allCurrensies","allowMultiple","props","reduce","acc","curr","name","infoAboutCurrency","balance","isWidgetBuild","widgetCurrencies","includes","btcBalance","price_btc","usdBalance","price_fiat","setState","data","onClose","window","location","assign","hashHome","modals","close","handleClose","reload","mnemonic","state","btc","validateMnemonicWords","mnemonicIsInvalid","isFetching","restoreWallet","setTimeout","backupMark","getMainPublicKey","backupManager","backup","getWalletByWords","btcWallet","eth","ethWallet","ghost","ghostWallet","next","nextWallet","localStorage","setItem","privateKeyNames","twentywords","restoryMark","publicKey","exists","restory","login","btcPrivKey","btcSmsKey","btcmultisig","getSmsKeyFromMnemonic","btcSmsMnemonicKeyGenerated","isWalletCreate","sign_btc_2fa","sign_btc_multisig","core","markCoinAsVisible","step","restore","finished","showCloseButton","fetchData","started","intl","formatMessage","entry","handleMnemonicChange","split","length","handleRestoryWallet","handleFinish","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAkBC,SAAlB,QAAmC,SAAnC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AAGA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,cAAvC,QAA6D,YAA7D;AAGA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,IAAMC,UAAU,0BAAhB;AACA,IAAMC,UAAU,GAAGL,cAAc,CAAC;AAChCM,EAAAA,KAAK,EAAE;AACLC,IAAAA,EAAE,YAAKH,UAAL,WADG;AAELI,IAAAA,cAAc;AAFT,GADyB;AAKhCC,EAAAA,aAAa,EAAE;AACbF,IAAAA,EAAE,YAAKH,UAAL,mBADW;AAEbI,IAAAA,cAAc;AAFD,GALiB;AAShCE,EAAAA,mBAAmB,EAAE;AACnBH,IAAAA,EAAE,YAAKH,UAAL,yBADiB;AAEnBI,IAAAA,cAAc;AAFK,GATW;AAahCG,EAAAA,WAAW,EAAE;AACXJ,IAAAA,EAAE,YAAKH,UAAL,iBADS;AAEXI,IAAAA,cAAc;AAFH,GAbmB;AAiBhCI,EAAAA,KAAK,EAAE;AACLL,IAAAA,EAAE,YAAKH,UAAL,WADG;AAELI,IAAAA,cAAc;AAFT,GAjByB;AAqBhCK,EAAAA,eAAe,EAAE;AACfN,IAAAA,EAAE,YAAKH,UAAL,sBADa;AAEfI,IAAAA,cAAc;AAFC,GArBe;AAyBhCM,EAAAA,aAAa,EAAE;AACbP,IAAAA,EAAE,YAAKH,UAAL,mBADW;AAEbI,IAAAA,cAAc;AAFD,GAzBiB;AA6BhCO,EAAAA,aAAa,EAAE;AACbR,IAAAA,EAAE,YAAKH,UAAL,mBADW;AAEbI,IAAAA,cAAc;AAFD,GA7BiB;AAiChCQ,EAAAA,eAAe,EAAE;AACfT,IAAAA,EAAE,YAAKH,UAAL,qBADa;AAEfI,IAAAA,cAAc;AAFC;AAjCe,CAAD,CAAjC;IAiFqBS,qB,WAhBpB7B,OAAO,CACN;AAAA,uBACE8B,IADF;AAAA,MACUC,OADV,aACUA,OADV;AAAA,MACmBC,kBADnB,aACmBA,kBADnB;AAAA,MACuCC,mBADvC,aACuCA,mBADvC;AAAA,MAC4DC,OAD5D,aAC4DA,OAD5D;AAAA,MACqEC,SADrE,aACqEA,SADrE;AAAA,MACgFC,QADhF,aACgFA,QADhF;AAAA,SAEO;AACLC,IAAAA,aAAa,EAAE,CACbN,OADa,EAEbA,OAFa,EAGbC,kBAHa,EAIbC,mBAJa,EAKbC,OALa,EAMbC,SANa,EAObC,QAPa;AADV,GAFP;AAAA,CADM,C,UAePlC,UAAU,iCAAMC,aAAN,GAAwBC,MAAxB,GAAkC;AAAEkC,EAAAA,aAAa,EAAE;AAAjB,CAAlC,C,EAhBV3B,U;;;;;AAsBC,iCAAY4B,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB;;AAAA;;AAAA,sIAuBP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACFF,cAAAA,aADE,GACgB,MAAKE,KADrB,CACFF,aADE;AAAA,sCAGyBA,aAAa,CAACG,MAAd,CACjC,UAACC,GAAD,EAAMC,IAAN,EAAe;AAAA,oBACLC,IADK,GACgCD,IADhC,CACLC,IADK;AAAA,oBACCC,iBADD,GACgCF,IADhC,CACCE,iBADD;AAAA,oBACoBC,OADpB,GACgCH,IADhC,CACoBG,OADpB;;AAEb,qBACE;AACA,iBAAC,CAACC,aAAD,IAAkBC,gBAAgB,CAACC,QAAjB,CAA0BL,IAA1B,CAAnB,KACAC,iBADA,IAEAC,OAAO,KAAK,CAJd,EAKE;AACAJ,kBAAAA,GAAG,CAACQ,UAAJ,IAAkBJ,OAAO,GAAGD,iBAAiB,CAACM,SAA9C;AACAT,kBAAAA,GAAG,CAACU,UAAJ,IACEN,OAAO,IAAID,iBAAiB,CAACQ,UAAlB,GAA+BR,iBAAiB,CAACQ,UAAjD,GAA8D,CAAlE,CADT;AAED;;AACD,uBAAOX,GAAP;AACD,eAdgC,EAejC;AAAEQ,gBAAAA,UAAU,EAAE,CAAd;AAAiBE,gBAAAA,UAAU,EAAE;AAA7B,eAfiC,CAHzB,EAGFF,UAHE,yBAGFA,UAHE,EAGUE,UAHV,yBAGUA,UAHV;;AAqBV,oBAAKE,QAAL,CAAc,UAACC,IAAD;AAAA,uBAAW;AACvBA,kBAAAA,IAAI;AAAIL,oBAAAA,UAAU,EAAVA,UAAJ;AAAgBE,oBAAAA,UAAU,EAAVA;AAAhB,qBAA+BG,IAA/B;AADmB,iBAAX;AAAA,eAAd;;AArBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAvBO;;AAAA,kEAiDL,YAAM;AAAA,wBACc,MAAKf,KADnB;AAAA,UACVI,IADU,eACVA,IADU;AAAA,UACJW,IADI,eACJA,IADI;AAAA,UACEC,OADF,eACEA,OADF;;AAGlB,UAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjCA,QAAAA,OAAO;AACR;;AAED,UAAID,IAAI,IAAI,OAAOA,IAAI,CAACC,OAAZ,KAAwB,UAApC,EAAgD;AAC9CD,QAAAA,IAAI,CAACC,OAAL;AACD,OAFD,MAEO;AACLC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB7C,KAAK,CAAC8C,QAA7B;AACD;;AAED5D,MAAAA,OAAO,CAAC6D,MAAR,CAAeC,KAAf,CAAqBlB,IAArB;AACD,KA/DkB;;AAAA,mEAiEJ,YAAM;AACnB,YAAKmB,WAAL;;AAEAN,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB7C,KAAK,CAAC8C,QAA7B;AACAH,MAAAA,MAAM,CAACC,QAAP,CAAgBM,MAAhB;AACD,KAtEkB;;AAAA,0EAwEG,YAAM;AAAA,UAClBC,QADkB,GACL,MAAKC,KADA,CAClBD,QADkB;;AAG1B,UAAI,CAACA,QAAD,IAAa,CAACjE,OAAO,CAACmE,GAAR,CAAYC,qBAAZ,CAAkCH,QAAlC,CAAlB,EAA+D;AAC7D,cAAKX,QAAL,CAAc;AACZe,UAAAA,iBAAiB,EAAE,IADP;AAEZC,UAAAA,UAAU,EAAE;AAFA,SAAd;;AAIA;AACD;;AAED,YAAKhB,QAAL,CACE;AACEgB,QAAAA,UAAU,EAAE;AADd,OADF,EAIE;AAAA,eAAM,MAAKC,aAAL,CAAmBN,QAAnB,CAAN;AAAA,OAJF;AAMD,KAzFkB;;AAAA,oEA2FH,UAACA,QAAD,EAAc;AAC5B;AACAO,MAAAA,UAAU,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACT;AACMC,gBAAAA,UAFG,GAEUzE,OAAO,CAACmE,GAAR,CAAYO,gBAAZ,EAFV;AAIT1E,gBAAAA,OAAO,CAAC2E,aAAR,CAAsBC,MAAtB,CAA6BH,UAA7B,EAAyC,KAAzC,EAAgD,IAAhD;AAJS;AAAA,uBAKezE,OAAO,CAACmE,GAAR,CAAYU,gBAAZ,CAA6BZ,QAA7B,CALf;;AAAA;AAKHa,gBAAAA,SALG;AAAA;AAAA,uBAMe9E,OAAO,CAAC+E,GAAR,CAAYF,gBAAZ,CAA6BZ,QAA7B,CANf;;AAAA;AAMHe,gBAAAA,SANG;AAAA;AAAA,uBAOiBhF,OAAO,CAACiF,KAAR,CAAcJ,gBAAd,CAA+BZ,QAA/B,CAPjB;;AAAA;AAOHiB,gBAAAA,WAPG;AAAA;AAAA,uBAQgBlF,OAAO,CAACmF,IAAR,CAAaN,gBAAb,CAA8BZ,QAA9B,CARhB;;AAAA;AAQHmB,gBAAAA,UARG;AAUT;AACAC,gBAAAA,YAAY,CAACC,OAAb,CAAqBvF,SAAS,CAACwF,eAAV,CAA0BC,WAA/C,EAA4D,GAA5D,EAXS,CAaT;;AACMC,gBAAAA,WAdG,GAcWX,SAAS,CAACY,SAdrB;;AAgBT,oBAAI1F,OAAO,CAAC2E,aAAR,CAAsBgB,MAAtB,CAA6BF,WAA7B,CAAJ,EAA+C;AAC7CzF,kBAAAA,OAAO,CAAC2E,aAAR,CAAsBiB,OAAtB,CAA8BH,WAA9B;AACD;;AAlBQ;AAAA,uBAoBgBzF,OAAO,CAACmE,GAAR,CAAY0B,KAAZ,CAAkB,KAAlB,EAAyB5B,QAAzB,CApBhB;;AAAA;AAoBH6B,gBAAAA,UApBG;AAqBHC,gBAAAA,SArBG,GAqBS/F,OAAO,CAACgG,WAAR,CAAoBC,qBAApB,CAA0ChC,QAA1C,CArBT;AAsBToB,gBAAAA,YAAY,CAACC,OAAb,CAAqBvF,SAAS,CAACwF,eAAV,CAA0BW,0BAA/C,EAA2EH,SAA3E,EAtBS,CAuBT;;AACAV,gBAAAA,YAAY,CAACC,OAAb,CAAqBvF,SAAS,CAACsF,YAAV,CAAuBc,cAA5C,EAA4D,IAA5D;AAxBS;AAAA,uBA0BHnG,OAAO,CAAC+E,GAAR,CAAYc,KAAZ,CAAkB,KAAlB,EAAyB5B,QAAzB,CA1BG;;AAAA;AAAA;AAAA,uBA2BHjE,OAAO,CAACiF,KAAR,CAAcY,KAAd,CAAoB,KAApB,EAA2B5B,QAA3B,CA3BG;;AAAA;AAAA;AAAA,uBA4BHjE,OAAO,CAACmF,IAAR,CAAaU,KAAb,CAAmB,KAAnB,EAA0B5B,QAA1B,CA5BG;;AAAA;AAAA;AAAA,uBA8BHjE,OAAO,CAAC+B,IAAR,CAAaqE,YAAb,CAA0BN,UAA1B,CA9BG;;AAAA;AAAA;AAAA,uBA+BH9F,OAAO,CAAC+B,IAAR,CAAasE,iBAAb,CAA+BP,UAA/B,CA/BG;;AAAA;AAiCT9F,gBAAAA,OAAO,CAACsG,IAAR,CAAaC,iBAAb,CAA+B,KAA/B,EAAsC,IAAtC;AACAvG,gBAAAA,OAAO,CAACsG,IAAR,CAAaC,iBAAb,CAA+B,KAA/B,EAAsC,IAAtC;;AAEA,sBAAKjD,QAAL,CAAc;AACZgB,kBAAAA,UAAU,EAAE,KADA;AAEZkC,kBAAAA,IAAI;AAFQ,iBAAd;;AAKAxF,gBAAAA,QAAQ,CAACyF,OAAT,CAAiBC,QAAjB;;AAzCS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAD,GAAV;AA2CD,KAxIkB;;AAAA,2EA0II,UAACzC,QAAD,EAAc;AACnC,YAAKX,QAAL,CAAc;AACZW,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGD,KA9IkB;;AAAA,QAGTV,KAHS,GAGAf,KAHA,CAGTe,IAHS;AAKjB,UAAKW,KAAL,GAAa;AACXsC,MAAAA,IAAI,SADO;AAEXvC,MAAAA,QAAQ,EAAE,EAFC;AAGXI,MAAAA,iBAAiB,EAAE,KAHR;AAIXC,MAAAA,UAAU,EAAE,KAJD;AAKXf,MAAAA,IAAI,EAAE;AACJL,QAAAA,UAAU,EAAEK,KAAI,GAAGA,KAAI,CAACL,UAAR,GAAqB,CADjC;AAEJE,QAAAA,UAAU,EAAEG,KAAI,GAAGA,KAAI,CAACH,UAAR,GAAqB,CAFjC;AAGJuD,QAAAA,eAAe,EAAEpD,KAAI,GAAGA,KAAI,CAACoD,eAAR,GAA0B;AAH3C;AALK,KAAb;AALiB;AAgBlB;;;;WAED,6BAAoB;AAClB,WAAKC,SAAL;AACA5F,MAAAA,QAAQ,CAACyF,OAAT,CAAiBI,OAAjB;AACD;;;WA2HD,kBAAS;AAAA,yBACgB,KAAKrE,KADrB;AAAA,UACCI,IADD,gBACCA,IADD;AAAA,UACOkE,IADP,gBACOA,IADP;AAAA,wBAUH,KAAK5C,KAVF;AAAA,UAILsC,IAJK,eAILA,IAJK;AAAA,UAKLvC,QALK,eAKLA,QALK;AAAA,UAMLI,iBANK,eAMLA,iBANK;AAAA,UAOLC,UAPK,eAOLA,UAPK;AAAA,yCASLf,IATK;AAAA,UASGoD,eATH,oBASGA,eATH;AAAA,mDASoBzD,UATpB;AAAA,UASoBA,UATpB,sCASiC,CATjC;AAAA,mDASoCE,UATpC;AAAA,UASoCA,UATpC,sCASiD,CATjD;AAYP,0BACE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAER,IADR;AAEE,QAAA,KAAK,YAAKkE,IAAI,CAACC,aAAL,CAAmB7F,UAAU,CAACC,KAA9B,CAAL,CAFP;AAGE,QAAA,OAAO,EAAE,KAAK4C,WAHhB;AAIE,QAAA,eAAe,EAAE4C;AAJnB,sBAME;AAAK,QAAA,SAAS,EAAC;AAAf,SACGH,IAAI,YAAJ,iBACC,oBAAC,QAAD,QACGvC,QAAQ,IAAII,iBAAZ,iBACC;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,gBAAD,EAAsBnD,UAAU,CAACW,eAAjC,CADF,CAFJ,eAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,SAAS,EAAC,6BAArC;AAAmE,QAAA,SAAS,EAAC;AAA7E,sBACE,oBAAC,UAAD,qBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,sBACE,oBAAC,gBAAD,EAAsBX,UAAU,CAACI,aAAjC,CADF,uBAGE,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAC;AAAZ,sBACE,+CACE,oBAAC,gBAAD;AACE,QAAA,EAAE,EAAC,oCADL;AAEE,QAAA,cAAc,EAAC;AAFjB,QADF,EAKG,CAAC4B,UAAU,GAAG,CAAb,IAAkBE,UAAU,GAAG,CAAhC,kBACC,oBAAC,KAAD,CAAO,QAAP,qBACE,+BADF,eAEE,+BAFF,eAGE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,gBAAD;AACE,QAAA,EAAE,EAAC,gDADL;AAEE,QAAA,cAAc,EAAC;AAFjB,QADF,CAHF,CANJ,CADF,CAHF,CADF,CADF,eA2BE,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAElD,MAAM,CAAC8G,KAAP,KAAiB,SAD7B;AAEE,QAAA,QAAQ,EAAE,KAAKC;AAFjB,QA3BF,CANF,eAsCE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,EAAE,KAAKlD;AAA3B,sBACE,oBAAC,gBAAD,EAAsB7C,UAAU,CAACU,aAAjC,CADF,CADF,eAIE,oBAAC,MAAD;AACE,QAAA,IAAI,MADN;AAEE,QAAA,QAAQ,EAAE,CAACqC,QAAD,IAAaA,QAAQ,CAACiD,KAAT,CAAe,GAAf,EAAoBC,MAApB,KAA+B,EAA5C,IAAkD7C,UAF9D;AAGE,QAAA,OAAO,EAAE,KAAK8C;AAHhB,SAKG9C,UAAU,gBACT,oBAAC,gBAAD,EAAsBpD,UAAU,CAACQ,eAAjC,CADS,gBAGT,oBAAC,gBAAD,EAAsBR,UAAU,CAACS,aAAjC,CARJ,CAJF,CAtCF,CAFJ,EA0DG6E,IAAI,YAAJ,iBACC,oBAAC,QAAD,qBACE;AAAG,QAAA,SAAS,EAAC;AAAb,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAElG,KAAhC;AAAuC,QAAA,GAAG,EAAC;AAA3C,QADF,eAEE,oBAAC,gBAAD,EAAsBY,UAAU,CAACM,WAAjC,CAFF,CADF,eAKE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,kCADZ;AAEE,QAAA,IAAI,MAFN;AAGE,QAAA,OAAO,EAAE,KAAK6F;AAHhB,sBAKE,oBAAC,gBAAD,EAAsBnG,UAAU,CAACO,KAAjC,CALF,CADF,CALF,CA3DJ,CANF,CADF;AAqFD;;;;EAtPgD5B,KAAK,CAACyH,S;SAApCxF,qB","sourcesContent":["// @ts-nocheck\r\nimport React, { Fragment } from 'react'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\nimport config from 'app-config'\r\n\r\nimport cssModules from 'react-css-modules'\r\n\r\nimport defaultStyles from '../Styles/default.scss'\r\nimport styles from './RestoryMnemonicWallet.scss'\r\nimport okSvg from 'shared/images/ok.svg'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Button from 'components/controls/Button/Button'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport links from 'helpers/links'\r\n\r\nimport MnemonicInput from 'components/forms/MnemonicInput/MnemonicInput'\r\nimport feedback from 'shared/helpers/feedback'\r\n\r\nconst langPrefix = `RestoryMnemonicWallet`\r\nconst langLabels = defineMessages({\r\n  title: {\r\n    id: `${langPrefix}_Title`,\r\n    defaultMessage: `Восстановление кошелка из секретной фразы`,\r\n  },\r\n  mnemonicLabel: {\r\n    id: `${langPrefix}_MnemonicField`,\r\n    defaultMessage: `Секретная фраза (12 слов):`,\r\n  },\r\n  mnemonicPlaceholder: {\r\n    id: `${langPrefix}_MnemonicPlaceholder`,\r\n    defaultMessage: `Введите сохраненную фразу, для восстановления кошелька`,\r\n  },\r\n  readyNotice: {\r\n    id: `${langPrefix}_ReadyNotice`,\r\n    defaultMessage: `Теперь вы можете добавить BTC, ETH и другие валюты`,\r\n  },\r\n  Ready: {\r\n    id: `${langPrefix}_Ready`,\r\n    defaultMessage: `Готово`,\r\n  },\r\n  restoringWallet: {\r\n    id: `${langPrefix}_RestroringWallet`,\r\n    defaultMessage: `Восстанавливаем...`,\r\n  },\r\n  restoryWallet: {\r\n    id: `${langPrefix}_RestoryWallet`,\r\n    defaultMessage: `Восстановить`,\r\n  },\r\n  cancelRestory: {\r\n    id: `${langPrefix}_CancelRestory`,\r\n    defaultMessage: `Отмена`,\r\n  },\r\n  mnemonicInvalid: {\r\n    id: `${langPrefix}_MnemonicInvalid`,\r\n    defaultMessage: `Вы указали не валидный набор слов`,\r\n  },\r\n})\r\n\r\ntype RestoryMnemonicWalletProps = {\r\n  name: string\r\n  onClose: () => void\r\n  intl: { [key: string]: any }\r\n  allCurrensies: { [key: string]: any }[]\r\n\r\n  data: {\r\n    btcBalance: number\r\n    fiatBalance: number\r\n    onClose: () => void\r\n  }\r\n}\r\n\r\ntype RestoryMnemonicWalletState = {\r\n  mnemonic: string\r\n  step: string\r\n  mnemonicIsInvalid: boolean\r\n  isFetching: boolean\r\n  data: {\r\n    btcBalance: number\r\n    usdBalance: number\r\n    showCloseButton: boolean\r\n  }\r\n}\r\n\r\n@injectIntl\r\n@connect(\r\n  ({\r\n    user: { btcData, btcMultisigSMSData, btcMultisigUserData, ethData, ghostData, nextData },\r\n  }) => ({\r\n    allCurrensies: [\r\n      btcData,\r\n      btcData,\r\n      btcMultisigSMSData,\r\n      btcMultisigUserData,\r\n      ethData,\r\n      ghostData,\r\n      nextData,\r\n    ],\r\n  })\r\n)\r\n@cssModules({ ...defaultStyles, ...styles }, { allowMultiple: true })\r\nexport default class RestoryMnemonicWallet extends React.Component {\r\n\r\n  props: RestoryMnemonicWalletProps\r\n  state: RestoryMnemonicWalletState\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const { data } = props\r\n\r\n    this.state = {\r\n      step: `enter`,\r\n      mnemonic: '',\r\n      mnemonicIsInvalid: false,\r\n      isFetching: false,\r\n      data: {\r\n        btcBalance: data ? data.btcBalance : 0,\r\n        usdBalance: data ? data.usdBalance : 0,\r\n        showCloseButton: data ? data.showCloseButton : true,\r\n      },\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n    feedback.restore.started()\r\n  }\r\n\r\n  fetchData = async () => {\r\n    const { allCurrensies } = this.props\r\n\r\n    const { btcBalance, usdBalance } = allCurrensies.reduce(\r\n      (acc, curr) => {\r\n        const { name, infoAboutCurrency, balance } = curr\r\n        if (\r\n          //@\r\n          (!isWidgetBuild || widgetCurrencies.includes(name)) &&\r\n          infoAboutCurrency &&\r\n          balance !== 0\r\n        ) {\r\n          acc.btcBalance += balance * infoAboutCurrency.price_btc\r\n          acc.usdBalance +=\r\n            balance * (infoAboutCurrency.price_fiat ? infoAboutCurrency.price_fiat : 1)\r\n        }\r\n        return acc\r\n      },\r\n      { btcBalance: 0, usdBalance: 0 }\r\n    )\r\n\r\n    this.setState((data) => ({\r\n      data: { btcBalance, usdBalance, ...data },\r\n    }))\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { name, data, onClose } = this.props\r\n\r\n    if (typeof onClose === 'function') {\r\n      onClose()\r\n    }\r\n\r\n    if (data && typeof data.onClose === 'function') {\r\n      data.onClose()\r\n    } else {\r\n      window.location.assign(links.hashHome)\r\n    }\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  handleFinish = () => {\r\n    this.handleClose()\r\n\r\n    window.location.assign(links.hashHome)\r\n    window.location.reload()\r\n  }\r\n\r\n  handleRestoryWallet = () => {\r\n    const { mnemonic } = this.state\r\n\r\n    if (!mnemonic || !actions.btc.validateMnemonicWords(mnemonic)) {\r\n      this.setState({\r\n        mnemonicIsInvalid: true,\r\n        isFetching: false,\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        isFetching: true,\r\n      },\r\n      () => this.restoreWallet(mnemonic)\r\n    )\r\n  }\r\n\r\n  restoreWallet = (mnemonic) => {\r\n    // callback in timeout is't block ui\r\n    setTimeout(async () => {\r\n      // Backup critical localStorage\r\n      const backupMark = actions.btc.getMainPublicKey()\r\n\r\n      actions.backupManager.backup(backupMark, false, true)\r\n      const btcWallet = await actions.btc.getWalletByWords(mnemonic)\r\n      const ethWallet = await actions.eth.getWalletByWords(mnemonic)\r\n      const ghostWallet = await actions.ghost.getWalletByWords(mnemonic)\r\n      const nextWallet = await actions.next.getWalletByWords(mnemonic)\r\n\r\n      // clean mnemonic, if exists\r\n      localStorage.setItem(constants.privateKeyNames.twentywords, '-')\r\n\r\n      // Check - if exists backup for this mnemonic\r\n      const restoryMark = btcWallet.publicKey\r\n\r\n      if (actions.backupManager.exists(restoryMark)) {\r\n        actions.backupManager.restory(restoryMark)\r\n      }\r\n\r\n      const btcPrivKey = await actions.btc.login(false, mnemonic)\r\n      const btcSmsKey = actions.btcmultisig.getSmsKeyFromMnemonic(mnemonic)\r\n      localStorage.setItem(constants.privateKeyNames.btcSmsMnemonicKeyGenerated, btcSmsKey)\r\n      //@\r\n      localStorage.setItem(constants.localStorage.isWalletCreate, true)\r\n\r\n      await actions.eth.login(false, mnemonic)\r\n      await actions.ghost.login(false, mnemonic)\r\n      await actions.next.login(false, mnemonic)\r\n\r\n      await actions.user.sign_btc_2fa(btcPrivKey)\r\n      await actions.user.sign_btc_multisig(btcPrivKey)\r\n\r\n      actions.core.markCoinAsVisible('BTC', true)\r\n      actions.core.markCoinAsVisible('ETH', true)\r\n\r\n      this.setState({\r\n        isFetching: false,\r\n        step: `ready`,\r\n      })\r\n\r\n      feedback.restore.finished()\r\n    })\r\n  }\r\n\r\n  handleMnemonicChange = (mnemonic) => {\r\n    this.setState({\r\n      mnemonic,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { name, intl } = this.props\r\n\r\n    const {\r\n      step,\r\n      mnemonic,\r\n      mnemonicIsInvalid,\r\n      isFetching,\r\n\r\n      data: { showCloseButton, btcBalance = 0, usdBalance = 1 },\r\n    } = this.state\r\n\r\n    return (\r\n      <Modal\r\n        name={name}\r\n        title={`${intl.formatMessage(langLabels.title)}`}\r\n        onClose={this.handleClose}\r\n        showCloseButton={showCloseButton}\r\n      >\r\n        <div styleName=\"restoreModalHolder\">\r\n          {step === `enter` && (\r\n            <Fragment>\r\n              {mnemonic && mnemonicIsInvalid && (\r\n                <div styleName=\"rednotes mnemonicNotice\">\r\n                  <FormattedMessage {...langLabels.mnemonicInvalid} />\r\n                </div>\r\n              )}\r\n              <div styleName=\"highLevel\" className=\"ym-hide-content notranslate\" translate=\"no\">\r\n                <FieldLabel>\r\n                  <span styleName=\"tooltipWrapper\">\r\n                    <FormattedMessage {...langLabels.mnemonicLabel} />\r\n                    &nbsp;\r\n                    <Tooltip id=\"ImportKeys_RestoreMnemonic_tooltip\">\r\n                      <span>\r\n                        <FormattedMessage\r\n                          id=\"ImportKeys_RestoreMnemonic_Tooltip\"\r\n                          defaultMessage=\"12-word backup phrase\"\r\n                        />\r\n                        {(btcBalance > 0 || usdBalance > 0) && (\r\n                          <React.Fragment>\r\n                            <br />\r\n                            <br />\r\n                            <div styleName=\"alertTooltipWrapper\">\r\n                              <FormattedMessage\r\n                                id=\"ImportKeys_RestoreMnemonic_Tooltip_withBalance\"\r\n                                defaultMessage=\"Please, be causious!\"\r\n                              />\r\n                            </div>\r\n                          </React.Fragment>\r\n                        )}\r\n                      </span>\r\n                    </Tooltip>\r\n                  </span>\r\n                </FieldLabel>\r\n                <MnemonicInput \r\n                  autoFill={config.entry === 'testnet'}\r\n                  onChange={this.handleMnemonicChange}\r\n                />\r\n              </div>\r\n              <div styleName=\"buttonsHolder\">\r\n                <Button blue onClick={this.handleClose}>\r\n                  <FormattedMessage {...langLabels.cancelRestory} />\r\n                </Button>\r\n                <Button\r\n                  blue\r\n                  disabled={!mnemonic || mnemonic.split(' ').length !== 12 || isFetching}\r\n                  onClick={this.handleRestoryWallet}\r\n                >\r\n                  {isFetching ? (\r\n                    <FormattedMessage {...langLabels.restoringWallet} />\r\n                  ) : (\r\n                    <FormattedMessage {...langLabels.restoryWallet} />\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {step === `ready` && (\r\n            <Fragment>\r\n              <p styleName=\"notice mnemonicNotice\">\r\n                <img styleName=\"finishImg\" src={okSvg} alt=\"finish\" />\r\n                <FormattedMessage {...langLabels.readyNotice} />\r\n              </p>\r\n              <div styleName=\"lowLevel\">\r\n                <Button\r\n                  styleName=\"buttonCenter buttonHalfFullWidth\"\r\n                  blue\r\n                  onClick={this.handleFinish}\r\n                >\r\n                  <FormattedMessage {...langLabels.Ready} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}