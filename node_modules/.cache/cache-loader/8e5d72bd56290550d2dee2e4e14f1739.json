{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawModalMultisig\\WithdrawModalMultisig.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\WithdrawModalMultisig\\WithdrawModalMultisig.tsx","mtime":1614850626654},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/WithdrawModalMultisig/WithdrawModalMultisig.tsx"],"names":["React","Fragment","PropTypes","helpers","constants","actions","Link","connect","config","cssModules","styles","ownStyle","BigNumber","Modal","FieldLabel","Input","Button","Tooltip","FormattedMessage","injectIntl","defineMessages","ReactTooltip","isMobile","InvoiceInfoBlock","typeforce","minAmount","inputReplaceCommaWithDot","QrReader","redirectTo","lsDataCache","isDark","localStorage","getItem","WithdrawModalMultisig","currencies","user","btcData","activeFiat","btcMultisigSMSData","dashboardModalsAllowed","ui","items","dashboardView","allowMultiple","props","setState","smsStatus","step","currency","data","currentDecimals","state","ethTokenMinAmount","a","usedAdminFee","estimateFeeValue","method","speed","min","plus","toNumber","unconfirmedBalance","btcmultisig","getBalance","balance","finalBalance","undefined","toString","eth","ethBalance","getExchangeRate","toLowerCase","exCurrencyRate","fiatRates","txId","amount","to","address","invoice","onReady","name","loader","hide","invoices","markInvoice","id","setBalanceOnState","txInfoCache","senderAddress","receiverAddress","confirmed","push","key","time","isShipped","error","Function","txInfoUrl","transactions","getTxRouter","modals","close","code","confirmSMSProtected","result","txID","onFinishWithdraw","console","log","rawTX","btc","broadcastTx","then","txid","broadcastError","rawTx","errorText","ownTx","notifications","show","SuccessWithdraw","sendOptions","from","sendSmsStatus","sendSMSProtected","answer","isEthToken","minFee","feeFromAmount","fee","dividedBy","multipliedBy","balanceMiner","minus","openScanCam","mnemonic","validateMnemonicWords","trim","checkSmsMnemonic","signSmsMnemonicAndBuild","txHex","e","res","text","message","err","split","openScan","toAddress","tokenDecimals","selectedItem","filter","item","opts","getFiat","smsConfirmed","sendSmsTimeout","sendSmsTimeoutTimer","clearInterval","getFiatBalance","actualyMinAmount","isCoinAddress","BTC","addressIsCorrect","tokenItems","intl","portalUI","defaultMin","isGreaterThan","linked","all","dataCurrency","toUpperCase","isDisabled","dp","NanReplacement","check","value","isLessThanOrEqualTo","width","fontSize","labels","withdrowModal","defaultMessage","ownTxPlaceholder","smsPlaceholder","mnemonicPlaceholder","formRender","handleError","handleScan","formatMessage","handleMnemonicSign","handleSwitchToSms","br","marginBottom","textAlign","toFixed","marginLeft","sellAllBalance","handleSubmit","handleClose","errorName","errorMessage","handleConfirmSMS","handleSwitchToMnemonic","Component","string","object"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\nimport config from 'app-config'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from '../WithdrawModal/WithdrawModal.scss'\r\nimport ownStyle from './WithdrawModalMultisig.scss'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Button from 'components/controls/Button/Button'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { isMobile } from 'react-device-detect'\r\nimport InvoiceInfoBlock from 'components/InvoiceInfoBlock/InvoiceInfoBlock'\r\n\r\nimport typeforce from 'swap.app/util/typeforce'\r\n// import { isCoinAddress } from 'swap.app/util/typeforce'\r\nimport minAmount from 'helpers/constants/minAmount'\r\nimport { inputReplaceCommaWithDot } from 'helpers/domUtils'\r\nimport QrReader from 'components/QrReader'\r\n\r\nimport redirectTo from 'helpers/redirectTo'\r\nimport AdminFeeInfoBlock from 'components/AdminFeeInfoBlock/AdminFeeInfoBlock'\r\nimport lsDataCache from 'helpers/lsDataCache'\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\n@injectIntl\r\n@connect(\r\n  ({\r\n    currencies,\r\n    user: { btcData, activeFiat, btcMultisigSMSData },\r\n    ui: { dashboardModalsAllowed },\r\n  }) => ({\r\n    activeFiat,\r\n    currencies: currencies.items,\r\n    items: [btcData, btcMultisigSMSData],\r\n    dashboardView: dashboardModalsAllowed,\r\n  })\r\n)\r\n@cssModules({ ...styles, ...ownStyle }, { allowMultiple: true })\r\nexport default class WithdrawModalMultisig extends React.Component<any, any> {\r\n  props: any\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    data: PropTypes.object,\r\n  }\r\n\r\n  fiatRates: any\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {\r\n      data: { amount, toAddress, currency },\r\n      items,\r\n    } = props\r\n\r\n    //@\r\n    const currentDecimals = constants.tokenDecimals.btcmultisig\r\n    const selectedItem = items.filter((item) => item.currency === currency)[0]\r\n\r\n    let usedAdminFee = false\r\n\r\n    let min = minAmount['btc_multisig_2fa']\r\n\r\n    if (config && config.opts && config.opts.fee && config.opts.fee.btc) {\r\n      usedAdminFee = config.opts.fee.btc\r\n      if (usedAdminFee) {\r\n        // miner fee + minimal admin fee\r\n        //@\r\n        min = new BigNumber(min).plus(usedAdminFee.min).toNumber()\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      usedAdminFee,\r\n      step: 'fillform',\r\n      isShipped: false,\r\n      address: toAddress ? toAddress : '',\r\n      amount: amount ? amount : '',\r\n      code: '',\r\n      minus: '',\r\n      balance: selectedItem.balance || 0,\r\n      ethBalance: null,\r\n      isEthToken: false,\r\n      currentDecimals,\r\n      getFiat: 0,\r\n      error: false,\r\n      smsConfirmed: false,\r\n      ownTx: '',\r\n      mnemonic: '',\r\n      broadcastError: false,\r\n      sendSmsTimeout: 0,\r\n      sendSmsTimeoutTimer: false,\r\n      min,\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.sendSmsTimeoutTimer)\r\n  }\r\n\r\n  gotoSms = () => {\r\n    this.setState({\r\n      smsStatus: 'sended',\r\n      step: 'confirm',\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { exCurrencyRate } = this.state\r\n    const {\r\n      data: { currency },\r\n    } = this.props\r\n\r\n    this.setBalanceOnState(currency)\r\n\r\n    this.fiatRates = {}\r\n    this.getFiatBalance()\r\n    this.actualyMinAmount()\r\n    //this.gotoSms()\r\n  }\r\n\r\n  getMinAmountForEthToken = () => {\r\n    const {\r\n      data: { currency },\r\n    } = this.props\r\n    const { currentDecimals } = this.state\r\n\r\n    let ethTokenMinAmount = '0.'\r\n\r\n    for (let a = 0; a < currentDecimals - 1; a++) {\r\n      ethTokenMinAmount += '0'\r\n    }\r\n\r\n    return (ethTokenMinAmount += '1')\r\n  }\r\n\r\n  actualyMinAmount = async () => {\r\n    const { usedAdminFee } = this.state\r\n\r\n    let min: any = await helpers['btc'].estimateFeeValue({ method: 'send_2fa', speed: 'fast' })\r\n    minAmount['btc_multisig_2fa'] = min\r\n\r\n    if (usedAdminFee) {\r\n      min = new BigNumber(min).plus(usedAdminFee.min).toNumber()\r\n    }\r\n\r\n    this.setState({\r\n      min,\r\n    })\r\n  }\r\n\r\n  setBalanceOnState = async (currency) => {\r\n    const {\r\n      data: { unconfirmedBalance },\r\n    } = this.props\r\n\r\n    const balance: any = await actions.btcmultisig.getBalance()\r\n\r\n    const finalBalance =\r\n      unconfirmedBalance !== undefined && unconfirmedBalance < 0\r\n        ? new BigNumber(balance).plus(unconfirmedBalance).toString()\r\n        : balance\r\n    const ethBalance = await actions.eth.getBalance()\r\n\r\n    this.setState(() => ({\r\n      balance: finalBalance,\r\n      ethBalance,\r\n    }))\r\n  }\r\n\r\n  getFiatBalance = async () => {\r\n    const {\r\n      data: { currency },\r\n      activeFiat,\r\n    } = this.props\r\n\r\n    const exCurrencyRate = await actions.user.getExchangeRate(currency, activeFiat.toLowerCase())\r\n    this.fiatRates[currency] = exCurrencyRate\r\n\r\n    this.setState(() => ({\r\n      exCurrencyRate,\r\n    }))\r\n  }\r\n\r\n  onFinishWithdraw = async (txId) => {\r\n    const { amount, address: to } = this.state\r\n\r\n    const {\r\n      data: { currency, address, balance, invoice, onReady },\r\n      name,\r\n    } = this.props\r\n\r\n    actions.loader.hide()\r\n\r\n    if (invoice) {\r\n      await actions.invoices.markInvoice(invoice.id, 'ready', txId, address)\r\n    }\r\n    this.setBalanceOnState(currency)\r\n\r\n    /*\r\n    actions.modals.open(constants.modals.InfoPay, {\r\n      amount,\r\n      currency,\r\n      balance,\r\n      oldBalance: 0, // @Todo доделать old balance\r\n      txId,\r\n      toAddress: to\r\n    })\r\n    */\r\n\r\n    // Сохраняем транзакцию в кеш\r\n    const txInfoCache = {\r\n      amount,\r\n      senderAddress: address,\r\n      receiverAddress: to,\r\n      confirmed: false,\r\n    }\r\n\r\n    lsDataCache.push({\r\n      key: `TxInfo_btc_${txId}`,\r\n      time: 3600,\r\n      data: txInfoCache,\r\n    })\r\n\r\n    this.setState({\r\n      isShipped: false,\r\n      error: false,\r\n    })\r\n\r\n    if (onReady instanceof Function) {\r\n      onReady()\r\n    }\r\n\r\n    const txInfoUrl = helpers.transactions.getTxRouter('btc', txId)\r\n    redirectTo(txInfoUrl)\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  handleConfirmSMS = async () => {\r\n    const { code } = this.state\r\n    const { address: to, amount } = this.state\r\n    const {\r\n      data: { currency, address, balance, invoice, onReady },\r\n      name,\r\n    } = this.props\r\n\r\n    const result = await actions.btcmultisig.confirmSMSProtected(code)\r\n    if (result && result.txID) {\r\n      this.onFinishWithdraw(result.txID)\r\n    } else {\r\n      console.log(result)\r\n      if (result && result.error && result.error == 'Fail broadcast' && result.rawTX) {\r\n        actions.btc.broadcastTx(result.rawTX).then(async ({ txid }) => {\r\n          if (txid) {\r\n            this.onFinishWithdraw(txid)\r\n          } else {\r\n            this.setState({\r\n              broadcastError: true,\r\n              rawTx: result.rawTX,\r\n              isShipped: false,\r\n              error: (\r\n                <FormattedMessage\r\n                  id=\"WithdrawSMS_BroadcastError\"\r\n                  defaultMessage=\"Не удалось отправить транзакцию в сеть ({errorText})\"\r\n                  values={{ errorText: `unknown` }}\r\n                />\r\n              ),\r\n            })\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = async () => {\r\n    const { address: to, amount, ownTx, rawTx } = this.state\r\n\r\n    const {\r\n      data: { currency, address, balance, invoice, onReady },\r\n      name,\r\n    } = this.props\r\n\r\n    this.setState(() => ({\r\n      isShipped: true,\r\n      step: 'confirm',\r\n    }))\r\n\r\n    this.setBalanceOnState(currency)\r\n\r\n    if (invoice && ownTx) {\r\n      await actions.invoices.markInvoice(invoice.id, 'ready', ownTx, address)\r\n      actions.loader.hide()\r\n      actions.notifications.show(constants.notifications.SuccessWithdraw, {\r\n        amount,\r\n        currency,\r\n        address: to,\r\n      })\r\n      this.setState(() => ({ isShipped: false, error: false }))\r\n      actions.modals.close(name)\r\n      if (onReady instanceof Function) {\r\n        onReady()\r\n      }\r\n      return\r\n    }\r\n\r\n    let sendOptions = {\r\n      to,\r\n      amount,\r\n      speed: 'fast',\r\n      from: address,\r\n    }\r\n\r\n    this.setState({\r\n      sendSmsStatus: 'sending',\r\n    })\r\n    //@\r\n    const result = await actions.btcmultisig.sendSMSProtected(sendOptions)\r\n\r\n    console.log('sendSMSProtected result', result)\r\n    if (result && result.answer === 'ok') {\r\n      this.setState({\r\n        isShipped: false,\r\n        rawTx: result.rawTx ? result.rawTx : rawTx,\r\n        sendSmsStatus: 'sended',\r\n      })\r\n    } else {\r\n      this.setState({\r\n        isShipped: false,\r\n        sendSmsStatus: 'offline',\r\n        rawTx: result.rawTx ? result.rawTx : rawTx,\r\n      })\r\n    }\r\n  }\r\n\r\n  sellAllBalance = async () => {\r\n    const { amount, balance, currency, isEthToken, min, usedAdminFee } = this.state\r\n\r\n    const { data } = this.props\r\n\r\n    let minFee = min\r\n\r\n    if (usedAdminFee) {\r\n      let feeFromAmount = new BigNumber(usedAdminFee.fee).dividedBy(100).multipliedBy(balance)\r\n      minFee = new BigNumber(minFee).plus(feeFromAmount).toNumber()\r\n    }\r\n\r\n    const balanceMiner = balance\r\n      ? balance !== 0\r\n        ? new BigNumber(balance).minus(minFee).toString()\r\n        : balance\r\n      : 'Wait please. Loading...'\r\n\r\n    this.setState({\r\n      amount: balanceMiner,\r\n    })\r\n  }\r\n\r\n  isEthOrERC20() {}\r\n\r\n  openScan = () => {\r\n    const { openScanCam } = this.state\r\n\r\n    this.setState(() => ({\r\n      openScanCam: !openScanCam,\r\n    }))\r\n  }\r\n\r\n  handleMnemonicSign = () => {\r\n    const { mnemonic, rawTx, balance, amount, to } = this.state\r\n\r\n    if (!mnemonic || !actions.btc.validateMnemonicWords(mnemonic.trim())) {\r\n      this.setState({\r\n        error: (\r\n          <FormattedMessage\r\n            id=\"WithdrawSMS_NotValidMnemonic\"\r\n            defaultMessage=\"Секретная фраза не валидна\"\r\n          />\r\n        ),\r\n      })\r\n      return\r\n    }\r\n    if (!actions.btcmultisig.checkSmsMnemonic(mnemonic.trim())) {\r\n      this.setState({\r\n        error: (\r\n          <FormattedMessage\r\n            id=\"WithdrawSMS_WrongMnemonic\"\r\n            defaultMessage=\"Не правильная секретная фраза\"\r\n          />\r\n        ),\r\n      })\r\n      return\r\n    }\r\n\r\n    this.setState({\r\n      isShipped: true,\r\n      error: false,\r\n      broadcastError: false,\r\n    })\r\n\r\n    actions.btcmultisig\r\n      .signSmsMnemonicAndBuild(rawTx, mnemonic.trim())\r\n      .then(async (txHex) => {\r\n        console.log('signed', txHex)\r\n        this.setState({\r\n          txHex,\r\n        })\r\n        actions.btc\r\n          .broadcastTx(txHex)\r\n          .then(async ({ txid }) => {\r\n            if (txid) {\r\n              this.onFinishWithdraw(txid)\r\n            } else {\r\n              this.setState({\r\n                broadcastError: true,\r\n                isShipped: false,\r\n                error: (\r\n                  <FormattedMessage\r\n                    id=\"WithdrawSMS_BroadcastError\"\r\n                    defaultMessage=\"Не удалось отправить транзакцию в сеть ({errorText})\"\r\n                    values={{ errorText: `unknown` }}\r\n                  />\r\n                ),\r\n              })\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            console.error(e)\r\n            const errorText = e.res ? e.res.text : e.message\r\n            this.setState({\r\n              broadcastError: true,\r\n              isShipped: false,\r\n              error: (\r\n                <FormattedMessage\r\n                  id=\"WithdrawSMS_BroadcastError\"\r\n                  defaultMessage=\"Не удалось отправить транзакцию в сеть ({errorText})\"\r\n                  values={{ errorText }}\r\n                />\r\n              ),\r\n            })\r\n          })\r\n      })\r\n      .catch((e) => {\r\n        console.log('fail sign tx by mnemonic')\r\n        this.setState({\r\n          isShipped: false,\r\n          error: (\r\n            <FormattedMessage\r\n              id=\"WithdrawSMS_FailSignByMnemonic\"\r\n              defaultMessage=\"Не удалось подписать транзакцию\"\r\n            />\r\n          ),\r\n        })\r\n      })\r\n  }\r\n\r\n  handleSwitchToMnemonic = () => {\r\n    this.setState({\r\n      step: 'mnemonicSign',\r\n    })\r\n  }\r\n\r\n  handleSwitchToSms = () => {\r\n    this.setState({\r\n      step: 'confirm',\r\n    })\r\n  }\r\n\r\n  handleError = (err) => {\r\n    console.error(err)\r\n  }\r\n\r\n  handleScan = (data) => {\r\n    if (data) {\r\n      const address = data.split(':')[1].split('?')[0]\r\n      const amount = data.split('=')[1]\r\n      this.setState(() => ({\r\n        address,\r\n        amount,\r\n      }))\r\n      this.openScan()\r\n    }\r\n  }\r\n\r\n  addressIsCorrect() {\r\n    const { address } = this.state\r\n\r\n    if (!typeforce.isCoinAddress.BTC(address)) {\r\n      return actions.btc.addressIsCorrect(address)\r\n    } else return true\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { name } = this.props\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      address,\r\n      amount,\r\n      code,\r\n      balance,\r\n      isShipped,\r\n      minus,\r\n      ethBalance,\r\n      exCurrencyRate,\r\n      currentDecimals,\r\n      error,\r\n      mnemonic,\r\n      openScanCam,\r\n      step,\r\n      ownTx,\r\n      sendSmsTimeout,\r\n      sendSmsStatus,\r\n      usedAdminFee,\r\n    } = this.state\r\n\r\n    const {\r\n      name,\r\n      data: { currency, invoice },\r\n      tokenItems,\r\n      items,\r\n      intl,\r\n      portalUI,\r\n    } = this.props\r\n\r\n    let { min, min: defaultMin } = this.state\r\n\r\n    if (usedAdminFee) {\r\n      if (amount) {\r\n        let feeFromAmount = new BigNumber(usedAdminFee.fee).dividedBy(100).multipliedBy(amount)\r\n        if (new BigNumber(usedAdminFee.min).isGreaterThan(feeFromAmount))\r\n          feeFromAmount = new BigNumber(usedAdminFee.min)\r\n\r\n        min = new BigNumber(min).plus(feeFromAmount).toNumber() // Admin fee in satoshi\r\n      }\r\n    }\r\n\r\n    const linked = Link.all(this, 'address', 'amount', 'code', 'ownTx', 'mnemonic')\r\n\r\n    const dataCurrency = currency.toUpperCase()\r\n\r\n    const isDisabled =\r\n      !address ||\r\n      !amount ||\r\n      isShipped ||\r\n      ownTx ||\r\n      !this.addressIsCorrect() ||\r\n      new BigNumber(amount).isGreaterThan(balance) ||\r\n      new BigNumber(amount).dp() > currentDecimals\r\n\r\n    const NanReplacement = balance || '...'\r\n    const getFiat = amount * exCurrencyRate\r\n\r\n    if (new BigNumber(amount).isGreaterThan(0)) {\r\n      linked.amount.check(\r\n        (value) => new BigNumber(value).isLessThanOrEqualTo(balance),\r\n        <div style={{ width: '340px', fontSize: '12px' }}>\r\n          <FormattedMessage\r\n            id=\"Withdrow170\"\r\n            defaultMessage=\"The amount must be no more than your balance\"\r\n            values={{\r\n              min,\r\n              currency: `${currency}`,\r\n            }}\r\n          />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (this.state.amount < 0) {\r\n      this.setState({\r\n        amount: '',\r\n        minus: true,\r\n      })\r\n    }\r\n\r\n    const labels = defineMessages({\r\n      withdrowModal: {\r\n        id: 'withdrowTitle271',\r\n        defaultMessage: `Send`,\r\n      },\r\n      ownTxPlaceholder: {\r\n        id: 'withdrawOwnTxPlaceholder',\r\n        defaultMessage: 'Если оплатили с другого источника',\r\n      },\r\n      smsPlaceholder: {\r\n        id: 'withdrawSMSCodePlaceholder',\r\n        defaultMessage: 'Enter SMS-code',\r\n      },\r\n      mnemonicPlaceholder: {\r\n        id: 'registerSMSMPlaceHolder',\r\n        defaultMessage: `12 слов`,\r\n      },\r\n    })\r\n\r\n    const formRender = (\r\n      <Fragment>\r\n        {openScanCam && (\r\n          <QrReader\r\n            openScan={this.openScan}\r\n            handleError={this.handleError}\r\n            handleScan={this.handleScan}\r\n          />\r\n        )}\r\n        {invoice && <InvoiceInfoBlock invoiceData={invoice} />}\r\n        {step === 'mnemonicSign' && (\r\n          <Fragment>\r\n            <p styleName=\"notice dashboardViewNotice\">\r\n              <FormattedMessage\r\n                id=\"WithdrawSMS_MnemonicSignCaption\"\r\n                defaultMessage=\"Подтверждение транзакции секретной фразой\"\r\n              />\r\n            </p>\r\n            <div styleName=\"highLevel\" className=\"ym-hide-content\">\r\n              <FieldLabel>\r\n                <FormattedMessage\r\n                  id=\"registerSMSModalWords\"\r\n                  defaultMessage=\"Секретная фраза (12 слов):\"\r\n                />\r\n              </FieldLabel>\r\n              <Input\r\n                styleName=\"input\"\r\n                valueLink={linked.mnemonic}\r\n                multiline={true}\r\n                placeholder={`${intl.formatMessage(labels.mnemonicPlaceholder)}`}\r\n              />\r\n            </div>\r\n            {error && <div styleName=\"rednotes\">{error}</div>}\r\n            <Button\r\n              styleName=\"buttonFull\"\r\n              big\r\n              blue\r\n              fullWidth\r\n              disabled={isShipped}\r\n              onClick={this.handleMnemonicSign}\r\n            >\r\n              {isShipped ? (\r\n                <FormattedMessage id=\"WithdrawModal11212\" defaultMessage=\"Processing ...\" />\r\n              ) : (\r\n                <FormattedMessage\r\n                  id=\"btcSMSProtectedSignByMnemonic\"\r\n                  defaultMessage=\"Использовать секретную фразу\"\r\n                />\r\n              )}\r\n            </Button>\r\n            <hr />\r\n            <p styleName=\"notice mnemonicUseNote dashboardViewNotice\">\r\n              <FormattedMessage\r\n                id=\"WithdrawSMS_UseSMSNote\"\r\n                defaultMessage=\"Так-же вы можете использовать смс-код, отправленный на привязанный номер телефона\"\r\n              />\r\n            </p>\r\n            <Button styleName=\"useAuthMethodButton\" blue onClick={this.handleSwitchToSms}>\r\n              <FormattedMessage id=\"WithdrawSMS_UseSMS\" defaultMessage=\"Использовать смс-код\" />\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n        {step === 'fillform' && (\r\n          <Fragment>\r\n            <p styleName=\"notice dashboardViewNotice\">\r\n              <FormattedMessage\r\n                id=\"Withdrow213\"\r\n                defaultMessage=\"Please note: Fee is {minAmount} {data}.{br}Your balance must exceed this sum to perform transaction\"\r\n                values={{ minAmount: `${min}`, br: <br />, data: `${dataCurrency}` }}\r\n              />\r\n            </p>\r\n            <div styleName=\"highLevel\" style={{ marginBottom: '20px' }}>\r\n              <FieldLabel inRow>\r\n                <span style={{ fontSize: '16px' }}>\r\n                  <FormattedMessage id=\"Withdrow1194\" defaultMessage=\"Address \" />\r\n                </span>{' '}\r\n                <Tooltip id=\"WtH203\">\r\n                  <div style={{ textAlign: 'center' }}>\r\n                    <FormattedMessage\r\n                      id=\"WTH275\"\r\n                      defaultMessage=\"Make sure the wallet you{br}are sending the funds to supports {currency}\"\r\n                      values={{ br: <br />, currency: `${currency.toUpperCase()}` }}\r\n                    />\r\n                  </div>\r\n                </Tooltip>\r\n              </FieldLabel>\r\n              <Input\r\n                valueLink={linked.address}\r\n                focusOnInit\r\n                pattern=\"0-9a-zA-Z:\"\r\n                placeholder={`Enter ${currency.toUpperCase()} address to transfer`}\r\n                qr\r\n                withMargin\r\n                openScan={this.openScan}\r\n              />\r\n              {address && !this.addressIsCorrect() && (\r\n                <div styleName=\"rednote\">\r\n                  <FormattedMessage\r\n                    id=\"WithdrawIncorectAddress\"\r\n                    defaultMessage=\"Your address not correct\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div styleName={`lowLevel ${isDark ? 'dark' : ''}`} style={{ marginBottom: '50px' }}>\r\n              <p styleName=\"balance\">\r\n                {balance} {`BTC`}\r\n              </p>\r\n              <FieldLabel>\r\n                <FormattedMessage id=\"Withdrow118\" defaultMessage=\"Amount \" />\r\n              </FieldLabel>\r\n\r\n              <div styleName=\"group\">\r\n                <Input\r\n                  styleName=\"input\"\r\n                  valueLink={linked.amount}\r\n                  pattern=\"0-9\\.\"\r\n                  placeholder=\"Enter the amount\"\r\n                  fiat={getFiat.toFixed(2)}\r\n                  onKeyDown={inputReplaceCommaWithDot}\r\n                />\r\n                <div style={{ marginLeft: '15px' }}>\r\n                  <Button blue big onClick={this.sellAllBalance} data-tip data-for=\"Withdrow134\">\r\n                    <FormattedMessage id=\"Select210\" defaultMessage=\"MAX\" />\r\n                  </Button>\r\n                </div>\r\n                {!isMobile && (\r\n                  <ReactTooltip id=\"Withdrow134\" type=\"light\" effect=\"solid\" styleName=\"r-tooltip\">\r\n                    <FormattedMessage\r\n                      id=\"WithdrawButton32\"\r\n                      defaultMessage=\"when you click this button, in the field, an amount equal to your balance minus the miners commission will appear\"\r\n                    />\r\n                  </ReactTooltip>\r\n                )}\r\n                {!linked.amount.error && (\r\n                  <div styleName={minus ? 'rednote' : 'note'}>\r\n                    <FormattedMessage\r\n                      id=\"WithdrawModal256\"\r\n                      defaultMessage=\"No less than {minAmount}\"\r\n                      values={{ minAmount: `${defaultMin}` }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div styleName=\"sendBtnsWrapper\">\r\n              <div styleName=\"actionBtn\">\r\n                <Button blue big fill disabled={isDisabled} onClick={this.handleSubmit}>\r\n                  {isShipped ? (\r\n                    <Fragment>\r\n                      <FormattedMessage id=\"WithdrawModal11212\" defaultMessage=\"Processing ...\" />\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <FormattedMessage id=\"WithdrawModal111\" defaultMessage=\"Send\" />\r\n                    </Fragment>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n              <div styleName=\"actionBtn\">\r\n                <Button big fill gray onClick={this.handleClose}>\r\n                  <Fragment>\r\n                    <FormattedMessage id=\"WithdrawModalCancelBtn\" defaultMessage=\"Cancel\" />\r\n                  </Fragment>\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            {error && (\r\n              <div styleName=\"rednote\">\r\n                <FormattedMessage\r\n                  id=\"WithdrawModalErrorSend\"\r\n                  defaultMessage=\"{errorName} {currency}:{br}{errorMessage}\"\r\n                  values={{\r\n                    errorName: intl.formatMessage(error.name),\r\n                    errorMessage: intl.formatMessage(error.message),\r\n                    br: <br />,\r\n                    currency: `${currency}`,\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            {invoice && (\r\n              <Fragment>\r\n                <hr />\r\n                <div\r\n                  styleName={`lowLevel ${isDark ? 'dark' : ''}`}\r\n                  style={{ marginBottom: '50px' }}\r\n                >\r\n                  <div styleName=\"groupField\">\r\n                    <div styleName=\"downLabel\">\r\n                      <FieldLabel inRow>\r\n                        <span styleName=\"mobileFont\">\r\n                          <FormattedMessage id=\"WithdrowOwnTX\" defaultMessage=\"Или укажите TX\" />\r\n                        </span>\r\n                      </FieldLabel>\r\n                    </div>\r\n                  </div>\r\n                  <div styleName=\"group\">\r\n                    <Input\r\n                      styleName=\"input\"\r\n                      valueLink={linked.ownTx}\r\n                      placeholder={`${intl.formatMessage(labels.ownTxPlaceholder)}`}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Button\r\n                  styleName=\"buttonFull\"\r\n                  big\r\n                  blue\r\n                  fullWidth\r\n                  disabled={!ownTx || isShipped}\r\n                  onClick={this.handleSubmit}\r\n                >\r\n                  {isShipped ? (\r\n                    <Fragment>\r\n                      <FormattedMessage id=\"WithdrawModal11212\" defaultMessage=\"Processing ...\" />\r\n                    </Fragment>\r\n                  ) : (\r\n                    <FormattedMessage\r\n                      id=\"WithdrawModalInvoiceSaveTx\"\r\n                      defaultMessage=\"Отметить как оплаченный\"\r\n                    />\r\n                  )}\r\n                </Button>\r\n              </Fragment>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n\r\n        {step === 'confirm' && (\r\n          <Fragment>\r\n            <div styleName=\"highLevel smsCodeHolder\">\r\n              <FieldLabel>\r\n                <FormattedMessage id=\"Withdrow2223\" defaultMessage=\"SMS code\" />\r\n              </FieldLabel>\r\n              <Input\r\n                styleName=\"input\"\r\n                valueLink={linked.code}\r\n                pattern=\"0-9\"\r\n                placeholder={`${intl.formatMessage(labels.smsPlaceholder)}`}\r\n              />\r\n            </div>\r\n            {sendSmsStatus === 'sending' && (\r\n              <div styleName=\"smsServerStatus\">\r\n                <FormattedMessage\r\n                  id=\"WithdrawSMS_SmsSending\"\r\n                  defaultMessage=\"Отправка проверочного кода\"\r\n                />\r\n              </div>\r\n            )}\r\n            {sendSmsStatus === 'sended' && (\r\n              <div styleName=\"smsServerStatus\">\r\n                <FormattedMessage id=\"WithdrawSMS_SmsSended\" defaultMessage=\"Код отправлен\" />\r\n              </div>\r\n            )}\r\n            {sendSmsStatus === 'offline' && (\r\n              <div styleName=\"rednotes smsServerStatus\">\r\n                <FormattedMessage\r\n                  id=\"WithdrawSMS_ServerOffline\"\r\n                  defaultMessage=\"Сервер авторизации не доступен\"\r\n                />\r\n              </div>\r\n            )}\r\n            {linked.code.error && (\r\n              <div styleName=\"rednotes smsServerStatus\">\r\n                <FormattedMessage\r\n                  id=\"WithdrawModal2225\"\r\n                  defaultMessage=\"Something went wrong, enter your current code please\"\r\n                />\r\n              </div>\r\n            )}\r\n            <Button\r\n              styleName=\"buttonFull confirmSmsCode\"\r\n              fullWidth\r\n              disabled={isShipped || sendSmsStatus === 'sending' || sendSmsStatus === 'offline'}\r\n              big\r\n              blue\r\n              onClick={this.handleConfirmSMS}\r\n            >\r\n              <FormattedMessage id=\"Withdrow2224\" defaultMessage=\"Confirm\" />\r\n            </Button>\r\n            <hr styleName=\"marginHr\" />\r\n            <p styleName=\"notice mnemonicUseNote dashboardViewNotice\">\r\n              <FormattedMessage\r\n                id=\"WithdrawSMS_MnemonicNote\"\r\n                defaultMessage=\"Если у вас нет доступа к телефону или не получается получить код, вы можете воспользовать секретной фразой\"\r\n              />\r\n            </p>\r\n            <Button styleName=\"useAuthMethodButton\" blue onClick={this.handleSwitchToMnemonic}>\r\n              <FormattedMessage\r\n                id=\"WithdrawSMS_UseMnemonic\"\r\n                defaultMessage=\"Использовать секретную фразу\"\r\n              />\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    )\r\n\r\n    return portalUI ? (\r\n      formRender\r\n    ) : (\r\n      <Modal\r\n        name={name}\r\n        title={`${intl.formatMessage(labels.withdrowModal)}${' '}${currency.toUpperCase()}`}\r\n      >\r\n        {formRender}\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}