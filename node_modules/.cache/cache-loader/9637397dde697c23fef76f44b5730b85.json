{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\TurboSwap\\TurboSwap.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\TurboSwap\\TurboSwap.tsx","mtime":1614842914263},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/TurboSwap/TurboSwap.tsx"],"names":["React","PureComponent","Swap","SwapApp","cssModules","styles","connect","helpers","links","constants","actions","injectIntl","FormattedMessage","localisedUrl","feedback","SwapStatus","SwapTxStatus","TxSide","Tx","Button","TurboSwap","peer","pubsubRoom","rememberedOrders","allowMultiple","props","history","push","wallet","state","swap","flowState","items","currenciesData","tokensData","locale","intl","orderId","match","params","exchange","shared","console","log","flow","_flowName","setState","setInterval","error","notifications","show","ErrorNotification","started","JSON","stringify","sellCurrencyKey","sellCurrency","toLowerCase","buyCurrencyKey","buyCurrency","myAddressSend","app","services","auth","accounts","address","getAddress","myAddressReceive","participantAddressSend","participant","participantAddressReceive","swapIdShortened","id","split","map","part","parseInt","reduce","acc","letter","index","length","includes","join","takerTx","amount","isMy","buyAmount","sellAmount","currency","hash","takerTxHash","status","Expected","isTakerTxPended","Pending","Done","url","transactions","getLink","makerTx","makerTxHash","isMakerTxPended","swapStatus","isFinished","Finished","i18n_you","i18n_maker","i18n_taker","goToWallet"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAA+C,OAA/C;AAGA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,IAAkBC,KAAlB,EAAyBC,SAAzB,QAA0C,SAA1C;AAEA,OAAOC,OAAP,MAAoB,eAApB;AAIA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAIA,SAAmBC,UAAnB,EAA+BC,YAA/B,QAAmD,oBAAnD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,EAAP,MAAe,MAAf;AAEA,SAASC,MAAT,QAAuB,qBAAvB;IA4BqBC,S,WAnBpBd,OAAO,CAAC;AAAA,MAQOe,IARP,QAQPC,UARO,CAQOD,IARP;AAAA,MASPE,gBATO,QASPA,gBATO;AAAA,SAUF,CACL;AACA;AACA;AACA;AACA;AACA;AANK,GAVE;AAAA,CAAD,C,UAkBPnB,UAAU,CAACC,MAAD,EAAS;AAAEmB,EAAAA,aAAa,EAAE;AAAjB,CAAT,C,EAnBVb,U;;;;;AAsBD;AACA;AACA;AAIE,qBAAYc,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,8DAFT,IAES;;AAAA,iEA4HN,YAAM;AACjB,YAAKC,OAAL,CAAaC,IAAb,CAAkBnB,KAAK,CAACoB,MAAxB;AACD,KA9HkB;;AAAA,QAGTF,OAHS,GAGGD,KAHH,CAGTC,OAHS;AAIjB,UAAKA,OAAL,GAAeA,OAAf;AAEA,UAAKG,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AANiB;AAUlB;;;;WAED,8BAAqB;AAAA;;AAAA,wBASf,KAAKN,KATU;AAAA,UAEjBO,KAFiB,eAEjBA,KAFiB;AAAA,UAGjBC,cAHiB,eAGjBA,cAHiB;AAAA,UAIjBC,UAJiB,eAIjBA,UAJiB;AAAA,UAMfC,MANe,eAKjBC,IALiB,CAMfD,MANe;AAAA,yBAW+B,KAAKV,KAXpC;AAAA,UAWMY,OAXN,gBAWbC,KAXa,CAWJC,MAXI,CAWMF,OAXN;AAAA,UAWmBX,OAXnB,gBAWmBA,OAXnB;;AAanB,UAAI,CAACW,OAAL,EAAc;AACZX,QAAAA,OAAO,CAACC,IAAR,CAAad,YAAY,CAACL,KAAK,CAACgC,QAAP,CAAzB;AACA;AACD;;AAED,UAAI;AACF,YAAMV,IAAI,GAAG,IAAI5B,IAAJ,CAASmC,OAAT,EAAkBlC,OAAO,CAACsC,MAAR,EAAlB,CAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,2BAA+Bb,IAAI,CAACc,IAAL,CAAUC,SAAzC;AAEA,aAAKC,QAAL,CAAc;AAAA,iBAAO;AACnBhB,YAAAA,IAAI,EAAJA,IADmB;AAEnBC,YAAAA,SAAS,EAAED,IAAI,CAACc,IAAL,CAAUf;AAFF,WAAP;AAAA,SAAd;AAKAkB,QAAAA,WAAW,CAAC,YAAM;AAChB,UAAA,MAAI,CAACD,QAAL,CAAc;AAAA,mBAAO;AACnBf,cAAAA,SAAS,EAAED,IAAI,CAACc,IAAL,CAAUf;AADF,aAAP;AAAA,WAAd;AAGD,SAJU,EAIR,GAJQ,CAAX;AAMD,OAfD,CAeE,OAAOmB,KAAP,EAAc;AACdN,QAAAA,OAAO,CAACM,KAAR,CAAcA,KAAd;AACAtC,QAAAA,OAAO,CAACuC,aAAR,CAAsBC,IAAtB,CAA2BzC,SAAS,CAACwC,aAAV,CAAwBE,iBAAnD,EAAsE;AACpEH,UAAAA,KAAK,EAAE;AAD6D,SAAtE;AAGA,aAAKvB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwBd,YAAY,CAACL,KAAK,CAACgC,QAAP,CAApC;AACD;AAED;AACJ;AACA;;AACG;;;WAED,6BAAoB;AAAA,UACVV,IADU,GACkB,KAAKD,KADvB,CACVC,IADU;;AAAA,gCAG0C,KAAKL,KAH/C;AAKtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIX,MAAAA,QAAQ,CAACgB,IAAT,CAAcsB,OAAd,CAAsBC,IAAI,CAACC,SAAL,CAAe,CACnC;AADmC,OAAf,CAAtB;AAID;;;WAED,gCAAuB;AACrB;AACJ;AACG;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;;;;WAME,kBAAS;AAAA,yBAKH,KAAK7B,KALF;AAAA,UAELJ,IAFK,gBAELA,IAFK;AAAA,UAGLK,OAHK,gBAGLA,OAHK;AAAA,UAIGS,MAJH,gBAILC,IAJK,CAIGD,MAJH;AAAA,wBAUH,KAAKN,KAVF;AAAA,UAQLC,IARK,eAQLA,IARK;AAAA,UASLC,SATK,eASLA,SATK;AAYP,UAAMwB,eAAe,GAAGzB,IAAI,CAAC0B,YAAL,CAAkBC,WAAlB,EAAxB;AACA,UAAMC,cAAc,GAAG5B,IAAI,CAAC6B,WAAL,CAAiBF,WAAjB,EAAvB;AAEA,UAAMG,aAAa,GACjB9B,IAAI,CAAC+B,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgCT,eAAhC,EAAiDU,OAAjD,IACAnC,IAAI,CAAC+B,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgCT,eAAhC,EAAiDW,UAAjD,EAFF;AAIA,UAAMC,gBAAgB,GACpBrC,IAAI,CAAC+B,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgCN,cAAhC,EAAgDO,OAAhD,IACAnC,IAAI,CAAC+B,GAAL,CAASC,QAAT,CAAkBC,IAAlB,CAAuBC,QAAvB,CAAgCN,cAAhC,EAAgDQ,UAAhD,EAFF;AAIA,UAAME,sBAAsB,GAAGtC,IAAI,CAACuC,WAAL,CAAiBX,cAAjB,EAAiCO,OAAhE;AACA,UAAMK,yBAAyB,GAAGxC,IAAI,CAACuC,WAAL,CAAiBd,eAAjB,EAAkCU,OAApE,CAxBO,CA0BP;;AAEA,UAAMM,eAAe,GAAGzC,IAAI,CAAC0C,EAAL,CACrBC,KADqB,CACf,GADe,EACVC,GADU,CACN,UAAAC,IAAI;AAAA,eAClBC,QAAQ,CAACD,IAAD,CAAR,IAAkBA,IAAI,CACnBF,KADe,CACT,EADS,EAEfI,MAFe,CAER,UAACC,GAAD,EAAMC,MAAN,EAAcC,KAAd,EAAwB;AAC9B,cAAI,CACF,CADE,EACC,CADD,EACI,CADJ,EACO,CADP,EAEFL,IAAI,CAACM,MAAL,GAAY,CAFV,EAEaN,IAAI,CAACM,MAAL,GAAY,CAFzB,EAE4BN,IAAI,CAACM,MAAL,GAAY,CAFxC,EAE2CN,IAAI,CAACM,MAAL,GAAY,CAFvD,EAGFC,QAHE,CAGOF,KAHP,CAAJ,EAIE,OAAOF,GAAG,GAAGC,MAAb;AACF,cAAIC,KAAK,KAAK,CAAd,EACE,OAAOF,GAAG,GAAG,GAAb;AACF,iBAAOA,GAAP;AACD,SAXe,EAWb,EAXa,CADA;AAAA,OADE,EAcpBK,IAdoB,CAcf,GAde,CAAxB;AAiBA,UAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAEvD,IAAI,CAACwD,IAAL,GAAYxD,IAAI,CAACyD,SAAjB,GAA6BzD,IAAI,CAAC0D,UAD5B;AAEdC,QAAAA,QAAQ,EAAE3D,IAAI,CAACwD,IAAL,GAAYxD,IAAI,CAAC6B,WAAjB,GAA+B7B,IAAI,CAAC0B,YAFhC;AAGdkC,QAAAA,IAAI,EAAE3D,SAAS,CAAC4D,WAHF;AAIdC,QAAAA,MAAM,EAAE,CAAC7D,SAAS,CAAC4D,WAAX,GACN3E,YAAY,CAAC6E,QADP,GAGN,CAAC9D,SAAS,CAAC+D,eAAX,GACE9E,YAAY,CAAC+E,OADf,GAGE/E,YAAY,CAACgF,IAVH;AAWdC,QAAAA,GAAG,EAAE;AAXS,OAAhB;AAaAb,MAAAA,OAAO,CAACa,GAAR,GAAcb,OAAO,CAACM,IAAR,GAAenF,OAAO,CAAC2F,YAAR,CAAqBC,OAArB,CAA6Bf,OAAO,CAACK,QAAR,CAAiBhC,WAAjB,EAA7B,EAA6D2B,OAAO,CAACM,IAArE,CAAf,GAA4F,IAA1G;AAEA,UAAMU,OAAO,GAAG;AACdf,QAAAA,MAAM,EAAEvD,IAAI,CAACwD,IAAL,GAAYxD,IAAI,CAAC0D,UAAjB,GAA8B1D,IAAI,CAACyD,SAD7B;AAEdE,QAAAA,QAAQ,EAAE3D,IAAI,CAACwD,IAAL,GAAYxD,IAAI,CAAC0B,YAAjB,GAAgC1B,IAAI,CAAC6B,WAFjC;AAGd+B,QAAAA,IAAI,EAAE3D,SAAS,CAACsE,WAHF;AAIdT,QAAAA,MAAM,EAAE,CAAC7D,SAAS,CAACsE,WAAX,GACNrF,YAAY,CAAC6E,QADP,GAGN,CAAC9D,SAAS,CAACuE,eAAX,GACEtF,YAAY,CAAC+E,OADf,GAGE/E,YAAY,CAACgF,IAVH;AAWdC,QAAAA,GAAG,EAAE;AAXS,OAAhB;AAaAG,MAAAA,OAAO,CAACH,GAAR,GAAcG,OAAO,CAACV,IAAR,GAAenF,OAAO,CAAC2F,YAAR,CAAqBC,OAArB,CAA6BC,OAAO,CAACX,QAAR,CAAiBhC,WAAjB,EAA7B,EAA6D2C,OAAO,CAACV,IAArE,CAAf,GAA4F,IAA1G;AAGA,UAAMa,UAAsB,GAAG,CAACxE,SAAS,CAACyE,UAAX,GAAwBzF,UAAU,CAACgF,OAAnC,GAA6ChF,UAAU,CAAC0F,QAAvF;AAEA,UAAMC,QAAQ,gBAAG,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,eAArB;AAAqC,QAAA,cAAc,EAAC;AAApD,QAAjB;AACA,UAAMC,UAAU,gBAAG,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iBAArB;AAAuC,QAAA,cAAc,EAAC;AAAtD,QAAnB;AACA,UAAMC,UAAU,gBAAG,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iBAArB;AAAuC,QAAA,cAAc,EAAC;AAAtD,QAAnB;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAI,QAAA,SAAS,EAAC;AAAd,sBACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iBAArB;AAAuC,QAAA,cAAc,EAAC;AAAtD,QADF,CADF,eAIE;AAAK,QAAA,SAAS,EAAC;AAAf,cAA0BrC,eAA1B,CAJF,eAKE;AAAK,QAAA,SAAS,uBAAgBgC,UAAhB;AAAd,SACGA,UAAU,KAAKxF,UAAU,CAACgF,OAA1B,iBACC,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,yBAArB;AAA+C,QAAA,cAAc,EAAC;AAA9D,QAFJ,EAIGQ,UAAU,KAAKxF,UAAU,CAAC0F,QAA1B,iBACC,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,0BAArB;AAAgD,QAAA,cAAc,EAAC;AAA/D,QALJ,CALF,eAaE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE3E,IAAI,CAACwD,IAAL,GAAYsB,UAAZ,GAAyBF,QADlC;AAEE,QAAA,kBAAkB,EAAE,CAAC5E,IAAI,CAACwD,IAF5B;AAGE,QAAA,OAAO,EAAExD,IAAI,CAACwD,IAAL,GAAYlB,sBAAZ,GAAqCR;AAHhD,QADF,eAME,oBAAC,EAAD;AACE,QAAA,MAAM,EAAEwB,OAAO,CAACC,MADlB;AAEE,QAAA,MAAM,EAAED,OAAO,CAACK,QAFlB;AAGE,QAAA,EAAE,EAAEL,OAAO,CAACM,IAHd;AAIE,QAAA,GAAG,EAAEN,OAAO,CAACa,GAJf;AAKE,QAAA,SAAS,EAAE,OALb;AAME,QAAA,MAAM,EAAEb,OAAO,CAACQ;AANlB,QANF,eAcE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE9D,IAAI,CAACwD,IAAL,GAAYoB,QAAZ,GAAuBC,UADhC;AAEE,QAAA,kBAAkB,EAAE7E,IAAI,CAACwD,IAF3B;AAGE,QAAA,OAAO,EAAExD,IAAI,CAACwD,IAAL,GAAYnB,gBAAZ,GAA+BG;AAH1C,QAdF,CAbF,eAiCE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAExC,IAAI,CAACwD,IAAL,GAAYsB,UAAZ,GAAyBF,QADlC;AAEE,QAAA,kBAAkB,EAAE,CAAC5E,IAAI,CAACwD,IAF5B;AAGE,QAAA,OAAO,EAAExD,IAAI,CAACwD,IAAL,GAAYhB,yBAAZ,GAAwCH;AAHnD,QADF,eAME,oBAAC,EAAD;AACE,QAAA,MAAM,EAAEiC,OAAO,CAACf,MADlB;AAEE,QAAA,MAAM,EAAEe,OAAO,CAACX,QAFlB;AAGE,QAAA,EAAE,EAAEW,OAAO,CAACV,IAHd;AAIE,QAAA,GAAG,EAAEU,OAAO,CAACH,GAJf;AAKE,QAAA,SAAS,EAAE,MALb;AAME,QAAA,MAAM,EAAEG,OAAO,CAACR;AANlB,QANF,eAcE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAE9D,IAAI,CAACwD,IAAL,GAAYoB,QAAZ,GAAuBC,UADhC;AAEE,QAAA,kBAAkB,EAAE7E,IAAI,CAACwD,IAF3B;AAGE,QAAA,OAAO,EAAExD,IAAI,CAACwD,IAAL,GAAY1B,aAAZ,GAA4BQ;AAHvC,QAdF,CAjCF,EAsDGmC,UAAU,KAAKxF,UAAU,CAAC0F,QAA1B,iBACC;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,OAAO,EAAE,KAAKI;AAA5B,sBAAwC,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,wBAArB;AAA8C,QAAA,cAAc,EAAC;AAA7D,QAAxC,CADF,CAvDJ,EA4DG;AAAA;AAAS;AACR,wCACGxD,IAAI,CAACC,SAAL,CAAevB,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CADH,CA7DJ,CADF;AAoED;;;;EA9RoC9B,a;SAAlBmB,S","sourcesContent":["import React, { PureComponent, Fragment } from 'react'\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport Swap from 'swap.swap'\r\nimport SwapApp from 'swap.app'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './TurboSwap.scss'\r\n\r\nimport { connect } from 'redaction'\r\nimport helpers, { links, constants } from 'helpers'\r\nimport request from 'common/utils/request'\r\nimport actions from 'redux/actions'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nimport { injectIntl, FormattedMessage } from 'react-intl'\r\nimport { localisedUrl } from 'helpers/locale'\r\n\r\nimport feedback from 'shared/helpers/feedback'\r\n\r\nimport config from 'app-config'\r\n\r\nimport { SwapSide, SwapStatus, SwapTxStatus } from 'common/domain/swap'\r\nimport TxSide from './TxSide'\r\nimport Tx from './Tx'\r\n\r\nimport { Button } from 'components/controls'\r\n\r\n\r\ninterface ITurboSwapState {\r\n  swap: Swap,\r\n  flowState: any,\r\n}\r\n\r\n@injectIntl\r\n@connect(({\r\n/*  user: {\r\n    ethData,\r\n    btcData,\r\n    ghostData,\r\n    nextData,\r\n    tokensData,\r\n  },*/\r\n  pubsubRoom: { peer },\r\n  rememberedOrders,\r\n}) => ({\r\n  //items: [ethData, btcData, ghostData, nextData],\r\n  //currenciesData: [ethData, btcData, ghostData, nextData],\r\n  //tokensData: [...Object.keys(tokensData).map(k => (tokensData[k]))],\r\n  //savedOrders: rememberedOrders.savedOrders,\r\n  //deletedOrders: rememberedOrders.deletedOrders,\r\n  //peer,\r\n}))\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class TurboSwap extends PureComponent<any, ITurboSwapState> {\r\n\r\n/*\r\n  checkingConfirmSuccessTimer: any\r\n  checkingCycleTimer: any*/\r\n\r\n  history = null\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const { history } = props\r\n    this.history = history\r\n\r\n    this.state = {\r\n      swap: null,\r\n      flowState: null,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    const {\r\n      items,\r\n      currenciesData,\r\n      tokensData,\r\n      intl: {\r\n        locale\r\n      },\r\n      //deletedOrders\r\n    } = this.props\r\n\r\n    let { match: { params: { orderId } }, history } = this.props\r\n\r\n    if (!orderId) {\r\n      history.push(localisedUrl(links.exchange))\r\n      return\r\n    }\r\n\r\n    try {\r\n      const swap = new Swap(orderId, SwapApp.shared())\r\n      console.log(`Front uses flow ${swap.flow._flowName}`);\r\n\r\n      this.setState(() => ({\r\n        swap,\r\n        flowState: swap.flow.state\r\n      }))\r\n\r\n      setInterval(() => {\r\n        this.setState(() => ({\r\n          flowState: swap.flow.state\r\n        }))\r\n      }, 300)\r\n\r\n    } catch (error) {\r\n      console.error(error)\r\n      actions.notifications.show(constants.notifications.ErrorNotification, {\r\n        error: 'Sorry, but this order do not exsit already'\r\n      })\r\n      this.props.history.push(localisedUrl(links.exchange))\r\n    }\r\n\r\n    /*if (!this.props.savedOrders.includes(orderId)) {\r\n      this.setSaveSwapId(orderId)\r\n    }*/\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { swap, /*deletedOrders*/ } = this.state\r\n\r\n    const { /*match: { params: { orderId } }, savedOrders*/ } = this.props\r\n\r\n/*    if (swap !== null) {\r\n      console.log('checkingCycle')\r\n\r\n      const checkingCycle = setInterval(() => {\r\n\r\n        if (isFinallyFinished) {\r\n          feedback.swap.finished()\r\n        }\r\n        if (isStoppedSwap) {\r\n          feedback.swap.stopped()\r\n        }\r\n\r\n        if (isFinallyFinished || isStoppedSwap) {\r\n          clearInterval(checkingCycle)\r\n          return\r\n        }\r\n\r\n        this.isBalanceEnough()\r\n      }, 5000)\r\n    }*/\r\n\r\n    feedback.swap.started(JSON.stringify({\r\n      // todo\r\n    }))\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    /*clearInterval(this.checkingCycleTimer)\r\n    clearTimeout(this.checkingConfirmSuccessTimer)*/\r\n  }\r\n\r\n\r\n\r\n/*  saveThisSwap = (orderId) => {\r\n    actions.core.rememberOrder(orderId)\r\n  }\r\n\r\n  deleteThisSwap = (orderId) => {\r\n    actions.core.saveDeletedOrder(orderId)\r\n    actions.core.forgetOrders(orderId)\r\n    window.swap = null\r\n  }\r\n\r\n  setSaveSwapId = (orderId) => {\r\n    let swapsId = JSON.parse(localStorage.getItem('swapId'))\r\n\r\n    if (swapsId === null || swapsId.length === 0) {\r\n      swapsId = []\r\n    }\r\n    if (!swapsId.includes(orderId)) {\r\n      swapsId.push(orderId)\r\n    }\r\n    localStorage.setItem('swapId', JSON.stringify(swapsId))\r\n  }\r\n*/\r\n\r\n  /*isBalanceEnough = () => {\r\n    //...\r\n  }*/\r\n\r\n  goToWallet = () => {\r\n    this.history.push(links.wallet)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      peer,\r\n      history,\r\n      intl: { locale }\r\n    } = this.props\r\n\r\n    const {\r\n      swap,\r\n      flowState,\r\n    } = this.state\r\n\r\n    const sellCurrencyKey = swap.sellCurrency.toLowerCase()\r\n    const buyCurrencyKey = swap.buyCurrency.toLowerCase()\r\n\r\n    const myAddressSend =\r\n      swap.app.services.auth.accounts[sellCurrencyKey].address ||\r\n      swap.app.services.auth.accounts[sellCurrencyKey].getAddress()\r\n\r\n    const myAddressReceive =\r\n      swap.app.services.auth.accounts[buyCurrencyKey].address ||\r\n      swap.app.services.auth.accounts[buyCurrencyKey].getAddress()\r\n\r\n    const participantAddressSend = swap.participant[buyCurrencyKey].address\r\n    const participantAddressReceive = swap.participant[sellCurrencyKey].address\r\n\r\n    //const isToken = helpers.ethToken.isEthToken({ name: currency })\r\n\r\n    const swapIdShortened = swap.id\r\n      .split('-').map(part =>\r\n        parseInt(part) || part\r\n          .split('')\r\n          .reduce((acc, letter, index) => {\r\n            if ([\r\n              0, 1, 2, 3,\r\n              part.length-4, part.length-3, part.length-2, part.length-1\r\n            ].includes(index))\r\n              return acc + letter\r\n            if (index === 4)\r\n              return acc + '…'\r\n            return acc\r\n          }, '')\r\n      ).join('-')\r\n\r\n\r\n    const takerTx = {\r\n      amount: swap.isMy ? swap.buyAmount : swap.sellAmount,\r\n      currency: swap.isMy ? swap.buyCurrency : swap.sellCurrency,\r\n      hash: flowState.takerTxHash,\r\n      status: !flowState.takerTxHash ?\r\n        SwapTxStatus.Expected\r\n        :\r\n        !flowState.isTakerTxPended ?\r\n          SwapTxStatus.Pending\r\n          :\r\n          SwapTxStatus.Done,\r\n      url: null,\r\n    }\r\n    takerTx.url = takerTx.hash ? helpers.transactions.getLink(takerTx.currency.toLowerCase(), takerTx.hash) : null\r\n\r\n    const makerTx = {\r\n      amount: swap.isMy ? swap.sellAmount : swap.buyAmount,\r\n      currency: swap.isMy ? swap.sellCurrency : swap.buyCurrency,\r\n      hash: flowState.makerTxHash,\r\n      status: !flowState.makerTxHash ?\r\n        SwapTxStatus.Expected\r\n        :\r\n        !flowState.isMakerTxPended ?\r\n          SwapTxStatus.Pending\r\n          :\r\n          SwapTxStatus.Done,\r\n      url: null,\r\n    }\r\n    makerTx.url = makerTx.hash ? helpers.transactions.getLink(makerTx.currency.toLowerCase(), makerTx.hash) : null\r\n\r\n\r\n    const swapStatus: SwapStatus = !flowState.isFinished ? SwapStatus.Pending : SwapStatus.Finished\r\n\r\n    const i18n_you = <FormattedMessage id=\"TurboSwap_You\" defaultMessage=\"You\" />\r\n    const i18n_maker = <FormattedMessage id=\"TurboSwap_Maker\" defaultMessage=\"Maker\" />\r\n    const i18n_taker = <FormattedMessage id=\"TurboSwap_Taker\" defaultMessage=\"Taker\" />\r\n\r\n    return (\r\n      <div styleName=\"turboSwap\">\r\n        <h1 styleName=\"pageTitle\">\r\n          <FormattedMessage id=\"TurboSwap_Title\" defaultMessage=\"Turbo swap\" />\r\n        </h1>\r\n        <div styleName=\"swapId\">#{swapIdShortened}</div>\r\n        <div styleName={`swapStatus ${swapStatus}`}>\r\n          {swapStatus === SwapStatus.Pending &&\r\n            <FormattedMessage id=\"TurboSwap_StatusPending\" defaultMessage=\"Pending...\" />\r\n          }\r\n          {swapStatus === SwapStatus.Finished &&\r\n            <FormattedMessage id=\"TurboSwap_StatusFinished\" defaultMessage=\"Finished...\" />\r\n          }\r\n        </div>\r\n        <div styleName=\"blockchain\">\r\n          <TxSide\r\n            title={swap.isMy ? i18n_taker : i18n_you}\r\n            isTitleHighlighted={!swap.isMy}\r\n            address={swap.isMy ? participantAddressSend : myAddressSend}\r\n          />\r\n          <Tx\r\n            amount={takerTx.amount}\r\n            ticker={takerTx.currency}\r\n            id={takerTx.hash}\r\n            url={takerTx.url}\r\n            direction={'right'}\r\n            status={takerTx.status}\r\n          />\r\n          <TxSide\r\n            title={swap.isMy ? i18n_you : i18n_maker}\r\n            isTitleHighlighted={swap.isMy}\r\n            address={swap.isMy ? myAddressReceive : participantAddressReceive}\r\n          />\r\n        </div>\r\n        <div styleName=\"blockchain\">\r\n          <TxSide\r\n            title={swap.isMy ? i18n_taker : i18n_you}\r\n            isTitleHighlighted={!swap.isMy}\r\n            address={swap.isMy ? participantAddressReceive : myAddressReceive}\r\n          />\r\n          <Tx\r\n            amount={makerTx.amount}\r\n            ticker={makerTx.currency}\r\n            id={makerTx.hash}\r\n            url={makerTx.url}\r\n            direction={'left'}\r\n            status={makerTx.status}\r\n          />\r\n          <TxSide\r\n            title={swap.isMy ? i18n_you : i18n_maker}\r\n            isTitleHighlighted={swap.isMy}\r\n            address={swap.isMy ? myAddressSend : participantAddressSend}\r\n          />\r\n        </div>\r\n\r\n        {swapStatus === SwapStatus.Finished &&\r\n          <div styleName=\"checkBalanceButtonWrapper\">\r\n            <Button brand onClick={this.goToWallet}><FormattedMessage id=\"swapProgressGoToWallet\" defaultMessage=\"Check balance\" /></Button>\r\n          </div>\r\n        }\r\n\r\n        {false && //debug\r\n          <code>\r\n            {JSON.stringify(flowState, null, 2)}\r\n          </code>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}]}