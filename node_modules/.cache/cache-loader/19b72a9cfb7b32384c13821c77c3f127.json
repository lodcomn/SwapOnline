{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\BtcMultisignConfirmTx\\BtcMultisignConfirmTx.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\BtcMultisignConfirmTx\\BtcMultisignConfirmTx.tsx","mtime":1614842913974},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/BtcMultisignConfirmTx/BtcMultisignConfirmTx.tsx"],"names":["React","Fragment","PropTypes","helpers","actions","Link","connect","cssModules","defaultStyles","styles","Modal","FieldLabel","Input","Button","InlineLoader","Tooltip","FormattedMessage","injectIntl","defineMessages","redirectTo","lsDataCache","langPrefix","langLabels","title","id","defaultMessage","noticeUp","noticeFetching","confirmTx","dismatchTx","youCantSignThis","goToWallet","buttonClose","BtcMultisignConfirmTx","btcMultisigUserData","user","btcData","allowMultiple","props","handleClose","state","useBackendId","txId","txRaw","txData","from","to","address","amount","name","setState","isConfirming","btcmultisig","signMultiSign","wallet","signedTX","broadcastTx","btcTxId","txid","multisigTx","backendId","txInfoCache","senderAddress","receiverAddress","confirmed","push","key","time","data","txInfoUrl","transactions","getTxRouter","isError","rejectTx","onClose","modals","close","step","isControlFetching","isTxHolder","setTimeout","fetchTx","destination","sender","addressToWallet","fetchRawTx","then","txAuthedData","parseRawTX","rawTx","txDataParsed","publicKey","toString","holder","isOur","intl","showCloseButton","debugShowTXB","debugShowInput","debugShowOutput","linked","all","formatMessage","handleGoToWallet","marginBottom","textAlign","br","currency","balance","handleConfirm","handleReject","Component","string","object"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\nimport config from 'app-config'\r\n\r\nimport cssModules from 'react-css-modules'\r\n\r\nimport defaultStyles from '../Styles/default.scss'\r\nimport styles from './BtcMultisignConfirmTx.scss'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Button from 'components/controls/Button/Button'\r\nimport InlineLoader from 'components/loaders/InlineLoader/InlineLoader'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport links from 'helpers/links'\r\n\r\nimport redirectTo from 'helpers/redirectTo'\r\nimport lsDataCache from 'helpers/lsDataCache'\r\n\r\nconst langPrefix = `multiSignConfirmTxModal`\r\nconst langLabels = defineMessages({\r\n  title: {\r\n    id: `${langPrefix}_Title`,\r\n    defaultMessage: `Подтверждение BTC Multisign транзакции`,\r\n  },\r\n  noticeUp: {\r\n    id: `${langPrefix}_UpNotice`,\r\n    defaultMessage: `Ознакомьтесь с транзакцией и подтвердите её. Если вы против списания, отмените тразакцию`,\r\n  },\r\n  noticeFetching: {\r\n    id: `${langPrefix}_NoticeFetching`,\r\n    defaultMessage: `Загрузка...`,\r\n  },\r\n  confirmTx: {\r\n    id: `${langPrefix}_ConfirmTx`,\r\n    defaultMessage: `Подтвердить`,\r\n  },\r\n  dismatchTx: {\r\n    id: `${langPrefix}_DismatchTx`,\r\n    defaultMessage: `Отклонить`,\r\n  },\r\n  youCantSignThis: {\r\n    id: `${langPrefix}_YouCantSignThisTx`,\r\n    defaultMessage: `У вас нет прав для подписи этой транзакции (проверьте, что у вас создан мультисиг)`,\r\n  },\r\n  goToWallet: {\r\n    id: `${langPrefix}_GoToWalletPage`,\r\n    defaultMessage: `Открыть кошелек`,\r\n  },\r\n  buttonClose: {\r\n    id: `${langPrefix}_ButtonClose`,\r\n    defaultMessage: `Закрыть`,\r\n  },\r\n})\r\n\r\n@injectIntl\r\n@connect(({ user: { btcMultisigUserData } }) => ({\r\n  btcData: btcMultisigUserData,\r\n}))\r\n@cssModules({ ...defaultStyles, ...styles }, { allowMultiple: true })\r\nexport default class BtcMultisignConfirmTx extends React.Component<any, any> {\r\n  props: any\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    data: PropTypes.object,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      step: `fetchgin`,\r\n      isControlFetching: true,\r\n      isTxHolder: true,\r\n      address: ``,\r\n      amount: ``,\r\n      from: ``,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(async () => {\r\n      const {\r\n        data: { txData, txId },\r\n      } = this.props\r\n\r\n      if (txId) {\r\n        const txData: any = await actions.multisigTx.fetchTx(txId)\r\n\r\n        const { destination: address, sender: from, amount } = txData\r\n\r\n        const wallet = actions.btcmultisig.addressToWallet(from)\r\n\r\n        if (!wallet) {\r\n          this.setState({\r\n            step: `dinned`,\r\n          })\r\n          return\r\n        }\r\n\r\n        this.setState(\r\n          {\r\n            step: `txInfo`,\r\n            txId,\r\n            txData: {\r\n              ...txData,\r\n              wallet,\r\n            },\r\n            address,\r\n            from,\r\n            amount,\r\n          },\r\n          () => {\r\n            // Fetching full tx info (rawTX)\r\n            actions.multisigTx.fetchRawTx(from, txId).then((txAuthedData: any) => {\r\n              if (txAuthedData) {\r\n                actions.btcmultisig.parseRawTX(txAuthedData.rawTx).then((txDataParsed) => {\r\n                  this.setState({\r\n                    txRaw: txAuthedData.rawTx,\r\n                    txData: txDataParsed,\r\n                    isTxHolder: wallet.publicKey.toString(`Hex`) === txAuthedData.holder,\r\n                    isControlFetching: false,\r\n                  })\r\n                })\r\n              } else {\r\n                this.setState({\r\n                  step: `dinned`,\r\n                })\r\n              }\r\n            })\r\n          }\r\n        )\r\n      } else {\r\n        const txDataParsed = await actions.btcmultisig.parseRawTX(txData)\r\n\r\n        if (!txDataParsed.isOur) {\r\n          this.setState({\r\n            step: `dinned`,\r\n          })\r\n          return\r\n        }\r\n\r\n        this.setState({\r\n          step: `txInfo`,\r\n          txRaw: txData,\r\n          txData: txDataParsed,\r\n          address: txDataParsed.to,\r\n          from: txDataParsed.from,\r\n          amount: txDataParsed.amount,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleGoToWallet = () => {\r\n    this.handleClose()\r\n  }\r\n\r\n  handleConfirm = async () => {\r\n    const { txId: useBackendId, txRaw, txData, from, address: to, amount } = this.state\r\n\r\n    const { name } = this.props\r\n\r\n    this.setState({\r\n      isConfirming: true,\r\n    })\r\n\r\n    const signedTX = await actions.btcmultisig.signMultiSign(txRaw, txData.wallet)\r\n    const btcTxId = await actions.btcmultisig.broadcastTx(signedTX)\r\n    let txId = false\r\n\r\n    if (btcTxId && btcTxId.txid) txId = btcTxId.txid\r\n\r\n    if (useBackendId) {\r\n      const backendId = await actions.multisigTx.confirmTx(from, useBackendId, signedTX, txId)\r\n    }\r\n\r\n    if (txId) {\r\n      // Сохраняем транзакцию в кеш\r\n      const txInfoCache = {\r\n        amount,\r\n        senderAddress: from,\r\n        receiverAddress: to,\r\n        confirmed: false,\r\n      }\r\n\r\n      lsDataCache.push({\r\n        key: `TxInfo_btc_${txId}`,\r\n        time: 3600,\r\n        data: txInfoCache,\r\n      })\r\n\r\n      this.handleClose()\r\n\r\n      const txInfoUrl = helpers.transactions.getTxRouter('btc', txId)\r\n      redirectTo(txInfoUrl)\r\n    } else {\r\n      this.setState({\r\n        isError: true,\r\n        isConfirming: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleReject = async () => {\r\n    const { txId: useBackendId, txData, from } = this.state\r\n    if (useBackendId) {\r\n      const backendId = await actions.multisigTx.rejectTx(from, useBackendId)\r\n      this.handleClose()\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { name, data, onClose } = this.props\r\n\r\n    if (typeof onClose === 'function') {\r\n      onClose()\r\n    }\r\n\r\n    if (typeof data.onClose === 'function') {\r\n      data.onClose()\r\n    }\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      intl,\r\n      data: { showCloseButton },\r\n    } = this.props\r\n\r\n    const {\r\n      step,\r\n      txData,\r\n      isConfirming,\r\n      address,\r\n      amount,\r\n      from,\r\n      isControlFetching,\r\n      isTxHolder,\r\n    } = this.state\r\n\r\n    const { debugShowTXB, debugShowInput, debugShowOutput } = this.state\r\n\r\n    const linked = Link.all(this, 'address', 'amount', 'from')\r\n\r\n    return (\r\n      <Modal\r\n        name={name}\r\n        title={`${intl.formatMessage(langLabels.title)}`}\r\n        onClose={this.handleClose}\r\n        showCloseButton={showCloseButton}\r\n      >\r\n        {step !== `dinned` && (\r\n          <p styleName=\"notice\">\r\n            <FormattedMessage {...langLabels.noticeUp} />\r\n          </p>\r\n        )}\r\n        <div styleName=\"confirmTxModal\">\r\n          {step === `fetchgin` && (\r\n            <p styleName=\"notice\">\r\n              <FormattedMessage {...langLabels.noticeFetching} />\r\n            </p>\r\n          )}\r\n          {step === `dinned` && (\r\n            <Fragment>\r\n              <p styleName=\"rednotes\">\r\n                <FormattedMessage {...langLabels.youCantSignThis} />\r\n              </p>\r\n              <Button styleName=\"buttonCenter\" blue onClick={this.handleGoToWallet}>\r\n                <FormattedMessage {...langLabels.goToWallet} />\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n          {step === `txInfo` && (\r\n            <Fragment>\r\n              <div styleName=\"highLevel\" style={{ marginBottom: '20px' }}>\r\n                <FieldLabel>\r\n                  <FormattedMessage\r\n                    id=\"BtcMultisignConfirmTx_FromAddress\"\r\n                    defaultMessage=\"Оплата с кошелька\"\r\n                  />{' '}\r\n                </FieldLabel>\r\n                <Input valueLink={linked.from} disabled styleName=\"input fakeInput\" withMargin />\r\n              </div>\r\n              <div styleName=\"highLevel\" style={{ marginBottom: '20px' }}>\r\n                <FieldLabel>\r\n                  <FormattedMessage id=\"Withdrow1194\" defaultMessage=\"Address \" />{' '}\r\n                  <Tooltip id=\"WtH203\">\r\n                    <div style={{ textAlign: 'center' }}>\r\n                      <FormattedMessage\r\n                        id=\"WTH275\"\r\n                        defaultMessage=\"Make sure the wallet you{br}are sending the funds to supports {currency}\"\r\n                        values={{ br: <br />, currency: `BTC` }}\r\n                      />\r\n                    </div>\r\n                  </Tooltip>\r\n                </FieldLabel>\r\n                <Input valueLink={linked.address} disabled styleName=\"input fakeInput\" withMargin />\r\n              </div>\r\n              <div styleName=\"lowLevel\" style={{ marginBottom: '30px' }}>\r\n                <p styleName=\"balance walletBalance\">\r\n                  {txData.wallet.balance} {`BTC`}\r\n                </p>\r\n                <FieldLabel>\r\n                  <FormattedMessage id=\"Withdrow118\" defaultMessage=\"Amount \" />\r\n                </FieldLabel>\r\n\r\n                <div styleName=\"group\">\r\n                  <Input styleName=\"input fakeInput\" valueLink={linked.amount} disabled />\r\n                </div>\r\n              </div>\r\n              {isControlFetching ? (\r\n                <div styleName=\"buttonsHolder_fetching\">\r\n                  <InlineLoader />\r\n                </div>\r\n              ) : (\r\n                <div styleName=\"buttonsHolder\">\r\n                  {!isTxHolder && (\r\n                    <Button\r\n                      styleName=\"buttonFull\"\r\n                      blue\r\n                      disabled={isConfirming || isTxHolder}\r\n                      onClick={this.handleConfirm}\r\n                      fullWidth\r\n                    >\r\n                      <FormattedMessage {...langLabels.confirmTx} />\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    styleName=\"buttonFull\"\r\n                    blue\r\n                    disabled={isConfirming}\r\n                    onClick={isTxHolder ? this.handleClose : this.handleReject}\r\n                    fullWidth\r\n                  >\r\n                    <FormattedMessage\r\n                      {...(isTxHolder ? langLabels.buttonClose : langLabels.dismatchTx)}\r\n                    />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}