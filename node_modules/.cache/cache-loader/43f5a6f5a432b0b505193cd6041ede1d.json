{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\constants\\TRADE_TICKERS.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\constants\\TRADE_TICKERS.ts","mtime":1614842914096},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IGNvbmZpZyBmcm9tICdoZWxwZXJzL2V4dGVybmFsQ29uZmlnJzsKCnZhciBHZXRDdXN0cm9tRVJDMjAgPSBmdW5jdGlvbiBHZXRDdXN0cm9tRVJDMjAoKSB7CiAgdmFyIGNvbmZpZ1N0b3JhZ2UgPSBwcm9jZXNzLmVudi5NQUlOTkVUID8gJ21haW5uZXQnIDogJ3Rlc3RuZXQnOwogIHZhciB0b2tlbnNJbmZvID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3VzdG9tRVJDJykpOwogIGlmICghdG9rZW5zSW5mbyB8fCAhdG9rZW5zSW5mb1tjb25maWdTdG9yYWdlXSkgcmV0dXJuIHt9OwogIHJldHVybiB0b2tlbnNJbmZvW2NvbmZpZ1N0b3JhZ2VdOwp9OwoKdmFyIHN3YXAgPSBjb25maWcgJiYgY29uZmlnLmlzV2lkZ2V0ID8gW10gOiBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KCFjb25maWcub3B0cy5jdXJFbmFibGVkIHx8IGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQuZXRoICYmIGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQuYnRjID8gWydFVEgtQlRDJ10gOiBbXSksIF90b0NvbnN1bWFibGVBcnJheSghY29uZmlnLm9wdHMuY3VyRW5hYmxlZCB8fCBjb25maWcub3B0cy5jdXJFbmFibGVkLmV0aCAmJiBjb25maWcub3B0cy5jdXJFbmFibGVkLmdob3N0ID8gWydFVEgtR0hPU1QnXSA6IFtdKSwgX3RvQ29uc3VtYWJsZUFycmF5KCFjb25maWcub3B0cy5jdXJFbmFibGVkIHx8IGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQuZXRoICYmIGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQubmV4dCA/IFsnRVRILU5FWFQnXSA6IFtdKSk7Ck9iamVjdC5rZXlzKGNvbmZpZy5lcmMyMCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgc3dhcC5wdXNoKCIiLmNvbmNhdChrZXkudG9VcHBlckNhc2UoKSwgIi1CVEMiKSk7CiAgaWYgKCFjb25maWcub3B0cy5jdXJFbmFibGVkIHx8IGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQuZ2hvc3QpIHN3YXAucHVzaCgiIi5jb25jYXQoa2V5LnRvVXBwZXJDYXNlKCksICItR0hPU1QiKSk7CiAgaWYgKCFjb25maWcub3B0cy5jdXJFbmFibGVkIHx8IGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQubmV4dCkgc3dhcC5wdXNoKCIiLmNvbmNhdChrZXkudG9VcHBlckNhc2UoKSwgIi1ORVhUIikpOwp9KTsKCmlmIChjb25maWcgJiYgY29uZmlnLmlzV2lkZ2V0KSB7CiAgc3dhcC5sZW5ndGggPSAwOwoKICBpZiAod2luZG93LndpZGdldEVSQzIwVG9rZW5zICYmIE9iamVjdC5rZXlzKHdpbmRvdy53aWRnZXRFUkMyMFRva2VucykubGVuZ3RoKSB7CiAgICBPYmplY3Qua2V5cyh3aW5kb3cud2lkZ2V0RVJDMjBUb2tlbnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICBzd2FwLnB1c2goIiIuY29uY2F0KGtleS50b1VwcGVyQ2FzZSgpLCAiLUJUQyIpKTsKICAgICAgaWYgKCFjb25maWcub3B0cy5jdXJFbmFibGVkIHx8IGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQuZ2hvc3QpIHN3YXAucHVzaCgiIi5jb25jYXQoa2V5LnRvVXBwZXJDYXNlKCksICItR0hPU1QiKSk7CiAgICAgIGlmICghY29uZmlnLm9wdHMuY3VyRW5hYmxlZCB8fCBjb25maWcub3B0cy5jdXJFbmFibGVkLm5leHQpIHN3YXAucHVzaCgiIi5jb25jYXQoa2V5LnRvVXBwZXJDYXNlKCksICItTkVYVCIpKTsKICAgIH0pOwogIH0gZWxzZSB7CiAgICBzd2FwLnB1c2goIiIuY29uY2F0KGNvbmZpZy5lcmMyMHRva2VuLnRvVXBwZXJDYXNlKCksICItQlRDIikpOwogIH0KCiAgc3dhcC5wdXNoKCdFVEgtQlRDJyk7CiAgaWYgKCFjb25maWcub3B0cy5jdXJFbmFibGVkIHx8IGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQuZ2hvc3QpIHN3YXAucHVzaCgnRVRILUdIT1NUJyk7CiAgaWYgKCFjb25maWcub3B0cy5jdXJFbmFibGVkIHx8IGNvbmZpZy5vcHRzLmN1ckVuYWJsZWQubmV4dCkgc3dhcC5wdXNoKCdFVEgtTkVYVCcpOwp9IGVsc2UgewogIHZhciBjdXN0b21FUkMgPSBHZXRDdXN0cm9tRVJDMjAoKTsgLy8gc3dhcC5wdXNoKCdHSE9TVC1CVEMnKQogIC8vIHN3YXAucHVzaCgnR0hPU1QtRVRIJykKCiAgT2JqZWN0LmtleXMoY3VzdG9tRVJDKS5mb3JFYWNoKGZ1bmN0aW9uICh0b2tlbkNvbnRyYWN0KSB7CiAgICB2YXIgc3ltYm9sID0gY3VzdG9tRVJDW3Rva2VuQ29udHJhY3RdLnN5bWJvbDsKICAgIHZhciBwYWlyID0gIiIuY29uY2F0KHN5bWJvbC50b1VwcGVyQ2FzZSgpLCAiLUJUQyIpOwogICAgaWYgKHN3YXAuaW5kZXhPZihwYWlyKSA9PT0gLTEpIHN3YXAucHVzaChwYWlyKTsKCiAgICBpZiAoIWNvbmZpZy5vcHRzLmN1ckVuYWJsZWQgfHwgY29uZmlnLm9wdHMuY3VyRW5hYmxlZC5naG9zdCkgewogICAgICB2YXIgZ2hvc3RQYWlyID0gIiIuY29uY2F0KHN5bWJvbC50b1VwcGVyQ2FzZSgpLCAiLUdIT1NUIik7CiAgICAgIGlmIChzd2FwLmluZGV4T2YoZ2hvc3RQYWlyKSA9PT0gLTEpIHN3YXAucHVzaChnaG9zdFBhaXIpOwogICAgfQoKICAgIGlmICghY29uZmlnLm9wdHMuY3VyRW5hYmxlZCB8fCBjb25maWcub3B0cy5jdXJFbmFibGVkLm5leHQpIHsKICAgICAgdmFyIG5leHRQYWlyID0gIiIuY29uY2F0KHN5bWJvbC50b1VwcGVyQ2FzZSgpLCAiLU5FWFQiKTsKICAgICAgaWYgKHN3YXAuaW5kZXhPZihuZXh0UGFpcikgPT09IC0xKSBzd2FwLnB1c2gobmV4dFBhaXIpOwogICAgfQogIH0pOwp9CgpleHBvcnQgZGVmYXVsdCBfdG9Db25zdW1hYmxlQXJyYXkoc3dhcCk7"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/helpers/constants/TRADE_TICKERS.ts"],"names":["config","GetCustromERC20","configStorage","process","env","MAINNET","tokensInfo","JSON","parse","localStorage","getItem","swap","isWidget","opts","curEnabled","eth","btc","ghost","next","Object","keys","erc20","forEach","key","push","toUpperCase","length","window","widgetERC20Tokens","erc20token","customERC","tokenContract","symbol","pair","indexOf","ghostPair","nextPair"],"mappings":"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","sourcesContent":["import config from 'helpers/externalConfig'\r\n\r\n\r\nconst GetCustromERC20 = () => {\r\n  const configStorage = (process.env.MAINNET) ? 'mainnet' : 'testnet'\r\n\r\n  let tokensInfo = JSON.parse(localStorage.getItem('customERC'))\r\n  if (!tokensInfo || !tokensInfo[configStorage]) return {}\r\n  return tokensInfo[configStorage]\r\n}\r\n\r\nconst swap = (config && config.isWidget) ?\r\n  []\r\n  :\r\n  [\r\n    ...(!config.opts.curEnabled || (config.opts.curEnabled.eth && config.opts.curEnabled.btc)) ? ['ETH-BTC'] : [],\r\n    ...(!config.opts.curEnabled || (config.opts.curEnabled.eth && config.opts.curEnabled.ghost)) ? ['ETH-GHOST'] : [],\r\n    ...(!config.opts.curEnabled || (config.opts.curEnabled.eth && config.opts.curEnabled.next)) ? ['ETH-NEXT'] : [],\r\n  ]\r\n\r\nObject.keys(config.erc20)\r\n  .forEach(key => {\r\n    swap.push(`${key.toUpperCase()}-BTC`)\r\n    if (!config.opts.curEnabled || config.opts.curEnabled.ghost) swap.push(`${key.toUpperCase()}-GHOST`)\r\n    if (!config.opts.curEnabled || config.opts.curEnabled.next) swap.push(`${key.toUpperCase()}-NEXT`)\r\n  })\r\n\r\n\r\nif (config && config.isWidget) {\r\n  swap.length = 0\r\n  if (window.widgetERC20Tokens && Object.keys(window.widgetERC20Tokens).length) {\r\n    Object.keys(window.widgetERC20Tokens).forEach((key) => {\r\n      swap.push(`${key.toUpperCase()}-BTC`)\r\n      if (!config.opts.curEnabled || config.opts.curEnabled.ghost) swap.push(`${key.toUpperCase()}-GHOST`)\r\n      if (!config.opts.curEnabled || config.opts.curEnabled.next) swap.push(`${key.toUpperCase()}-NEXT`)\r\n    })\r\n  } else {\r\n    swap.push(`${config.erc20token.toUpperCase()}-BTC`)\r\n  }\r\n  swap.push('ETH-BTC')\r\n  if (!config.opts.curEnabled || config.opts.curEnabled.ghost) swap.push('ETH-GHOST')\r\n  if (!config.opts.curEnabled || config.opts.curEnabled.next) swap.push('ETH-NEXT')\r\n} else {\r\n  const customERC = GetCustromERC20()\r\n  // swap.push('GHOST-BTC')\r\n  // swap.push('GHOST-ETH')\r\n  Object.keys(customERC).forEach((tokenContract) => {\r\n    const symbol = customERC[tokenContract].symbol\r\n    const pair = `${symbol.toUpperCase()}-BTC`\r\n\r\n    if (swap.indexOf(pair) === -1) swap.push(pair)\r\n\r\n    if (!config.opts.curEnabled || config.opts.curEnabled.ghost) {\r\n      const ghostPair = `${symbol.toUpperCase()}-GHOST`\r\n      if (swap.indexOf(ghostPair) === -1) swap.push(ghostPair)\r\n    }\r\n\r\n    if (!config.opts.curEnabled || config.opts.curEnabled.next) {\r\n      const nextPair = `${symbol.toUpperCase()}-NEXT`\r\n      if (swap.indexOf(nextPair) === -1) swap.push(nextPair)\r\n    }\r\n  })\r\n}\r\nexport default [\r\n  ...swap,\r\n]\r\n"]}]}