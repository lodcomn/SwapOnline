{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Exchange\\Exchange.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Exchange\\Exchange.tsx","mtime":1614852532615},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Exchange/Exchange.tsx"],"names":["React","Component","Fragment","Link","ThemeTooltip","CSSModules","styles","connect","actions","BigNumber","Redirect","getState","reducers","SelectGroup","Button","Promo","Quote","HowItWorks","VideoAndFeatures","InlineLoader","FormattedMessage","injectIntl","localisedUrl","config","SwapApp","helpers","localStorage","getPairFees","constants","metamask","feedback","links","animate","Switching","AddressSelect","AddressType","AddressRole","SwapMode","NetworkStatus","Orders","turboSwap","Toggle","TurboIcon","COIN_DATA","COIN_MODEL","COIN_TYPE","allowedCoins","opts","curEnabled","btc","eth","ghost","next","isDark","getItem","isExchangeAllowed","currencies","filter","c","isErc","Object","keys","erc20","map","i","toLowerCase","includes","value","isAllowedCoin","filterIsPartial","orders","order","isPartial","isProcessing","isHidden","sellAmount","isGreaterThan","buyAmount","subTitle","sell","sellTicker","buy","buyTicker","isWidgetBuild","isWidget","bannedPeers","Exchange","rememberedOrders","swapHistory","history","core","hiddenCoinsList","user","ethData","btcData","ghostData","nextData","tokensData","activeFiat","rest","partialItems","allCurrencyies","items","addSelectedItems","addPartialItems","allOrders","currenciesData","k","decline","savedOrders","userEthAddress","address","usersData","values","coinData","allowMultiple","props","window","scrollY","innerHeight","scrollTrigger","classList","add","document","removeEventListener","rmScrollAdvice","match","params","buyValue","sellValue","state","getCurrency","haveCurrency","handleSetHaveValue","checkValidUrl","avaliablesBuyCurrency","pairs","selectPairPartial","el","handleSetGetValue","filterSameVale","locale","intl","isOnlyForm","location","hash","push","exchange","coin","fiatRates","getExchangeRate","exRate","console","error","fetchFiatExRate","exHaveRate","exGetRate","setState","createOffer","started","modals","open","Offer","sellCurrency","buyCurrency","checkParams","amount","balance","fromType","pairFees","balances","isSellToken","ethToken","isEthToken","name","isBuyToken","balanceIsOk","needEthFee","isLessThan","ETH","byCoins","fee","toUpperCase","isUTXO","Custom","plus","getWallet","currency","sellFee","sellCoin","buyFee","buyCoin","alertMessage","toNumber","br","AlertWindow","title","message","canClose","actionType","haveAmount","haveType","haveTicker","getTicker","exchangeForm","requestedSwap","checkSwapAllow","getBalance","length","sendRequestForPartial","declinedExistedSwapIndex","handleGoTrade","getDeclinedExistedSwapIndex","openModalDeclineOrders","indexOfDecline","shared","services","declineSwap","getSwapById","undefined","DeclineOrdersModal","peer","orderId","fromAddress","toAddress","getAmount","maxAmount","maxBuyAmount","log","String","newValues","isEqualTo","destination","isWaitForPeerAnswer","requestTimeoutSec","requestTimeout","setTimeout","banPeer","getLinkToDeclineSwap","setDeclinedOffer","onRequestAnswer","newOrder","isAccepted","clearTimeout","redirectToSwap","isTurbo","Turbo","Atomic","id","unfinishedOrder","item","participant","wayToDeclinedOrder","assign","partialCurrency","partialItemsArray","currenciesOfUrl","forEach","icon","updatePartialItems","erc20token","isDeclinedOffer","isNonOffers","decimalPlaces","tokenDecimals","Number","dp","toString","isLessThanOrEqualTo","filteredOrders","isNoAnyOrders","sortedOrders","sort","a","b","dividedBy","index","owner","setOrderOnState","didFound","maxAllowedSellAmount","maxAllowedGetAmount","maxAllowedBuyAmount","isFound","newState","findGoodOrder","inOrders","goodRate","isPeerBanned","getFiat","toFixed","checkAmount","setAmountOnState","setNoOfferState","flipCurrency","getType","getDefaultWalletForCurrency","fetchPairFeesAndBalances","changeUrl","analytics","dataEvent","action","label","checkPair","addressRole","addressData","type","setUserDefaultWallet","selectedAddress","Send","Receive","flipped","resetState","have","get","buyExRate","sellExRate","haveHeat","getHeat","noPairToken","checkingValue","selected","check","getFiatBalance","chooseCurrencyToRender","extendedControls","feeMultipler","times","isGreaterThanOrEqualTo","faqLink","getFaqLink","href","localSavedOrders","desclineOrders","swapId","swap","flow","isFinished","isRefunded","isStoppedSwap","lifeTimeout","checkTimeout","currencyData","find","tokenData","getCoinData","fullName","IncompletedSwaps","isRootPage","pathname","url","exchangeDataStr","exchangeSettings","JSON","parse","returnNeedCurrency","isToken","dynamicFee","haveFiat","isShowBalance","isLowAmount","directionOrders","haveBalance","makeAddressObject","wallet","addressType","Internal","Metamask","getExchangeDataFromLocalStorage","userWallets","newExchangeData","setItem","stringify","savedType","getUserDefaultWallet","model","UTXO","ETH_TOKEN","AB","warn","_mounted","updateCore","timer","timerProcess","setOrders","checkUrl","getCorrectDecline","onInit","room","on","addEventListener","isFullLoadingComplite","web3connect","bind","then","buyWallet","sellWallet","feeBuyWallet","feeSellWallet","fetchWalletBalance","checkBalanceOnAllCurrency","off","peerID","Math","floor","Date","getTime","bannedPeersTimeout","doesComissionPreventThisOrder","linkedOrderId","swapUri","atomicSwap","Error","balanceTooltip","sellCoinFee","minus","ROUND_FLOOR","ROUND_CEIL","fiatFeeCalculation","currentCurrency","oneCryptoCost","linked","all","isWidgetLink","availableAmount","checkoutLowAmount","sellTokenFullName","getCoinFullName","buyTokenFullName","isShowSwapModeSwitch","offer","isTurboAllowed","isAssetSupported","isPrice","isFinite","isErrorNoOrders","isErrorLowLiquidity","isErrorLowAmount","isErrorExternalDisabled","canStartSwap","isIncompletedSwaps","Form","pipe","setAmount","extendedControlsSet","addrData","applyAddress","maxForBuy","maxForSell","btcAmount","goDeclimeFaq","link","initSwap","showIncompleteSwap","ref","promoContainer","showHowItsWork","timePassed","scrollTo","clientHeight","Array","isArray","isMy","Boolean"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport Link from 'local_modules/sw-valuelink'\r\n\r\nimport ThemeTooltip from '../../components/ui/Tooltip/ThemeTooltip'\r\nimport CSSModules from 'react-css-modules'\r\nimport styles from './Exchange.scss'\r\n\r\nimport { connect } from 'redaction'\r\nimport actions from 'redux/actions'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { getState } from 'redux/core'\r\nimport reducers from 'redux/core/reducers'\r\n\r\nimport SelectGroup from './SelectGroup/SelectGroup'\r\nimport { Button } from 'components/controls'\r\nimport Promo from './Promo/Promo'\r\nimport Quote from './Quote'\r\nimport HowItWorks from './HowItWorks/HowItWorks'\r\nimport VideoAndFeatures from './VideoAndFeatures/VideoAndFeatures'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport InlineLoader from 'components/loaders/InlineLoader/InlineLoader'\r\nimport { FormattedMessage, injectIntl } from 'react-intl'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport config from 'helpers/externalConfig'\r\nimport SwapApp from 'swap.app'\r\n\r\nimport helpers, { localStorage, getPairFees, constants, metamask, feedback, links } from 'helpers'\r\nimport { animate } from 'helpers/domUtils'\r\nimport Switching from 'components/controls/Switching/Switching'\r\nimport AddressSelect from './AddressSelect/AddressSelect'\r\nimport { AddressType, AddressRole } from 'domain/address'\r\nimport { SwapMode } from 'domain/swap'\r\nimport NetworkStatus from 'components/NetworkStatus/NetworkStatus'\r\nimport Orders from './Orders/Orders'\r\n\r\nimport turboSwap from 'common/helpers/turboSwap'\r\nimport Toggle from 'components/controls/Toggle/Toggle'\r\nimport TurboIcon from 'shared/components/ui/TurboIcon/TurboIcon'\r\n\r\nimport { COIN_DATA, COIN_MODEL, COIN_TYPE } from 'swap.app/constants/COINS'\r\n\r\ntype ExchangeProps = {\r\n  isOnlyForm: boolean\r\n  activeFiat: string\r\n  intl: IUniversalObj\r\n  match: IUniversalObj\r\n  location: IUniversalObj\r\n  history: IUniversalObj\r\n  usersData: IUniversalObj[]\r\n  currenciesData: IUniversalObj[]\r\n  tokensData: IUniversalObj[]\r\n  currencies: { [key: string]: string }[]\r\n  allCurrencyies: {\r\n    addAssets: boolean\r\n    fullTitle: string\r\n    icon: string\r\n    name: string\r\n    title: string\r\n    value: string\r\n  }[]\r\n  swapHistory: {} // what in the object?\r\n  addSelectedItems: [] // what in the array?\r\n  decline: [] // what in the array?\r\n}\r\n\r\ntype Address = {\r\n  currency: string\r\n  type: AddressType\r\n  value: string\r\n}\r\n\r\ntype ExchangeState = {\r\n  haveAmount: number\r\n  goodRate: number\r\n  maxAmount: number\r\n  dynamicFee: number\r\n  haveFiat: number\r\n  getFiat: number\r\n  maxBuyAmount: BigNumber\r\n\r\n  getAmount: string\r\n  haveCurrency: string\r\n  haveType: string\r\n  getCurrency: string\r\n  getType: string\r\n  peer: string\r\n\r\n  extendedControls: boolean\r\n  isLowAmount: boolean\r\n  isToken: boolean\r\n  isNonOffers: boolean\r\n  isShowBalance: boolean\r\n  isWaitForPeerAnswer: boolean\r\n  isDeclinedOffer: boolean\r\n  haveBalance: boolean\r\n\r\n  isNoAnyOrders?: boolean\r\n  isFullLoadingComplite?: boolean\r\n  exHaveRate?: string\r\n  exGetRate?: string\r\n  orderId?: string\r\n  redirectToSwap: null | SwapMode\r\n\r\n  balances: any\r\n  pairFees: any\r\n  directionOrders: IUniversalObj[]\r\n  filteredOrders: IUniversalObj[]\r\n  desclineOrders: [] // what in the array?\r\n\r\n  fromAddress: Address\r\n  toAddress: Address\r\n\r\n  isTurbo: boolean\r\n}\r\n\r\nconst allowedCoins = [\r\n  ...(!config.opts.curEnabled || config.opts.curEnabled.btc ? ['BTC'] : []),\r\n  ...(!config.opts.curEnabled || config.opts.curEnabled.eth ? ['ETH'] : []),\r\n  ...(!config.opts.curEnabled || config.opts.curEnabled.ghost ? ['GHOST'] : []),\r\n  ...(!config.opts.curEnabled || config.opts.curEnabled.next ? ['NEXT'] : []),\r\n]\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\nconst isExchangeAllowed = (currencies) =>\r\n  currencies.filter((c) => {\r\n    const isErc = Object.keys(config.erc20)\r\n      .map((i) => i.toLowerCase())\r\n      .includes(c.value.toLowerCase())\r\n\r\n    const isAllowedCoin = allowedCoins.map((i) => i.toLowerCase()).includes(c.value.toLowerCase())\r\n\r\n    return isAllowedCoin || isErc\r\n  })\r\n\r\nconst filterIsPartial = (orders) =>\r\n  orders\r\n    .filter((order) => order.isPartial && !order.isProcessing && !order.isHidden)\r\n    .filter((order) => order.sellAmount !== 0 && order.sellAmount.isGreaterThan(0)) // WTF sellAmount can be not BigNumber\r\n    .filter((order) => order.buyAmount !== 0 && order.buyAmount.isGreaterThan(0)) // WTF buyAmount can be not BigNumber too - need fix this\r\n\r\n\r\nconst subTitle = (sell, sellTicker, buy, buyTicker) => (\r\n  <div>\r\n    <FormattedMessage id=\"ExchangeTitleTag1\" defaultMessage=\"Fastest cross-chain swaps\" />\r\n  </div>\r\n)\r\n\r\nconst isWidgetBuild = config && config.isWidget\r\nconst bannedPeers = {} // rejected swap peers\r\n\r\n@injectIntl\r\n@connect(\r\n  ({\r\n    currencies,\r\n    rememberedOrders,\r\n    history: { swapHistory },\r\n    core: { orders, hiddenCoinsList },\r\n    user: { ethData, btcData, ghostData, nextData, tokensData, activeFiat, ...rest },\r\n  }) => ({\r\n    currencies: isExchangeAllowed(currencies.partialItems),\r\n    allCurrencyies: currencies.items,\r\n    addSelectedItems: isExchangeAllowed(currencies.addPartialItems),\r\n    orders: filterIsPartial(orders),\r\n    allOrders: orders,\r\n    currenciesData: [ethData, btcData, ghostData, nextData],\r\n    tokensData: [...Object.keys(tokensData).map((k) => tokensData[k])],\r\n    decline: rememberedOrders.savedOrders,\r\n    hiddenCoinsList,\r\n    userEthAddress: ethData.address,\r\n    swapHistory,\r\n    activeFiat,\r\n    usersData: [\r\n      ethData,\r\n      btcData,\r\n      ghostData,\r\n      nextData,\r\n      ...Object.values(tokensData).filter(({ address }) => address),\r\n      ...Object.values(rest)\r\n        .filter((coinData) => coinData && coinData.address)\r\n        .filter(({ address }) => address),\r\n    ],\r\n  })\r\n)\r\n@CSSModules(styles, { allowMultiple: true })\r\nexport default class Exchange extends Component<any, any> {\r\n  props: ExchangeProps\r\n  state: ExchangeState\r\n\r\n  private _mounted = false\r\n\r\n  static defaultProps = {\r\n    orders: [],\r\n  }\r\n\r\n  timer: boolean\r\n  promoContainer: Element\r\n  fiatRates: { [key: string]: number }\r\n  onRequestAnswer: (newOrder: IUniversalObj, isAccepted: boolean) => void\r\n  cacheDynamicFee: any\r\n  scrollTrigger: any // undefined | ?\r\n  wallets: any // undefined | ?\r\n\r\n  static getDerivedStateFromProps({ orders }, { haveCurrency, getCurrency, isTurbo }) {\r\n    if (!Array.isArray(orders)) {\r\n      return\r\n    }\r\n\r\n    const directionOrders = orders.filter(order =>\r\n      !order.isMy &&\r\n      order.sellCurrency === getCurrency.toUpperCase() &&\r\n      order.buyCurrency === haveCurrency.toUpperCase()\r\n    )\r\n\r\n    const filteredOrders = directionOrders.filter(order =>\r\n      Boolean(order.isTurbo) === Boolean(isTurbo)\r\n    )\r\n\r\n    return {\r\n      directionOrders,\r\n      filteredOrders,\r\n    }\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {\r\n      allCurrencyies,\r\n      match,\r\n      intl: { locale },\r\n      history,\r\n    } = props\r\n\r\n    this.fiatRates = {}\r\n    this.onRequestAnswer = (newOrder, isAccepted) => {}\r\n\r\n    const isRootPage = history.location.pathname === '/' || history.location.pathname === '/ru'\r\n    const {\r\n      url,\r\n      params: { buy, sell },\r\n    } = match || { params: { buy: 'btc', sell: 'usdt' } }\r\n\r\n    if (sell && buy && !isRootPage) {\r\n      if (\r\n        !allCurrencyies.map((item) => item.name).includes(sell.toUpperCase()) ||\r\n        !allCurrencyies.map((item) => item.name).includes(buy.toUpperCase())\r\n      ) {\r\n        history.push(localisedUrl(locale, `${links.exchange}/eth-to-btc`))\r\n      }\r\n    }\r\n\r\n    let haveCurrency = sell || 'btc'\r\n    let getCurrency = buy || (!isWidgetBuild ? 'eth' : config.erc20token)\r\n\r\n    const exchangeDataStr = localStorage.getItem(constants.localStorage.exchangeSettings)\r\n    console.log('EXCHANGE DATA STR FROM CONSTRUCTOR: ', exchangeDataStr)\r\n    const exchangeSettings = exchangeDataStr && JSON.parse(exchangeDataStr)\r\n    // to get data from last session\r\n    if (exchangeSettings && exchangeSettings.currency) {\r\n      haveCurrency = exchangeSettings.currency.sell || haveCurrency\r\n      getCurrency = exchangeSettings.currency.buy || getCurrency\r\n    }\r\n\r\n    this.returnNeedCurrency(haveCurrency, getCurrency)\r\n\r\n    if (!(buy && sell) && !props.location.hash.includes('#widget') && !isRootPage) {\r\n      if (url !== '/wallet') {\r\n        history.push(localisedUrl(locale, `${links.exchange}/${haveCurrency}-to-${getCurrency}`))\r\n      }\r\n    }\r\n\r\n    const haveType = this.getDefaultWalletForCurrency(haveCurrency.toUpperCase())\r\n    const getType = this.getDefaultWalletForCurrency(getCurrency.toUpperCase())\r\n\r\n    this.state = {\r\n      isToken: false,\r\n      dynamicFee: 0,\r\n      haveCurrency,\r\n      haveType,\r\n      getCurrency,\r\n      getType,\r\n      haveAmount: 0,\r\n      getAmount: '',\r\n      haveFiat: 0,\r\n      getFiat: 0,\r\n      isShowBalance: true,\r\n      isLowAmount: false,\r\n      maxAmount: 0,\r\n      maxBuyAmount: new BigNumber(0),\r\n      peer: '',\r\n      goodRate: 0,\r\n      directionOrders: [],\r\n      filteredOrders: [],\r\n      isNonOffers: false,\r\n      isDeclinedOffer: false,\r\n      extendedControls: false,\r\n      isWaitForPeerAnswer: false,\r\n      desclineOrders: [],\r\n      pairFees: false,\r\n      balances: false,\r\n      haveBalance: false,\r\n      fromAddress: this.makeAddressObject(haveType, haveCurrency.toUpperCase()),\r\n      toAddress: this.makeAddressObject(getType, getCurrency.toUpperCase()),\r\n      isTurbo: false,\r\n      redirectToSwap: null,\r\n    }\r\n\r\n    if (config.isWidget) {\r\n      this.state.getCurrency = config.erc20token\r\n    }\r\n  }\r\n\r\n  makeAddressObject(type, currency) {\r\n    const wallet =\r\n      type !== AddressType.Custom\r\n        ? actions.core.getWallet({\r\n            currency,\r\n            addressType: type,\r\n          })\r\n        : false\r\n\r\n    switch (type) {\r\n      case AddressType.Internal:\r\n        return {\r\n          type: AddressType.Internal,\r\n          currency,\r\n          value: wallet ? wallet.address : '',\r\n        }\r\n      case AddressType.Metamask:\r\n        return {\r\n          type: AddressType.Metamask,\r\n          currency,\r\n          value: wallet ? wallet.address : '',\r\n        }\r\n      case AddressType.Custom:\r\n        return {\r\n          type: AddressType.Internal,\r\n          currency,\r\n          value: ``,\r\n        }\r\n    }\r\n    return null\r\n  }\r\n\r\n  getExchangeDataFromLocalStorage() {\r\n    const exchangeDataStr = localStorage.getItem(constants.localStorage.exchangeSettings)\r\n\r\n    if (exchangeDataStr) {\r\n      return JSON.parse(exchangeDataStr)\r\n    }\r\n    return {}\r\n  }\r\n\r\n  getUserDefaultWallet(currency) {\r\n    const exchangeSettings = this.getExchangeDataFromLocalStorage()\r\n    const userWallets = exchangeSettings.userWallets\r\n\r\n    if (userWallets && userWallets[currency]) {\r\n      return userWallets[currency]\r\n    }\r\n    return false\r\n  }\r\n\r\n  setUserDefaultWallet(currency, type) {\r\n    const exchangeSettings = this.getExchangeDataFromLocalStorage()\r\n    const userWallets = exchangeSettings.userWallets || {}\r\n\r\n    userWallets[currency] = type\r\n\r\n    const newExchangeData = {\r\n      currency: exchangeSettings.currency,\r\n      userWallets,\r\n    }\r\n\r\n    localStorage.setItem(constants.localStorage.exchangeSettings, JSON.stringify(newExchangeData))\r\n  }\r\n\r\n  getDefaultWalletForCurrency(currency) {\r\n    const savedType = this.getUserDefaultWallet(currency)\r\n    if (savedType) return savedType\r\n    if (COIN_DATA[currency]) {\r\n      if (COIN_DATA[currency].model === COIN_MODEL.UTXO) return AddressType.Custom\r\n      if (COIN_DATA[currency].type === COIN_TYPE.ETH_TOKEN) return AddressType.Metamask\r\n      if (COIN_DATA[currency].model === COIN_MODEL.AB) return AddressType.Metamask\r\n    } else {\r\n      console.warn(`Exchange -> getDefaultWalletForCurrency -> Unknown coin ${currency}`)\r\n    }\r\n\r\n    return `placeholder`\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._mounted = true\r\n\r\n    const { haveCurrency, getCurrency } = this.state\r\n\r\n    actions.core.updateCore()\r\n    this.returnNeedCurrency(haveCurrency, getCurrency)\r\n    this.checkPair()\r\n\r\n    this.getFiatBalance()\r\n\r\n    this.timer = true\r\n    const timerProcess = () => {\r\n      if (!this.timer) return\r\n      this.setOrders()\r\n      this.checkUrl()\r\n      this.getCorrectDecline()\r\n      setTimeout(timerProcess, 2000)\r\n    }\r\n    timerProcess()\r\n\r\n    SwapApp.onInit(() => {\r\n      SwapApp.shared().services.room.on('new orders', () => this.checkPair())\r\n    })\r\n\r\n    document.addEventListener('scroll', this.rmScrollAdvice)\r\n\r\n    setTimeout(() => {\r\n      if (this._mounted) {\r\n        this.setState({\r\n          isFullLoadingComplite: true,\r\n        })\r\n      }\r\n    }, 60 * 1000)\r\n    this.fetchPairFeesAndBalances()\r\n    metamask.web3connect.on('updated', this.fetchPairFeesAndBalances.bind(this))\r\n  }\r\n\r\n  getBalance(currency) {\r\n    const { balances } = this.state\r\n\r\n    return balances && balances[currency.toUpperCase()] ? balances[currency.toUpperCase()] : 0\r\n  }\r\n\r\n  fetchPairFeesAndBalances() {\r\n    const { haveCurrency: sellCurrency, getCurrency: buyCurrency } = this.state\r\n\r\n    if (!this._mounted) return\r\n    this.setState(\r\n      {\r\n        pairFees: false,\r\n        balances: false,\r\n      },\r\n      () => {\r\n        if (!this._mounted) return\r\n\r\n        getPairFees(sellCurrency, buyCurrency).then(async (pairFees: { [key: string]: any }) => {\r\n          const buyExRate = await this.fetchFiatExRate(pairFees.buy.coin)\r\n          const sellExRate = await this.fetchFiatExRate(pairFees.sell.coin)\r\n\r\n          if (!this._mounted) return\r\n          this.setState(\r\n            {\r\n              pairFees: {\r\n                ...pairFees,\r\n                buyExRate,\r\n                sellExRate,\r\n              },\r\n            },\r\n            async () => {\r\n              if (!this._mounted) return\r\n              // After fetching fee - actualize balances\r\n              const buyWallet = actions.core.getWallet({ currency: buyCurrency })\r\n              const sellWallet = actions.core.getWallet({ currency: sellCurrency })\r\n              const feeBuyWallet = actions.core.getWallet({ currency: pairFees.buy.coin })\r\n              const feeSellWallet = actions.core.getWallet({ currency: pairFees.sell.coin })\r\n\r\n              const balances = {}\r\n              balances[`${buyWallet.currency}`] = await actions.core.fetchWalletBalance(buyWallet)\r\n              balances[`${sellWallet.currency}`] = await actions.core.fetchWalletBalance(sellWallet)\r\n              if (balances[`${feeBuyWallet.currency}`] === undefined) {\r\n                balances[`${feeBuyWallet.currency}`] = await actions.core.fetchWalletBalance(\r\n                  feeBuyWallet\r\n                )\r\n              }\r\n              if (balances[`${feeSellWallet.currency}`] === undefined) {\r\n                balances[`${feeSellWallet.currency}`] = await actions.core.fetchWalletBalance(\r\n                  feeSellWallet\r\n                )\r\n              }\r\n\r\n              this.setState({\r\n                balances,\r\n              })\r\n\r\n              this.checkBalanceOnAllCurrency()\r\n            }\r\n          )\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  checkBalanceOnAllCurrency() {\r\n    const { balances } = this.state\r\n\r\n    if (Object.keys(balances).length) {\r\n      for (let currency in balances) {\r\n        if (balances[currency] > 0) {\r\n          this.setState({\r\n            haveBalance: true,\r\n          })\r\n          break\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  rmScrollAdvice = () => {\r\n    if (window.scrollY > window.innerHeight * 0.7 && this.scrollTrigger) {\r\n      this.scrollTrigger.classList.add('hidden')\r\n      document.removeEventListener('scroll', this.rmScrollAdvice)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const exchangeSettings = this.getExchangeDataFromLocalStorage()\r\n    const { haveCurrency, getCurrency } = this.state\r\n    const newExchangeData = {\r\n      ...exchangeSettings,\r\n      currency: {\r\n        sell: haveCurrency,\r\n        buy: getCurrency,\r\n      },\r\n    }\r\n\r\n    localStorage.setItem(constants.localStorage.exchangeSettings, JSON.stringify(newExchangeData))\r\n\r\n    this._mounted = false\r\n    this.timer = false\r\n    metamask.web3connect.off('updated', this.fetchPairFeesAndBalances)\r\n  }\r\n\r\n  checkUrl = () => {\r\n    const {\r\n      match: {\r\n        params: { buy: buyValue, sell: sellValue },\r\n      },\r\n    } = this.props\r\n\r\n    const { getCurrency, haveCurrency } = this.state\r\n\r\n    if (haveCurrency && sellValue && sellValue !== haveCurrency) {\r\n      this.handleSetHaveValue({ value: sellValue })\r\n    }\r\n\r\n    if (getCurrency && sellValue && buyValue && buyValue !== getCurrency) {\r\n      this.checkValidUrl(sellValue, buyValue)\r\n    }\r\n  }\r\n\r\n  checkValidUrl = (sellValue, buyValue) => {\r\n    const avaliablesBuyCurrency = actions.pairs.selectPairPartial(sellValue).map((el) => el.value)\r\n    if (avaliablesBuyCurrency.includes(buyValue)) {\r\n      return this.handleSetGetValue({ value: buyValue })\r\n    }\r\n    if (avaliablesBuyCurrency.includes(sellValue)) {\r\n      const filterSameVale = avaliablesBuyCurrency.filter((el) => el !== sellValue)\r\n      if (filterSameVale.includes('btc')) {\r\n        this.handleSetGetValue({ value: 'btc' })\r\n      } else {\r\n        this.handleSetGetValue({ value: filterSameVale[0] })\r\n      }\r\n    }\r\n  }\r\n\r\n  changeUrl = (sell, buy) => {\r\n    const {\r\n      intl: { locale },\r\n      isOnlyForm,\r\n    } = this.props\r\n\r\n    if (!this.props.location.hash.includes('#widget') && !isOnlyForm) {\r\n      this.props.history.push(localisedUrl(locale, `${links.exchange}/${sell}-to-${buy}`))\r\n    }\r\n  }\r\n\r\n  fetchFiatExRate = async (coin) => {\r\n    const { activeFiat } = this.props\r\n\r\n    try {\r\n      if (this.fiatRates[coin]) {\r\n        return this.fiatRates[coin]\r\n      } else {\r\n        const exRate = await actions.user.getExchangeRate(coin, activeFiat)\r\n        this.fiatRates[coin] = exRate\r\n        return exRate\r\n      }\r\n    } catch (err) {\r\n      console.error(`Cryptonator offline: Fail fetch ${coin} exRate for fiat ${activeFiat}`, err)\r\n      return 0\r\n    }\r\n  }\r\n\r\n  getFiatBalance = async () => {\r\n    const { haveCurrency, getCurrency } = this.state\r\n\r\n    const exHaveRate = await this.fetchFiatExRate(haveCurrency)\r\n    const exGetRate = await this.fetchFiatExRate(getCurrency)\r\n    this.setState({\r\n      exHaveRate,\r\n      exGetRate,\r\n    })\r\n  }\r\n\r\n  createOffer = async () => {\r\n    feedback.createOffer.started()\r\n\r\n    const { haveCurrency, getCurrency } = this.state\r\n\r\n    actions.modals.open(constants.modals.Offer, {\r\n      sellCurrency: haveCurrency,\r\n      buyCurrency: getCurrency,\r\n    })\r\n    // actions.analytics.dataEvent('orderbook-click-createoffer-button')\r\n  }\r\n\r\n  /* Refactoring\r\n   * Проверка возможности начать свап по указанной паре\r\n   * Проверяет балан, фи, если свап не возможен - показывает сообщение\r\n   */\r\n  checkSwapAllow = (checkParams) => {\r\n    const { sellCurrency, buyCurrency, amount, balance, fromType } = checkParams\r\n\r\n    const { pairFees, balances } = this.state\r\n\r\n    const isSellToken = helpers.ethToken.isEthToken({ name: sellCurrency })\r\n    const isBuyToken = helpers.ethToken.isEthToken({ name: buyCurrency })\r\n\r\n    let balanceIsOk = true\r\n    let needEthFee = false\r\n    if (\r\n      isSellToken &&\r\n      (new BigNumber(balance).isLessThan(amount) ||\r\n        new BigNumber(balances.ETH).isLessThan(pairFees.byCoins.ETH.fee))\r\n    ) {\r\n      balanceIsOk = false\r\n    }\r\n    if (isBuyToken && new BigNumber(balances.ETH).isLessThan(pairFees.byCoins.ETH.fee)) {\r\n      balanceIsOk = false\r\n      needEthFee = true\r\n    }\r\n    // UTXO\r\n    if (\r\n      pairFees.byCoins[sellCurrency.toUpperCase()] &&\r\n      pairFees.byCoins[sellCurrency.toUpperCase()].isUTXO\r\n    ) {\r\n      if (fromType !== AddressType.Custom) {\r\n        if (\r\n          new BigNumber(balance).isLessThan(\r\n            new BigNumber(amount).plus(pairFees.byCoins[sellCurrency.toUpperCase()].fee)\r\n          )\r\n        )\r\n          balanceIsOk = false\r\n      }\r\n    } else {\r\n      if (!isSellToken && new BigNumber(balance).isLessThan(amount)) balanceIsOk = false\r\n    }\r\n\r\n    if (!balanceIsOk) {\r\n      const { address } = actions.core.getWallet({ currency: sellCurrency })\r\n      const {\r\n        sell: { fee: sellFee, coin: sellCoin },\r\n        buy: { fee: buyFee, coin: buyCoin },\r\n      } = pairFees\r\n\r\n      const alertMessage = (\r\n        <Fragment>\r\n          <FormattedMessage\r\n            id=\"AlertOrderNonEnoughtBalance\"\r\n            defaultMessage=\"Please top up your balance before you start the swap.\"\r\n          />\r\n          <br />\r\n          {(isSellToken || (isBuyToken && needEthFee)) && (\r\n            <FormattedMessage\r\n              id=\"Swap_NeedEthFee\"\r\n              defaultMessage=\"На вашем балансе должно быть не менее {buyFee} {buyCoin} для оплаты коммисии майнера\"\r\n              values={{\r\n                buyFee,\r\n                buyCoin,\r\n              }}\r\n            />\r\n          )}\r\n          {!isSellToken && !needEthFee && (\r\n            <FormattedMessage\r\n              id=\"Swap_NeedMoreAmount\"\r\n              defaultMessage=\"На вашем балансе должно быть не менее {amount} {currency}. {br}Коммисия майнера {sellFee} {sellCoin} и {buyFee} {buyCoin}\"\r\n              values={{\r\n                amount: amount.toNumber(),\r\n                currency: sellCurrency.toUpperCase(),\r\n                sellFee,\r\n                sellCoin,\r\n                buyFee,\r\n                buyCoin,\r\n                br: <br />,\r\n              }}\r\n            />\r\n          )}\r\n        </Fragment>\r\n      )\r\n      actions.modals.open(constants.modals.AlertWindow, {\r\n        title: (\r\n          <FormattedMessage\r\n            id=\"AlertOrderNonEnoughtBalanceTitle\"\r\n            defaultMessage=\"Not enough balance.\"\r\n          />\r\n        ),\r\n        message: alertMessage,\r\n        canClose: true,\r\n        currency: buyCurrency,\r\n        address,\r\n        actionType: 'deposit',\r\n      })\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  // @ToDo - need refactiong without BTC\r\n  initSwap = async () => {\r\n    const { decline, usersData } = this.props\r\n\r\n    const { haveCurrency, haveAmount, getCurrency, haveType } = this.state\r\n    const haveTicker = haveCurrency.toUpperCase()\r\n    const getTicker = getCurrency.toUpperCase()\r\n\r\n    feedback.exchangeForm.requestedSwap(`${haveTicker}->${getTicker}`)\r\n\r\n    if (\r\n      !this.checkSwapAllow({\r\n        sellCurrency: haveCurrency,\r\n        buyCurrency: getCurrency,\r\n        amount: haveAmount,\r\n        balance: this.getBalance(haveCurrency),\r\n        fromType: haveType,\r\n      })\r\n    ) {\r\n      return false\r\n    }\r\n\r\n    if (decline.length === 0) {\r\n      this.sendRequestForPartial()\r\n    } else {\r\n      const declinedExistedSwapIndex = helpers.handleGoTrade.getDeclinedExistedSwapIndex({\r\n        currency: haveCurrency,\r\n        decline,\r\n      })\r\n      if (declinedExistedSwapIndex !== false) {\r\n        this.openModalDeclineOrders(declinedExistedSwapIndex)\r\n      } else {\r\n        this.sendRequestForPartial()\r\n      }\r\n    }\r\n  }\r\n\r\n  openModalDeclineOrders = (indexOfDecline) => {\r\n    const orders = SwapApp.shared().services.orders.items\r\n    const declineSwap = actions.core.getSwapById(this.props.decline[indexOfDecline])\r\n\r\n    if (declineSwap !== undefined) {\r\n      actions.modals.open(constants.modals.DeclineOrdersModal, {\r\n        declineSwap,\r\n      })\r\n    }\r\n  }\r\n\r\n  sendRequestForPartial = () => {\r\n    const {\r\n      peer,\r\n      orderId,\r\n      fromAddress,\r\n      toAddress,\r\n      haveAmount,\r\n      getAmount,\r\n      maxAmount,\r\n      maxBuyAmount,\r\n    } = this.state\r\n\r\n    console.log('>>> Exchange: sendRequestForPartial', haveAmount, getAmount)\r\n    console.log(`${haveAmount} FROM ${fromAddress.value}`)\r\n    console.log(`${getAmount} TO ${toAddress.value}`)\r\n\r\n    if (!String(getAmount) || !peer || !orderId || !String(haveAmount)) {\r\n      return\r\n    }\r\n\r\n    const newValues = {\r\n      sellAmount: maxBuyAmount.isEqualTo(haveAmount) ? maxAmount : getAmount,\r\n    }\r\n\r\n    const destination = {\r\n      address: toAddress.value,\r\n    }\r\n\r\n    this.setState(() => ({ isWaitForPeerAnswer: true }))\r\n\r\n    // wait until not skip and ban peer\r\n    const requestTimeoutSec = config && config.isWidgetBuild ? 60 : 30\r\n\r\n    const requestTimeout = setTimeout(() => {\r\n      this.banPeer(peer)\r\n      this.getLinkToDeclineSwap()\r\n      this.setDeclinedOffer()\r\n    }, requestTimeoutSec * 1000)\r\n\r\n    this.onRequestAnswer = (newOrder, isAccepted) => {\r\n      console.log('>>> onRequestAnswer newOrder=', newOrder)\r\n      clearTimeout(requestTimeout)\r\n      if (isAccepted) {\r\n        this.setState(() => ({\r\n          redirectToSwap: newOrder.isTurbo ? SwapMode.Turbo : SwapMode.Atomic,\r\n          orderId: newOrder.id,\r\n          isWaitForPeerAnswer: false,\r\n        }))\r\n      } else {\r\n        this.banPeer(peer)\r\n        this.getLinkToDeclineSwap()\r\n        this.setDeclinedOffer()\r\n      }\r\n    }\r\n\r\n    actions.core.sendRequestForPartial(orderId, newValues, destination, this.onRequestAnswer)\r\n  }\r\n\r\n  getLinkToDeclineSwap = () => {\r\n    const orders = SwapApp.shared().services.orders.items\r\n\r\n    const unfinishedOrder = orders\r\n      .filter((item) => item.isProcessing === true)\r\n      .filter((item) => item.participant)\r\n      .filter((item) => item.participant.peer === this.state.peer)\r\n      .filter((item) => item.sellCurrency === this.state.getCurrency.toUpperCase())[0]\r\n\r\n    if (!unfinishedOrder) return\r\n\r\n    this.setState(() => ({\r\n      wayToDeclinedOrder: `swaps/${unfinishedOrder.sellCurrency}-${unfinishedOrder.sellCurrency}/${unfinishedOrder.id}`,\r\n    }))\r\n  }\r\n\r\n  returnNeedCurrency = (haveCurrency, getCurrency) => {\r\n    const partialItems = Object.assign(getState().currencies.partialItems) // eslint-disable-line\r\n\r\n    const partialCurrency = getState().currencies.partialItems.map((item) => item.name)\r\n    const allCurrencyies = getState().currencies.items.map((item) => item.name)\r\n    let partialItemsArray = [...partialItems]\r\n    let currenciesOfUrl = []\r\n    currenciesOfUrl.push(haveCurrency, getCurrency)\r\n\r\n    currenciesOfUrl.forEach((item) => {\r\n      if (allCurrencyies.includes(item.toUpperCase())) {\r\n        if (!partialCurrency.includes(item.toUpperCase())) {\r\n          partialItemsArray.push({\r\n            name: item.toUpperCase(),\r\n            title: item.toUpperCase(),\r\n            icon: item.toLowerCase(),\r\n            value: item.toLowerCase(),\r\n          })\r\n          reducers.currencies.updatePartialItems(partialItemsArray)\r\n        }\r\n      } else {\r\n        this.setState(() => ({\r\n          haveCurrency: config && config.isWidget ? config.erc20token : 'swap',\r\n        }))\r\n      }\r\n    })\r\n  }\r\n\r\n  setDeclinedOffer = () => {\r\n    this.setState(() => ({\r\n      haveAmount: '',\r\n      isWaitForPeerAnswer: false,\r\n      isDeclinedOffer: true,\r\n    }))\r\n\r\n    setTimeout(() => {\r\n      this.setState(() => ({\r\n        isDeclinedOffer: false,\r\n      }))\r\n    }, 7 * 1000)\r\n  }\r\n\r\n  setNoOfferState = () => {\r\n    this.setState(() => ({ isNonOffers: true }))\r\n  }\r\n\r\n  setAmountOnState = (maxAmount, getAmount, buyAmount) => {\r\n    const { getCurrency, haveAmount } = this.state\r\n    const decimalPlaces = constants.tokenDecimals[getCurrency.toLowerCase()]\r\n\r\n    this.setState(() => ({\r\n      maxAmount: Number(maxAmount),\r\n      getAmount: new BigNumber(getAmount).dp(decimalPlaces).toString(),\r\n      maxBuyAmount: buyAmount,\r\n    }))\r\n\r\n    return (\r\n      new BigNumber(getAmount).isLessThanOrEqualTo(maxAmount) ||\r\n      new BigNumber(haveAmount).isEqualTo(buyAmount)\r\n    )\r\n  }\r\n\r\n  setAmount = (value) => {\r\n    this.setState(() => ({ haveAmount: value, maxAmount: 0 }))\r\n  }\r\n\r\n  setOrders = async () => {\r\n    const { filteredOrders, haveAmount, exHaveRate, exGetRate } = this.state\r\n\r\n    if (!filteredOrders.length) {\r\n      this.setState(() => ({\r\n        isNonOffers: true,\r\n        isNoAnyOrders: true,\r\n        maxAmount: 0,\r\n        getAmount: 0,\r\n        maxBuyAmount: new BigNumber(0),\r\n      }))\r\n      return\r\n    }\r\n\r\n    const sortedOrders = filteredOrders\r\n      .sort(\r\n        (a, b) =>\r\n          Number(b.buyAmount.dividedBy(b.sellAmount)) - Number(a.buyAmount.dividedBy(a.sellAmount))\r\n      )\r\n      .map((item, index) => {\r\n        const exRate = item.buyAmount.dividedBy(item.sellAmount)\r\n        const getAmount = new BigNumber(haveAmount).dividedBy(exRate).toString()\r\n\r\n        return {\r\n          sellAmount: item.sellAmount,\r\n          buyAmount: item.buyAmount,\r\n          exRate,\r\n          getAmount,\r\n          orderId: item.id,\r\n          peer: item.owner.peer,\r\n        }\r\n      })\r\n\r\n    const didFound = await this.setOrderOnState(sortedOrders)\r\n\r\n    if (didFound) {\r\n      this.setState(() => ({\r\n        isNoAnyOrders: false,\r\n      }))\r\n    }\r\n  }\r\n\r\n  setOrderOnState = (orders) => {\r\n    const { haveAmount, getCurrency } = this.state\r\n\r\n    let maxAllowedSellAmount = new BigNumber(0)\r\n    let maxAllowedGetAmount = new BigNumber(0)\r\n    let maxAllowedBuyAmount = new BigNumber(0)\r\n\r\n    let isFound = false\r\n    let newState = {}\r\n\r\n    const findGoodOrder = (inOrders) => {\r\n      inOrders.forEach((item) => {\r\n        maxAllowedSellAmount = maxAllowedSellAmount.isLessThanOrEqualTo(item.sellAmount)\r\n          ? item.sellAmount\r\n          : maxAllowedSellAmount\r\n        maxAllowedBuyAmount = maxAllowedBuyAmount.isLessThanOrEqualTo(item.buyAmount)\r\n          ? item.buyAmount\r\n          : maxAllowedBuyAmount\r\n\r\n        if (new BigNumber(haveAmount).isLessThanOrEqualTo(item.buyAmount)) {\r\n          maxAllowedGetAmount = maxAllowedGetAmount.isLessThanOrEqualTo(item.getAmount)\r\n            ? new BigNumber(item.getAmount)\r\n            : maxAllowedGetAmount\r\n\r\n          isFound = true\r\n\r\n          newState = {\r\n            isNonOffers: false,\r\n            goodRate: item.exRate,\r\n            peer: item.peer,\r\n            orderId: item.orderId,\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    findGoodOrder(orders.filter((order) => !this.isPeerBanned(order.peer)))\r\n\r\n    if (!isFound) {\r\n      // check banned peers\r\n      findGoodOrder(orders.filter((order) => this.isPeerBanned(order.peer)))\r\n    }\r\n\r\n    if (isFound) {\r\n      this.setState(() => newState)\r\n    } else {\r\n      this.setState(() => ({\r\n        isNonOffers: true,\r\n        getFiat: Number(0).toFixed(2),\r\n      }))\r\n    }\r\n\r\n    const checkAmount = this.setAmountOnState(\r\n      maxAllowedSellAmount,\r\n      maxAllowedGetAmount,\r\n      maxAllowedBuyAmount\r\n    )\r\n\r\n    if (!checkAmount) {\r\n      this.setNoOfferState()\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  isPeerBanned(peerID) {\r\n    if (bannedPeers[peerID] && bannedPeers[peerID] > Math.floor(new Date().getTime() / 1000)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  banPeer(peerID) {\r\n    const bannedPeersTimeout = 180 // 3 mins\r\n    bannedPeers[peerID] = Math.floor(new Date().getTime() / 1000) + bannedPeersTimeout\r\n  }\r\n\r\n  handleSetGetValue = ({ value }) => {\r\n    const { haveCurrency, getCurrency } = this.state\r\n\r\n    if (value === haveCurrency) {\r\n      this.flipCurrency()\r\n    } else {\r\n      this.setState(\r\n        {\r\n          getCurrency: value,\r\n          getType: this.getDefaultWalletForCurrency(value.toUpperCase()),\r\n          haveCurrency,\r\n          haveType: this.getDefaultWalletForCurrency(haveCurrency.toUpperCase()),\r\n          pairFees: false,\r\n        },\r\n        () => {\r\n          this.fetchPairFeesAndBalances()\r\n          this.changeUrl(haveCurrency, value)\r\n          actions.analytics.dataEvent({\r\n            action: 'exchange-click-selector',\r\n            label: `${haveCurrency}-to-${getCurrency}`,\r\n          })\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  handleSetHaveValue = async ({ value }) => {\r\n    const { haveCurrency, getCurrency } = this.state\r\n\r\n    if (value === getCurrency) {\r\n      this.flipCurrency()\r\n    } else {\r\n      this.setState(\r\n        {\r\n          haveCurrency: value,\r\n          haveType: this.getDefaultWalletForCurrency(value.toUpperCase()),\r\n          getCurrency,\r\n          getType: this.getDefaultWalletForCurrency(getCurrency.toUpperCase()),\r\n          pairFees: false,\r\n        },\r\n        () => {\r\n          this.fetchPairFeesAndBalances()\r\n          this.changeUrl(value, getCurrency)\r\n          actions.analytics.dataEvent({\r\n            action: 'exchange-click-selector',\r\n            label: `${haveCurrency}-to-${getCurrency}`,\r\n          })\r\n\r\n          this.checkPair()\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  applyAddress = (addressRole, addressData) => {\r\n    // address value or missing either already validated\r\n    const { type, value, currency } = addressData\r\n\r\n    console.log('Exchange: applyAddress', addressRole, addressData)\r\n    this.setUserDefaultWallet(currency.toUpperCase(), type)\r\n    feedback.exchangeForm.selectedAddress(`${addressRole} ${currency.toUpperCase()} ${type}`)\r\n\r\n    if (addressRole === AddressRole.Send) {\r\n      this.setState({\r\n        fromAddress: addressData,\r\n        haveType: type,\r\n      })\r\n    }\r\n    if (addressRole === AddressRole.Receive) {\r\n      this.setState({\r\n        toAddress: addressData,\r\n        getType: type,\r\n      })\r\n    }\r\n  }\r\n\r\n  flipCurrency = async () => {\r\n    const {\r\n      haveCurrency,\r\n      haveType,\r\n      getCurrency,\r\n      getType,\r\n      exHaveRate,\r\n      exGetRate,\r\n      pairFees,\r\n      fromAddress,\r\n      toAddress,\r\n    } = this.state\r\n\r\n    feedback.exchangeForm.flipped(\r\n      `${haveCurrency}->${getCurrency} => ${getCurrency}->${haveCurrency}`\r\n    )\r\n\r\n    this.resetState()\r\n    this.changeUrl(getCurrency, haveCurrency)\r\n    this.setState(\r\n      {\r\n        haveCurrency: getCurrency,\r\n        getCurrency: haveCurrency,\r\n        haveType: getType,\r\n        getType: haveType,\r\n        exHaveRate: exGetRate,\r\n        exGetRate: exHaveRate,\r\n        pairFees: {\r\n          ...(pairFees\r\n            ? {\r\n                // flip pair fees and exRates\r\n                ...pairFees,\r\n                buy: pairFees.sell,\r\n                sell: pairFees.buy,\r\n                have: pairFees.get,\r\n                get: pairFees.have,\r\n                buyExRate: pairFees.sellExRate,\r\n                sellExRate: pairFees.buyExRate,\r\n              }\r\n            : []),\r\n        },\r\n        // todo: flip values\r\n        fromAddress: toAddress,\r\n        toAddress: fromAddress,\r\n      },\r\n      () => {\r\n        actions.analytics.dataEvent({\r\n          action: 'exchange-click-selector',\r\n          label: `${haveCurrency}-to-${getCurrency}`,\r\n        })\r\n        this.checkPair()\r\n      }\r\n    )\r\n  }\r\n\r\n  resetState = () => {\r\n    this.setState(() => ({\r\n      haveAmount: 0,\r\n      haveHeat: 0,\r\n      getHeat: 0,\r\n      getAmount: '',\r\n      maxAmount: 0,\r\n      maxBuyAmount: new BigNumber(0),\r\n      peer: '',\r\n      isNonOffers: false,\r\n      isWaitForPeerAnswer: false,\r\n      isDeclinedOffer: false,\r\n    }))\r\n  }\r\n\r\n  checkPair = () => {\r\n    const { getCurrency, haveCurrency } = this.state\r\n\r\n    const noPairToken = config && config.isWidget ? config.erc20token : 'swap'\r\n\r\n    const checkingValue = this.props.allCurrencyies\r\n      .map((item) => item.name)\r\n      .includes(haveCurrency.toUpperCase())\r\n      ? haveCurrency\r\n      : noPairToken\r\n\r\n    const selected = actions.pairs.selectPairPartial(checkingValue)\r\n    const check = selected.map((item) => item.value).includes(getCurrency)\r\n    this.getFiatBalance()\r\n\r\n    if (!check) {\r\n      this.chooseCurrencyToRender(selected)\r\n    } else if (getCurrency === checkingValue) {\r\n      this.chooseCurrencyToRender(selected)\r\n    }\r\n  }\r\n\r\n  chooseCurrencyToRender = (selected) => {\r\n    this.setState(\r\n      () => ({\r\n        getCurrency: selected[0].value,\r\n      }),\r\n      () => {\r\n        this.getFiatBalance()\r\n      }\r\n    )\r\n  }\r\n\r\n  checkoutLowAmount() {\r\n    return (\r\n      this.doesComissionPreventThisOrder() &&\r\n      new BigNumber(this.state.getAmount).isGreaterThan(0) &&\r\n      this.state.haveAmount &&\r\n      this.state.getAmount\r\n    )\r\n  }\r\n\r\n  extendedControlsSet = (value) => {\r\n    const { extendedControls } = this.state\r\n\r\n    if (typeof value !== 'boolean') {\r\n      return this.setState({ extendedControls: false })\r\n    }\r\n    if (extendedControls === value) {\r\n      return false\r\n    }\r\n    return this.setState({ extendedControls: value })\r\n  }\r\n\r\n  doesComissionPreventThisOrder = () => {\r\n    const { pairFees, haveAmount, getAmount } = this.state\r\n\r\n    if (pairFees) {\r\n      // @ToDo\r\n      // Возможно нужно брать за расчет коммисию умноженную на два\r\n      // Если минимум будет размер коммисии, то по факту\r\n      // При выводе из скрипта покупатель получит ноль монет\r\n      // (При списании со скрипта берется коммисия)\r\n      const feeMultipler = 1\r\n      if (\r\n        pairFees.have.isUTXO &&\r\n        new BigNumber(pairFees.have.fee).times(feeMultipler).isGreaterThanOrEqualTo(haveAmount)\r\n      )\r\n        return true\r\n      if (\r\n        pairFees.get.isUTXO &&\r\n        new BigNumber(pairFees.get.fee).times(feeMultipler).isGreaterThanOrEqualTo(getAmount)\r\n      )\r\n        return true\r\n    } else {\r\n      /* No information for fee... wait - disable swap */\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  goDeclimeFaq = () => {\r\n    const faqLink = links.getFaqLink('requestDeclimed')\r\n    if (faqLink) {\r\n      window.location.href = faqLink\r\n    }\r\n  }\r\n\r\n  getCorrectDecline = () => {\r\n    const { decline } = this.props\r\n    const localSavedOrders = localStorage.getItem(constants.localStorage.savedOrders)\r\n\r\n    if (!localSavedOrders || localSavedOrders.length !== decline.length) {\r\n      return\r\n    }\r\n\r\n    const desclineOrders = decline\r\n      .map((swapId) => actions.core.getSwapById(swapId))\r\n      .filter((swap) => {\r\n        const { isFinished, isRefunded, isStoppedSwap } = swap.flow.state\r\n        // if timeout - skip this swap. for refund, if need - use history page\r\n        const lifeTimeout = swap.checkTimeout(60 * 60 * 3) // 3 hours\r\n        return isFinished || isRefunded || isStoppedSwap || lifeTimeout\r\n      })\r\n\r\n    this.setState({\r\n      desclineOrders,\r\n    })\r\n  }\r\n\r\n  getCoinData = (coin) => {\r\n    const { currenciesData, tokensData } = this.props\r\n    const currencyData = currenciesData.find((item) => item.currency === coin)\r\n    const tokenData = tokensData.find((item) => item.currency === coin)\r\n    return currencyData || tokenData\r\n  }\r\n\r\n  getCoinFullName = (coin) => {\r\n    const coinData = this.getCoinData(coin)\r\n    return coinData ? coinData.fullName : coin\r\n  }\r\n\r\n  showIncompleteSwap = () => {\r\n    const { desclineOrders } = this.state\r\n    actions.modals.open(constants.modals.IncompletedSwaps, {\r\n      desclineOrders,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      activeFiat,\r\n      currencies,\r\n      addSelectedItems,\r\n      intl: { locale },\r\n      match: {\r\n        params: { linkedOrderId },\r\n      },\r\n    } = this.props\r\n\r\n    const {\r\n      haveCurrency,\r\n      haveType,\r\n      getCurrency,\r\n      getType,\r\n      fromAddress,\r\n      toAddress,\r\n      orderId,\r\n      isNonOffers,\r\n      maxAmount,\r\n      exHaveRate,\r\n      exGetRate,\r\n      maxBuyAmount,\r\n      getAmount,\r\n      goodRate,\r\n      isShowBalance,\r\n      haveAmount,\r\n      isNoAnyOrders,\r\n      isFullLoadingComplite,\r\n      redirectToSwap,\r\n      isWaitForPeerAnswer,\r\n      directionOrders,\r\n      filteredOrders,\r\n      desclineOrders,\r\n      isDeclinedOffer,\r\n      pairFees,\r\n      balances,\r\n      haveBalance,\r\n      isTurbo,\r\n    } = this.state\r\n\r\n    const sellCoin = haveCurrency.toUpperCase()\r\n    const buyCoin = getCurrency.toUpperCase()\r\n    const balance = this.getBalance(sellCoin)\r\n\r\n    if (redirectToSwap) {\r\n      const swapUri = ({\r\n        [SwapMode.Atomic]: `${links.atomicSwap}/${orderId}`,\r\n        [SwapMode.Turbo]: `${links.turboSwap}/${orderId}`\r\n      })[redirectToSwap]\r\n\r\n      if (!swapUri) {\r\n        throw new Error('Wrong swap redirect')\r\n      }\r\n      console.log(`Redirect to swap: ${swapUri}`)\r\n      return <Redirect to={swapUri} push />\r\n    }\r\n\r\n    let balanceTooltip = null\r\n\r\n    if (pairFees && pairFees.byCoins) {\r\n      const sellCoinFee = pairFees.byCoins[sellCoin] || false\r\n      balanceTooltip = (\r\n        <p styleName=\"maxAmount\">\r\n          {new BigNumber(balance).toNumber() === 0 ||\r\n          (sellCoinFee &&\r\n            new BigNumber(balance).minus(sellCoinFee.fee).isLessThanOrEqualTo(0)) ? null : (\r\n            <>\r\n              {sellCoinFee ? (\r\n                <FormattedMessage id=\"Exchange_AvialableBalance\" defaultMessage=\"Available: \" />\r\n              ) : (\r\n                <FormattedMessage id=\"partial767\" defaultMessage=\"Your balance: \" />\r\n              )}\r\n              {sellCoinFee && sellCoinFee.fee\r\n                ? new BigNumber(balance)\r\n                    .minus(sellCoinFee.fee)\r\n                    .dp(5, BigNumber.ROUND_FLOOR)\r\n                    .toString()\r\n                : new BigNumber(balance).dp(5, BigNumber.ROUND_FLOOR).toString()}\r\n              {'  '}\r\n              {sellCoin}\r\n            </>\r\n          )}\r\n        </p>\r\n      )\r\n    }\r\n\r\n    const haveFiat = new BigNumber(exHaveRate).times(haveAmount).dp(2, BigNumber.ROUND_CEIL)\r\n\r\n    const getFiat = new BigNumber(exGetRate).times(getAmount).dp(2, BigNumber.ROUND_CEIL)\r\n\r\n    const fiatFeeCalculation =\r\n      pairFees && pairFees.buy && pairFees.sell\r\n        ? new BigNumber(pairFees.buyExRate)\r\n            .times(pairFees.buy.fee)\r\n            .plus(new BigNumber(pairFees.sellExRate).times(pairFees.sell.fee))\r\n            .dp(2, BigNumber.ROUND_CEIL)\r\n            .toNumber()\r\n        : 0\r\n\r\n    const currentCurrency = this.getCoinData(sellCoin)\r\n\r\n    const oneCryptoCost = maxBuyAmount.isLessThanOrEqualTo(0)\r\n      ? new BigNumber(0)\r\n      : new BigNumber(goodRate)\r\n\r\n    const linked = Link.all(this, 'haveAmount', 'getAmount')\r\n\r\n    const isWidgetLink =\r\n      this.props.location.pathname.includes('/exchange') && this.props.location.hash === '#widget'\r\n    const isWidget = isWidgetBuild || isWidgetLink\r\n\r\n    const availableAmount =\r\n      pairFees &&\r\n      pairFees.byCoins &&\r\n      pairFees.byCoins[sellCoin] &&\r\n      new BigNumber(pairFees.byCoins[sellCoin].fee).isGreaterThan(0)\r\n        ? new BigNumber(haveAmount).minus(pairFees.byCoins[sellCoin].fee)\r\n        : 0\r\n\r\n    const isLowAmount = this.checkoutLowAmount()\r\n\r\n    const sellTokenFullName = this.getCoinFullName(sellCoin)\r\n    const buyTokenFullName = this.getCoinFullName(buyCoin)\r\n\r\n    // temporary: show atomic/turbo switch if only there are turbo offers\r\n    const isShowSwapModeSwitch = directionOrders.filter(offer => offer.isTurbo).length > 0\r\n\r\n    const isTurboAllowed = (\r\n      turboSwap.isAssetSupported(buyCoin) &&\r\n      turboSwap.isAssetSupported(sellCoin) &&\r\n      // temporarily: no external addresses support at the turboswaps-alpha stage\r\n      // see https://github.com/swaponline/MultiCurrencyWallet/issues/3875\r\n      fromAddress.type === AddressType.Internal &&\r\n      toAddress.type === AddressType.Internal\r\n    )\r\n\r\n\r\n    const isPrice = oneCryptoCost.isGreaterThan(0) && oneCryptoCost.isFinite() && !isNonOffers\r\n\r\n    const isErrorNoOrders = isNoAnyOrders && linked.haveAmount.value > 0 && isFullLoadingComplite\r\n\r\n    const isErrorLowLiquidity =\r\n      !isNoAnyOrders && maxAmount > 0 && isNonOffers && linked.haveAmount.value > 0\r\n\r\n    const isErrorLowAmount =\r\n      this.doesComissionPreventThisOrder() &&\r\n      new BigNumber(getAmount).isGreaterThan(0) &&\r\n      haveAmount &&\r\n      getAmount\r\n\r\n    // temporarly disable some combinations (need test)\r\n    const isErrorExternalDisabled =\r\n      (fromAddress &&\r\n        ![AddressType.Internal, AddressType.Metamask, AddressType.Custom].includes(\r\n          fromAddress.type\r\n        )) ||\r\n      (toAddress &&\r\n        ![AddressType.Internal, AddressType.Metamask, AddressType.Custom].includes(toAddress.type))\r\n\r\n    const canStartSwap =\r\n      !isErrorExternalDisabled &&\r\n      !isNonOffers &&\r\n      fromAddress &&\r\n      toAddress &&\r\n      toAddress.value &&\r\n      new BigNumber(getAmount).isGreaterThan(0) &&\r\n      !this.doesComissionPreventThisOrder() &&\r\n      (new BigNumber(haveAmount).isGreaterThan(balance) ||\r\n        new BigNumber(balance).isGreaterThanOrEqualTo(availableAmount) ||\r\n        fromAddress.type === AddressType.Custom) &&\r\n      !isWaitForPeerAnswer\r\n\r\n    const isIncompletedSwaps = !!desclineOrders.length\r\n\r\n\r\n    const Form = (\r\n      <div styleName=\"section\">\r\n        <div styleName=\"formExchange\">\r\n          <div styleName=\"userSendAndGet\">\r\n            <div className=\"userSend\">\r\n              <div className=\"data-tut-have_tourDisabled\">\r\n                <SelectGroup\r\n                  activeFiat={activeFiat}\r\n                  inputValueLink={linked.haveAmount.pipe(this.setAmount)}\r\n                  selectedValue={haveCurrency}\r\n                  onSelect={this.handleSetHaveValue}\r\n                  label={<FormattedMessage id=\"partial243\" defaultMessage=\"You sell\" />} // sell or send ?\r\n                  id=\"Exchange456\"\r\n                  placeholder=\"0.00000000\"\r\n                  fiat={maxAmount > 0 && isNonOffers ? 0 : haveFiat}\r\n                  currencies={currencies}\r\n                  onFocus={() => this.extendedControlsSet(true)}\r\n                  onBlur={() => setTimeout(() => this.extendedControlsSet(false), 200)}\r\n                  inputToolTip={() => (isShowBalance ? balanceTooltip : <span />)}\r\n                />\r\n              </div>\r\n\r\n              <AddressSelect\r\n                label={<FormattedMessage id=\"Exchange_FromAddress\" defaultMessage=\"From address\" />}\r\n                isDark={isDark}\r\n                currency={haveCurrency}\r\n                selectedType={haveType}\r\n                role={AddressRole.Send}\r\n                hasError={false}\r\n                onChange={(addrData) => this.applyAddress(AddressRole.Send, addrData)}\r\n              />\r\n            </div>\r\n\r\n            <div styleName=\"switchButton\">\r\n              <Switching noneBorder onClick={this.flipCurrency} />\r\n            </div>\r\n\r\n            <div className=\"userGet\">\r\n              <div className=\"data-tut-get_tourDisabled\">\r\n                <SelectGroup\r\n                  activeFiat={activeFiat}\r\n                  dataTut=\"get\"\r\n                  inputValueLink={linked.getAmount}\r\n                  selectedValue={getCurrency}\r\n                  onSelect={this.handleSetGetValue}\r\n                  disabled={true} // value calculated from market price\r\n                  label={<FormattedMessage id=\"partial255\" defaultMessage=\"You get\" />}\r\n                  id=\"Exchange472\"\r\n                  currencies={addSelectedItems}\r\n                  fiat={getFiat}\r\n                  error={isLowAmount}\r\n                />\r\n              </div>\r\n\r\n              <AddressSelect\r\n                label={<FormattedMessage id=\"Exchange_ToAddress\" defaultMessage=\"To address\" />}\r\n                isDark={isDark}\r\n                role={AddressRole.Receive}\r\n                currency={getCurrency}\r\n                selectedType={getType}\r\n                hasError={false}\r\n                onChange={(addrData) => this.applyAddress(AddressRole.Receive, addrData)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {isShowSwapModeSwitch &&\r\n            <div styleName={`swapModeSelector ${isTurboAllowed ? '' : 'disabled'}`}>\r\n              <div styleName=\"toggle\">\r\n                <div styleName=\"toggleText\">\r\n                  <FormattedMessage id=\"AtomicSwap_Title\" defaultMessage=\"Atomic swap\" />\r\n                </div>\r\n                {/*\r\n                //@ */}\r\n                <Toggle checked={isTurbo} isDisabled={!isTurboAllowed} onChange={() => this.setState((state) => ({ isTurbo: !state.isTurbo }))} />\r\n                <div styleName=\"toggleText\">\r\n                  <TurboIcon />\r\n                  <span>\r\n                    <FormattedMessage id=\"TurboSwap_Title\" defaultMessage=\"Turbo swap\" />\r\n                    &nbsp;\r\n                    <a href=\"https://github.com/swaponline/MultiCurrencyWallet/blob/master/docs/TURBO_SWAPS.md\" target=\"_blank\">(?)</a>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n\r\n          <div styleName=\"errors\">\r\n            {isErrorNoOrders && (\r\n              <Fragment>\r\n                <p styleName=\"error\">\r\n                  <FormattedMessage\r\n                    id=\"PartialPriceNoOrdersReduce\"\r\n                    defaultMessage=\"No orders found, try later or change the currency pair\"\r\n                  />\r\n                </p>\r\n              </Fragment>\r\n            )}\r\n\r\n            {isErrorLowLiquidity && (\r\n              <Fragment>\r\n                <p styleName=\"error\">\r\n                  <FormattedMessage\r\n                    id=\"PartialPriceNoOrdersReduceAllInfo\"\r\n                    defaultMessage=\"This trade amount is too high for present market liquidity. Please reduce amount to {maxForSell}.\"\r\n                    values={{\r\n                      maxForBuy: `${maxAmount} ${getCurrency.toUpperCase()}`,\r\n                      maxForSell: `${maxBuyAmount.toFixed(8)} ${haveCurrency.toUpperCase()}`,\r\n                    }}\r\n                  />\r\n                </p>\r\n              </Fragment>\r\n            )}\r\n\r\n            {isErrorLowAmount && (\r\n              <p styleName=\"error\">\r\n                <FormattedMessage\r\n                  id=\"ErrorBtcLowAmount\"\r\n                  defaultMessage=\"This amount is too low\"\r\n                  values={{\r\n                    btcAmount:\r\n                      this.state.haveCurrency === 'btc'\r\n                        ? this.state.haveAmount\r\n                        : this.state.getAmount,\r\n                  }}\r\n                />\r\n              </p>\r\n            )}\r\n\r\n            {isDeclinedOffer && (\r\n              <p styleName=\"error link\" onClick={() => this.goDeclimeFaq()}>\r\n                {' '}\r\n                {/* eslint-disable-line */}\r\n                <FormattedMessage\r\n                  id=\"PartialOfferCantProceed1\"\r\n                  defaultMessage=\"Request rejected, possibly you have not complete another swap {br}{link}\"\r\n                  values={{\r\n                    link: (\r\n                      <a className=\"errorLink\" role=\"button\" onClick={() => this.goDeclimeFaq()}>\r\n                        {' '}\r\n                        {/* eslint-disable-line */}\r\n                        <FormattedMessage\r\n                          id=\"PartialOfferCantProceed1_1\"\r\n                          defaultMessage=\"Check here\"\r\n                        />\r\n                      </a>\r\n                    ),\r\n                    br: <br />,\r\n                  }}\r\n                />\r\n              </p>\r\n            )}\r\n\r\n            {isErrorExternalDisabled && (\r\n              <p styleName=\"error\">\r\n                The exchange is temporarily disabled for some external addresses (under maintenance)\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div styleName=\"conditions\">\r\n            <div styleName={`price ${isDark ? '--dark' : ''}`}>\r\n              <FormattedMessage id=\"Exchange_BestPrice\" defaultMessage=\"Best price:\" />{' '}\r\n              {!isPrice && !isErrorNoOrders && <InlineLoader />}\r\n              {isPrice &&\r\n                `1 ${getCurrency.toUpperCase()} = ${oneCryptoCost.toFixed(\r\n                  5\r\n                )} ${haveCurrency.toUpperCase()}`}\r\n              {isErrorNoOrders && '?'}\r\n            </div>\r\n\r\n            <div styleName=\"fees\">\r\n              <div styleName=\"serviceFee\">\r\n                <span>\r\n                  <FormattedMessage id=\"Exchange_ServiceFee\" defaultMessage=\"Service fee\" />:\r\n                </span>\r\n                &nbsp;\r\n                <span>0</span>\r\n              </div>\r\n\r\n              <div styleName=\"minerFee\">\r\n                <span>\r\n                  <FormattedMessage id=\"Exchange_MinerFees\" defaultMessage=\"Miner fee\" />:\r\n                </span>\r\n                &nbsp;\r\n                {!pairFees ? (\r\n                  <span>\r\n                    <InlineLoader />\r\n                  </span>\r\n                ) : (\r\n                  <span>\r\n                    {pairFees.buy.fee} {pairFees.buy.coin} + {pairFees.sell.fee}{' '}\r\n                    {pairFees.sell.coin}\r\n                    {fiatFeeCalculation > 0 && <span> &asymp; ${fiatFeeCalculation} </span>}\r\n                    <a\r\n                      href=\"https://wiki.swaponline.io/faq/why-i-pay-ming-fees-of-btc-and-eth-both-why-not-seller/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      (?)\r\n                    </a>\r\n                  </span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {isWaitForPeerAnswer && (\r\n            <div styleName=\"swapStartStatus\">\r\n              <div styleName=\"swapStartStatusLoader\">\r\n                <InlineLoader />\r\n              </div>\r\n              <FormattedMessage\r\n                id=\"partial291\"\r\n                defaultMessage=\"Waiting for another participant (30 sec)\"\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <div styleName=\"buttons\">\r\n            {/* Exchange */}\r\n            <Button\r\n              className=\"data-tut-Exchange_tourDisabled\"\r\n              styleName=\"button\"\r\n              blue\r\n              onClick={this.initSwap}\r\n              disabled={!canStartSwap}\r\n            >\r\n              {linked.haveAmount.value > 0 ? (\r\n                <FormattedMessage id=\"partial541\" defaultMessage=\"Exchange now\" />\r\n              ) : (\r\n                <FormattedMessage id=\"enterYouSend\" defaultMessage='Enter \"You send\" amount' />\r\n              )}\r\n            </Button>\r\n            {/* Button Create offer */}\r\n            <>\r\n              <Button\r\n                id=\"createOrderReactTooltipMessageForUser\"\r\n                styleName={`button link-like ${haveBalance ? '' : 'noMany'}`}\r\n                onClick={haveBalance ? this.createOffer : null}\r\n              >\r\n                <FormattedMessage id=\"orders128\" defaultMessage=\"Create offer\" />\r\n              </Button>\r\n              {haveBalance ? (\r\n                <ThemeTooltip\r\n                  id=\"createOrderReactTooltipMessageForUser\"\r\n                  effect=\"solid\"\r\n                  place=\"bottom\"\r\n                >\r\n                  <FormattedMessage\r\n                    id=\"createOrderMessageForUser\"\r\n                    defaultMessage=\"You must be online all the time, otherwise your order will not be visible to other users\"\r\n                  />\r\n                </ThemeTooltip>\r\n              ) : (\r\n                <ThemeTooltip\r\n                  id=\"createOrderReactTooltipMessageForUser\"\r\n                  effect=\"solid\"\r\n                  place=\"bottom\"\r\n                >\r\n                  <FormattedMessage\r\n                    id=\"createOrderNoManyMessageForUser\"\r\n                    defaultMessage=\"Top up your balance\"\r\n                  />\r\n                </ThemeTooltip>\r\n              )}\r\n            </>\r\n\r\n            {isIncompletedSwaps && (\r\n              <Button blue styleName=\"buttonContinueSwap\" onClick={this.showIncompleteSwap}>\r\n                <FormattedMessage id=\"continueDeclined977\" defaultMessage=\"Continue your swaps\" />\r\n              </Button>\r\n            )}\r\n          </div>\r\n\r\n          <div styleName=\"networkStatusPlace\">\r\n            <NetworkStatus />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <div styleName=\"exchangeWrap\">\r\n        <div\r\n          styleName={`promoContainer ${isDark ? '--dark' : ''}`}\r\n          ref={(ref) => (this.promoContainer = ref)}\r\n        >\r\n          {config && config.showHowItsWork && (\r\n            <div\r\n              styleName=\"scrollToTutorialSection\"\r\n              ref={(ref) => (this.scrollTrigger = ref)}\r\n              onClick={() =>\r\n                animate((timePassed) => {\r\n                  window.scrollTo(0, this.promoContainer.clientHeight * (timePassed / 100))\r\n                }, 100)\r\n              }\r\n            >\r\n              <span styleName=\"scrollAdvice\">\r\n                <FormattedMessage id=\"PartialHowItWorks10\" defaultMessage=\"How it works?\" />\r\n              </span>\r\n              <span styleName=\"scrollTrigger\" />\r\n            </div>\r\n          )}\r\n          <Fragment>\r\n            <div styleName=\"container\">\r\n              <Promo\r\n                subTitle={subTitle(\r\n                  sellTokenFullName,\r\n                  haveCurrency.toUpperCase(),\r\n                  buyTokenFullName,\r\n                  getCurrency.toUpperCase()\r\n                )}\r\n              />\r\n              {Form}\r\n              <Orders\r\n                sell={haveCurrency}\r\n                buy={getCurrency}\r\n                linkedOrderId={linkedOrderId}\r\n                pairFees={pairFees}\r\n                balances={balances}\r\n                checkSwapAllow={this.checkSwapAllow}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        </div>\r\n        {config && config.showHowItsWork && (\r\n          <Fragment>\r\n            {/*\r\n            //@ */}\r\n            <HowItWorks />\r\n            <VideoAndFeatures />\r\n            <Quote />\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]}]}