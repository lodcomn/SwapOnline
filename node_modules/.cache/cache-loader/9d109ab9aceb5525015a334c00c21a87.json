{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\redux\\actions\\core.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\redux\\actions\\core.ts","mtime":1614852356802},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/redux/actions/core.ts"],"names":["reducers","actions","getState","SwapApp","Swap","constants","Pair","config","BigNumber","metamask","AddressType","helpers","debug","console","log","getOrders","orders","core","addCurrencyFromOrders","isWidget","currenciesGetState","currencies","allCurrencyies","items","map","item","name","toLowerCase","partialCurrency","partialItems","sellOrderArray","sellCurrency","buyOrderArray","buyCurrency","sortedArray","includes","push","hasUpdates","forEach","toUpperCase","title","icon","value","updatePartialItems","getSwapById","id","shared","getUserData","currency","user","btcData","ethData","ghostData","nextData","setFilter","filter","acceptRequest","orderId","participantPeer","order","services","getByKey","declineRequest","rememberOrder","rememberedOrders","savedOrders","localStorage","setItem","JSON","stringify","saveDeletedOrder","deletedOrders","forgetOrders","removeOrder","feed","deleteItemToFeed","remove","updateCore","showMyOrders","hideMyOrders","deletedPartialCurrency","deletedOrder","deletedOrderSellCurrency","deletedOrderBuyCurrency","deletedOrderSell","deletedOrderBuy","premiumCurrencies","length","hasHiddenOrders","sendRequest","destination","callback","destinationAddress","address","userCurrencyData","reputation","reputationProof","requestOptions","participantMetadata","sendRequestForPartial","newValues","newOrder","isAccepted","oldOrder","oldPrice","fromOrder","price","newPrice","toString","minus","abs","div","isLessThanOrEqualTo","createOrder","data","isPartial","create","setupPartialOrder","pairData","setRequestHandlerForPartial","sellAmount","oldPair","buyAmount","isBid","times","initPartialOrders","isMy","requestToPeer","event","peer","onInit","getFeedDataFromOrder","getSwapHistory","swapId","parse","getItem","historySwap","getInformationAboutSwap","history","setSwapHistory","env","storage","getHiddenCoins","hiddenCoinsList","markCoinAsHidden","coin","doBackup","list","backupManager","serverBackup","markCoinAsVisible","findedCoin","find","el","getWallet","findCondition","addressType","wallets","getWallets","withInternal","founded","wallet","isMetamask","isConnected","conditionOk","Internal","Metamask","options","btcMultisigSMSData","btcMultisigUserData","btcMultisigPinData","tokensData","isTokenSigned","metamaskData","btcMnemonicData","ethMnemonicData","ghostMnemonicData","nextMnemonicData","metamaskConnected","isEnabled","allData","opts","curEnabled","eth","btc","isMnemonic","isRegistered","ghost","next","Object","keys","k","reducerDataTarget","account","keyPair","fetchWalletBalance","walletData","getCurrencyKey","ethToken","isEthToken","token","fetchBalance","contractAddress","decimals","balance","toNumber","error","warn"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport reducers from 'redux/core/reducers'\r\nimport actions from 'redux/actions'\r\nimport { getState } from 'redux/core'\r\nimport SwapApp from 'swap.app'\r\nimport Swap from 'swap.swap'\r\nimport { constants } from 'helpers'\r\nimport Pair from 'pages/Exchange/Orders/Pair'\r\nimport config from 'helpers/externalConfig'\r\nimport { BigNumber } from 'bignumber.js'\r\n\r\nimport metamask from 'helpers/metamask'\r\nimport { AddressType } from 'domain/address'\r\n\r\nimport helpers from 'helpers'\r\n\r\nconst debug = (...args) => console.log(...args)\r\n\r\nconst getOrders = (orders) => {\r\n  reducers.core.getOrders({ orders })\r\n  actions.core.addCurrencyFromOrders(orders)\r\n}\r\n\r\nconst addCurrencyFromOrders = (orders) => {\r\n  if (config && config.isWidget) return // НЕ добавляем валюты из ордеров в режиме виджета\r\n\r\n  // Зачем только это???\r\n  // Если в reducers.currencies.partialItems забыли добавить?\r\n  // Так там автоматически генерирует....\r\n  // TODO Проверить зависимости и удалить\r\n\r\n  const currenciesGetState = getState().currencies\r\n  const allCurrencyies = currenciesGetState.items.map((item) => item.name.toLowerCase()) // все валюты достпуные в клиенте\r\n  const partialCurrency = currenciesGetState.partialItems // получаем все премиальные валюты\r\n\r\n  const sellOrderArray = orders.map((item) => item.sellCurrency.toLowerCase()) // получаем из ордерова валюты на продажу\r\n  const buyOrderArray = orders.map((item) => item.buyCurrency.toLowerCase()) // получаем из ордерова валюты на покупку\r\n\r\n  let sortedArray = [...sellOrderArray] // записываем sellOrderArray в массив\r\n\r\n  // terators/generators require regenerator-runtime\r\n  for (const sellCurrency of sellOrderArray) {\r\n    // eslint-disable-line\r\n    for (const buyCurrency of buyOrderArray) {\r\n      // eslint-disable-line\r\n      if (sellCurrency !== buyCurrency) {\r\n        if (!sellOrderArray.includes(sellCurrency)) {\r\n          sortedArray.push(sellCurrency.toLowerCase())\r\n        } else if (!sellOrderArray.includes(buyCurrency)) {\r\n          sortedArray.push(buyCurrency.toLowerCase())\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  let hasUpdates = false\r\n\r\n  sortedArray.forEach((item) => {\r\n    // добавляем объект в дроп, еще раз проверяя, на совпадения\r\n    if (!partialCurrency.map((item) => item.name.toLowerCase()).includes(item)) {\r\n      if (allCurrencyies.includes(item)) {\r\n        // не пускаю валюты не существующие в клиенте\r\n        hasUpdates = true\r\n        partialCurrency.push({\r\n          name: item.toUpperCase(),\r\n          title: item.toUpperCase(),\r\n          icon: item.toLowerCase(),\r\n          value: item.toLowerCase(),\r\n        })\r\n      }\r\n    }\r\n  })\r\n\r\n  if (hasUpdates) {\r\n    reducers.currencies.updatePartialItems(partialCurrency)\r\n  }\r\n}\r\n//@\r\nconst getSwapById = (id) => new Swap(id, SwapApp.shared())\r\n\r\nconst getUserData = (currency) => {\r\n  switch (currency.toUpperCase()) {\r\n    case 'BTC':\r\n      return getState().user.btcData\r\n\r\n    case 'ETH':\r\n      return getState().user.ethData\r\n\r\n    case 'GHOST':\r\n      return getState().user.ghostData\r\n\r\n    case 'NEXT':\r\n      return getState().user.nextData\r\n\r\n    default:\r\n      return {}\r\n  }\r\n}\r\n\r\nconst setFilter = (filter) => {\r\n  reducers.core.setFilter({ filter })\r\n}\r\n\r\nconst acceptRequest = (orderId, participantPeer) => {\r\n  const order = SwapApp.shared().services.orders.getByKey(orderId)\r\n  order.acceptRequest(participantPeer)\r\n}\r\n\r\nconst declineRequest = (orderId, participantPeer) => {\r\n  const order = SwapApp.shared().services.orders.getByKey(orderId)\r\n  order.declineRequest(participantPeer)\r\n}\r\n\r\nconst rememberOrder = (orderId) => {\r\n  reducers.rememberedOrders.savedOrders(orderId)\r\n  localStorage.setItem(\r\n    constants.localStorage.savedOrders,\r\n    JSON.stringify(getState().rememberedOrders.savedOrders)\r\n  )\r\n}\r\n\r\nconst saveDeletedOrder = (orderId) => {\r\n  reducers.rememberedOrders.deletedOrders(orderId)\r\n  localStorage.setItem(\r\n    constants.localStorage.deletedOrders,\r\n    JSON.stringify(getState().rememberedOrders.deletedOrders)\r\n  )\r\n}\r\n\r\nconst forgetOrders = (orderId) => {\r\n  reducers.rememberedOrders.forgetOrders(orderId)\r\n  localStorage.setItem(\r\n    constants.localStorage.savedOrders,\r\n    JSON.stringify(getState().rememberedOrders.savedOrders)\r\n  )\r\n}\r\n\r\nconst removeOrder = (orderId) => {\r\n  actions.feed.deleteItemToFeed(orderId)\r\n  SwapApp.shared().services.orders.remove(orderId)\r\n  actions.core.updateCore()\r\n}\r\n\r\nconst showMyOrders = () => {\r\n  SwapApp.shared().services.orders.showMyOrders()\r\n}\r\n\r\nconst hideMyOrders = () => {\r\n  SwapApp.shared().services.orders.hideMyOrders()\r\n}\r\n\r\nconst deletedPartialCurrency = (orderId) => {\r\n  const deletedOrder = SwapApp.shared().services.orders.getByKey(orderId)\r\n  const deletedOrderSellCurrency = deletedOrder.sellCurrency\r\n  const deletedOrderBuyCurrency = deletedOrder.buyCurrency\r\n  const orders = SwapApp.shared().services.orders.items\r\n\r\n  const deletedOrderSell = orders.filter(\r\n    (item) => item.sellCurrency.toUpperCase() === deletedOrderSellCurrency\r\n  )\r\n  const deletedOrderBuy = orders.filter(\r\n    (item) => item.buyCurrency.toUpperCase() === deletedOrderBuyCurrency\r\n  )\r\n\r\n  const premiumCurrencies = ['BTC', 'ETH', 'GHOST', 'NEXT', 'SWAP'] // валюты, которые всегда должны быть в дропе\r\n\r\n  if (deletedOrderSell.length === 1 && !premiumCurrencies.includes(deletedOrderSellCurrency)) {\r\n    reducers.currencies.deletedPartialCurrency(deletedOrderSellCurrency)\r\n  } else if (deletedOrderBuy.length === 1 && !premiumCurrencies.includes(deletedOrderBuyCurrency)) {\r\n    reducers.currencies.deletedPartialCurrency(deletedOrderBuyCurrency)\r\n  }\r\n}\r\n\r\nconst hasHiddenOrders = () => SwapApp.shared().services.orders.hasHiddenOrders()\r\n\r\nconst sendRequest = (orderId, destination = {}, callback) => {\r\n  //@\r\n  const { address: destinationAddress } = destination\r\n\r\n  const order = SwapApp.shared().services.orders.getByKey(orderId)\r\n\r\n  const userCurrencyData = getUserData(order.buyCurrency)\r\n  const { address, reputation, reputationProof } = getUserData(order.buyCurrency)\r\n\r\n  const requestOptions = {\r\n    address: destinationAddress,\r\n    participantMetadata: {\r\n      address,\r\n      reputation,\r\n      reputationProof,\r\n    },\r\n  }\r\n\r\n  order.sendRequest(callback, requestOptions)\r\n}\r\n\r\nconst sendRequestForPartial = (orderId, newValues, destination = {}, callback) => {\r\n  //@\r\n  const { address: destinationAddress } = destination\r\n\r\n  const order = SwapApp.shared().services.orders.getByKey(orderId)\r\n\r\n  console.log('>>>sendRequestForPartial(), order =', order)\r\n\r\n  const { address, reputation, reputationProof } = getUserData(order.buyCurrency)\r\n\r\n  const requestOptions = {\r\n    address: destinationAddress,\r\n    participantMetadata: {\r\n      address,\r\n      reputation,\r\n      reputationProof,\r\n    },\r\n  }\r\n\r\n  //console.log('>>> core:sendRequestForPartial requestOptions =', requestOptions)\r\n\r\n  order.sendRequestForPartial(\r\n    newValues,\r\n    requestOptions,\r\n    (newOrder, isAccepted) => {\r\n      console.log('newOrder', newOrder)\r\n      console.log('isAccepted', isAccepted)\r\n\r\n      callback(newOrder, isAccepted)\r\n    },\r\n    (oldOrder, newOrder) => {\r\n      const oldPrice = Pair.fromOrder(oldOrder).price\r\n      const newPrice = Pair.fromOrder(newOrder).price\r\n\r\n      console.log('prices', oldPrice.toString(), newPrice.toString())\r\n      // | new - old | / old < 5%\r\n      return newPrice.minus(oldPrice).abs().div(oldPrice).isLessThanOrEqualTo(0.05)\r\n    }\r\n  )\r\n}\r\n\r\nconst createOrder = (data, isPartial = false) => {\r\n  const order = SwapApp.shared().services.orders.create(data)\r\n  if (!isPartial) {\r\n    return order\r\n  }\r\n\r\n  actions.core.setupPartialOrder(order)\r\n  return order\r\n}\r\n\r\nconst setupPartialOrder = (order) => {\r\n  const pairData = Pair.fromOrder(order)\r\n\r\n  if (!pairData || !pairData.price) {\r\n    return\r\n  }\r\n\r\n  const { price } = pairData\r\n\r\n  order.setRequestHandlerForPartial('sellAmount', ({ sellAmount }, oldOrder) => {\r\n    const oldPair = Pair.fromOrder(oldOrder)\r\n    debug('oldPair', oldPair)\r\n\r\n    // if BID, then\r\n    // price == buyAmount / sellAmount\r\n\r\n    const buyAmount = oldPair.isBid() ? sellAmount.div(price) : sellAmount.times(price)\r\n\r\n    debug('newBuyAmount', buyAmount)\r\n\r\n    const newOrder = { sellAmount, buyAmount }\r\n    debug('newOrder', newOrder)\r\n\r\n    return newOrder\r\n  })\r\n\r\n  order.setRequestHandlerForPartial('buyAmount', ({ buyAmount }, oldOrder) => {\r\n    const oldPair = Pair.fromOrder(oldOrder)\r\n    debug('oldPair', oldPair)\r\n\r\n    // BUY [main] = SELL [base] CURRENCY\r\n    // price = [main]/[base] = [buy]/[sell]\r\n\r\n    // BUY 10 ETH = SELL 1 BTC\r\n    // price = 10 = buyAmount / sellAmount\r\n    // newSellAmount = buyAmount / price\r\n\r\n    const sellAmount = oldPair.isBid() ? buyAmount.times(price) : buyAmount.div(price)\r\n\r\n    debug('newSellAmount', sellAmount)\r\n\r\n    const newOrder = { sellAmount, buyAmount }\r\n    debug('newOrder', newOrder)\r\n\r\n    return newOrder\r\n  })\r\n}\r\n\r\nconst initPartialOrders = () => {\r\n  SwapApp.shared().services.orders.items.forEach((order) => {\r\n    if (order && order.isMy && order.isPartial) {\r\n      actions.core.setupPartialOrder(order)\r\n    }\r\n  })\r\n}\r\n\r\nconst requestToPeer = (event, peer, data, callback) => {\r\n  SwapApp.shared().services.orders.requestToPeer(event, peer, data, callback)\r\n}\r\n\r\nconst updateCore = () => {\r\n  SwapApp.onInit(() => {\r\n    const orders = SwapApp.shared().services.orders.items\r\n\r\n    getOrders(orders)\r\n\r\n    actions.feed.getFeedDataFromOrder(orders)\r\n  })\r\n}\r\n\r\nconst getSwapHistory = () => {\r\n  const swapId = JSON.parse(localStorage.getItem('swapId'))\r\n\r\n  if (swapId === null || swapId.length === 0) {\r\n    return\r\n  }\r\n\r\n  const historySwap = swapId.map((item) => getInformationAboutSwap(item))\r\n\r\n  reducers.history.setSwapHistory(historySwap)\r\n}\r\n\r\nconst getInformationAboutSwap = (swapId) => {\r\n  if (swapId.length > 0 && typeof swapId === 'string') {\r\n    return {\r\n      ...SwapApp.shared().env.storage.getItem(`swap.${swapId}`),\r\n      ...SwapApp.shared().env.storage.getItem(`flow.${swapId}`),\r\n    }\r\n  }\r\n}\r\n\r\nconst getHiddenCoins = () => getState().core.hiddenCoinsList || []\r\n\r\nconst markCoinAsHidden = (coin, doBackup = false) => {\r\n  let list = getState().core.hiddenCoinsList || []\r\n  if (!list.includes(coin)) {\r\n    reducers.core.markCoinAsHidden(coin)\r\n    localStorage.setItem(\r\n      constants.localStorage.hiddenCoinsList,\r\n      JSON.stringify(getState().core.hiddenCoinsList)\r\n    )\r\n\r\n    if (doBackup) {\r\n      actions.backupManager.serverBackup()\r\n    }\r\n  }\r\n}\r\n\r\nconst markCoinAsVisible = (coin, doBackup = false) => {\r\n  const { hiddenCoinsList } = constants.localStorage\r\n\r\n  const findedCoin = JSON.parse(localStorage.getItem(hiddenCoinsList)).find(\r\n    (el) => el.includes(coin) && el.includes(':')\r\n  )\r\n\r\n  reducers.core.markCoinAsVisible(findedCoin || coin)\r\n  localStorage.setItem(hiddenCoinsList, JSON.stringify(getState().core.hiddenCoinsList))\r\n\r\n  if (doBackup) {\r\n    actions.backupManager.serverBackup()\r\n  }\r\n}\r\n\r\ninterface I_getWallet_FindCondition {\r\n  currency?: string\r\n  address?: string\r\n  addressType?: string\r\n}\r\nconst getWallet = (findCondition: I_getWallet_FindCondition) => {\r\n  // specify addressType,\r\n  // otherwise it finds the first wallet from all origins, including metamask\r\n  const { currency, address, addressType } = findCondition\r\n\r\n  const wallets = getWallets({ withInternal: true })\r\n  const founded = wallets.filter((wallet) => {\r\n    if (wallet.isMetamask && !wallet.isConnected) return false\r\n    const conditionOk = currency && wallet.currency.toLowerCase() === currency.toLowerCase()\r\n\r\n    if (address) {\r\n      if (wallet.address.toLowerCase() === address.toLowerCase()) {\r\n        return conditionOk\r\n      }\r\n    }\r\n\r\n    if (addressType) {\r\n      if (\r\n        (addressType === AddressType.Internal && !wallet.isMetamask) ||\r\n        (addressType === AddressType.Metamask && wallet.isMetamask)\r\n      ) {\r\n        return conditionOk\r\n      }\r\n    }\r\n\r\n    return conditionOk\r\n  })\r\n\r\n  return founded.length ? founded[0] : false\r\n}\r\n\r\nconst getWallets = (options) => {\r\n  const { withInternal } = options\r\n\r\n  const {\r\n    user: {\r\n      btcData,\r\n      ghostData,\r\n      nextData,\r\n      btcMultisigSMSData,\r\n      btcMultisigUserData,\r\n      btcMultisigPinData,\r\n      ethData,\r\n      tokensData,\r\n      isTokenSigned,\r\n\r\n      metamaskData,\r\n    },\r\n  } = getState()\r\n\r\n  // Sweep\r\n  const {\r\n    user: { btcMnemonicData, ethMnemonicData, ghostMnemonicData, nextMnemonicData },\r\n  } = getState()\r\n\r\n  const metamaskConnected = metamask.isEnabled() && metamask.isConnected()\r\n\r\n  const allData = [\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.eth\r\n      ? metamaskData\r\n        ? [metamaskData]\r\n        : []\r\n      : []),\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.btc\r\n      ? btcMnemonicData && !btcData.isMnemonic\r\n        ? [btcMnemonicData]\r\n        : []\r\n      : []), // Sweep\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.eth\r\n      ? ethMnemonicData && !ethData.isMnemonic\r\n        ? [ethMnemonicData]\r\n        : []\r\n      : []), // Sweep\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.btc ? [btcData] : []),\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.btc ? [btcMultisigSMSData] : []),\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.btc\r\n      ? btcMultisigPinData && btcMultisigPinData.isRegistered\r\n        ? [btcMultisigPinData]\r\n        : []\r\n      : []),\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.btc ? [btcMultisigUserData] : []),\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.btc\r\n      ? btcMultisigUserData && btcMultisigUserData.wallets\r\n        ? btcMultisigUserData.wallets\r\n        : []\r\n      : []),\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.eth\r\n      ? metamaskConnected\r\n        ? withInternal\r\n          ? [ethData]\r\n          : []\r\n        : [ethData]\r\n      : []),\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.ghost ? [ghostData] : []),\r\n    ...(!config.opts.curEnabled || config.opts.curEnabled.next ? [nextData] : []),\r\n    ...Object.keys(tokensData)\r\n      .filter((k) => !tokensData[k].reducerDataTarget)\r\n      .map((k) => tokensData[k]),\r\n  ].map(({ account, keyPair, ...data }) => ({\r\n    ...data,\r\n  }))\r\n\r\n  return allData.filter((item) => item && item.address)\r\n}\r\n\r\nconst fetchWalletBalance = async (walletData): Promise<number> => {\r\n  const name = helpers.getCurrencyKey(walletData.currency.toLowerCase(), true)\r\n  if (helpers.ethToken.isEthToken({ name })) {\r\n    try {\r\n      const balance = await actions.token.fetchBalance(\r\n        walletData.address,\r\n        walletData.contractAddress,\r\n        walletData.decimals\r\n      )\r\n      return new BigNumber(balance).toNumber()\r\n    } catch (err) {\r\n      console.error(`Fail fetch balance for wallet '${name}'`, err)\r\n    }\r\n  } else {\r\n    if (\r\n      actions[name] &&\r\n      actions[name].fetchBalance &&\r\n      typeof actions[name].fetchBalance === `function`\r\n    ) {\r\n      try {\r\n        const balance = await actions[name].fetchBalance(walletData.address)\r\n        return new BigNumber(balance).toNumber()\r\n      } catch (err) {\r\n        console.error(`Fail fetch balance for wallet '${name}'`, err)\r\n      }\r\n    } else {\r\n      console.warn(`Fail fetch balance for wallet '${name}' - not fetchBalance in actions`)\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nexport default {\r\n  rememberOrder,\r\n  forgetOrders,\r\n  getSwapById,\r\n  getOrders,\r\n  setFilter,\r\n  createOrder,\r\n  getSwapHistory,\r\n  updateCore,\r\n  sendRequest,\r\n  sendRequestForPartial,\r\n  acceptRequest,\r\n  declineRequest,\r\n  removeOrder,\r\n  markCoinAsHidden,\r\n  markCoinAsVisible,\r\n  requestToPeer,\r\n  getInformationAboutSwap,\r\n  saveDeletedOrder,\r\n  hideMyOrders,\r\n  showMyOrders,\r\n  hasHiddenOrders,\r\n  setupPartialOrder,\r\n  initPartialOrders,\r\n  deletedPartialCurrency,\r\n  addCurrencyFromOrders,\r\n  getWallets,\r\n  getWallet,\r\n  getHiddenCoins,\r\n  fetchWalletBalance,\r\n}\r\n"]}]}