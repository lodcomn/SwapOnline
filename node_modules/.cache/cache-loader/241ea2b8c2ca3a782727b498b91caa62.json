{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.room\\SwapRoom.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.room\\SwapRoom.ts","mtime":1614850288362},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.room/SwapRoom.ts"],"names":["debug","Events","ServiceInterface","createP2PNode","p2pRoom","SwapRoom","config","peer","_events","dispatch","message","from","rawData","data","parsedData","JSON","parse","toString","err","console","error","fromAddress","sign","event","action","recover","_recoverMessage","acknowledgeReceipt","fromPeer","id","Error","_serviceName","_config","connection","roomName","peerIdJson","app","env","storage","getItem","then","p2pNode","setItem","peerId","toJSON","start","_init","_idB58String","p2pConnection","log","info","setTimeout","defaultRoomName","isMainNet","pollInterval","isOnline","on","_handleUserOnline","_handleUserOffline","_handleNewMessage","eventName","handler","subscribe","unsubscribe","once","hash","web3","utils","soliditySha3","stringify","eth","accounts","signature","services","auth","privateKey","callback","address","waitReceipt","CheckReceiptsT","clearTimeout","repeat","sendConfirmation","sendMessagePeer","checkReceiving","delivered","_signMessage","sendTo","broadcast"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport debug from 'debug'\r\nimport SwapApp, { constants, Events, ServiceInterface } from 'swap.app'\r\n\r\nimport createP2PNode from '../../common/messaging/pubsubRoom/createP2PNode'\r\nimport p2pRoom from '../../common/messaging/pubsubRoom'\r\n\r\n\r\nclass SwapRoom extends ServiceInterface {\r\n\r\n  _serviceName: string\r\n  _config: any\r\n  _events: any\r\n  peer: any\r\n  connection: any\r\n  roomName: string\r\n\r\n  app: any\r\n  CheckReceiptsT: any\r\n  //@\r\n  static get name() {\r\n    return 'room'\r\n  }\r\n\r\n  constructor(config) {\r\n    super()\r\n\r\n    if (!config || typeof config !== 'object' || typeof config.config !== 'object') {\r\n      throw new Error('SwapRoomService: \"config\" of type object required')\r\n    }\r\n\r\n    this._serviceName   = 'room'\r\n    this._config        = config\r\n    this._events        = new Events()\r\n    this.peer           = null\r\n    this.connection     = null\r\n    this.roomName       = null\r\n  }\r\n\r\n  initService() {\r\n    const peerIdJson = this.app.env.storage.getItem(\r\n      'libp2p:peerIdJson'\r\n    )\r\n    createP2PNode({\r\n      peerIdJson,\r\n    }).then((p2pNode: any) => {\r\n      // Save PeerId\r\n      this.app.env.storage.setItem(\r\n        'libp2p:peerIdJson',\r\n        p2pNode.peerId.toJSON()\r\n      )\r\n      // Start p2p node\r\n      p2pNode.start().then(async () => {\r\n        this._init({\r\n          peer: {\r\n            id: p2pNode.peerId._idB58String,\r\n          },\r\n          p2pConnection: p2pNode,\r\n        })\r\n      }).catch((error) => {\r\n        console.log('Fail start p2pnode', error)\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  _init({ peer, p2pConnection }) {\r\n    console.info('Room: init...')\r\n    if (!p2pConnection) {\r\n      setTimeout(() => {\r\n        this._init({ peer, p2pConnection })\r\n      }, 999)\r\n      return\r\n    }\r\n\r\n    this.peer = peer.id\r\n\r\n    const defaultRoomName = this.app.isMainNet()\r\n      ? 'swap.online'\r\n      : 'testnet.swap.online'\r\n\r\n    this.roomName = this._config.roomName || defaultRoomName\r\n\r\n    debug('swap.core:room')(`Using room: ${this.roomName}`)\r\n\r\n    this.connection = new p2pRoom(p2pConnection, this.roomName, {\r\n      pollInterval: 1000,\r\n    })\r\n\r\n    this.connection.isOnline = () => {\r\n      console.log('Call pubsubRoom isOnline')\r\n      // @ToDo - may be use isStarted\r\n      return true\r\n    }\r\n\r\n    this.connection.on('peer joined', this._handleUserOnline)\r\n    this.connection.on('peer left', this._handleUserOffline)\r\n    this.connection.on('message', this._handleNewMessage)\r\n\r\n    this._events.dispatch('ready')\r\n    console.info(`Room: ready! (${this.roomName})`)\r\n  }\r\n\r\n  _handleUserOnline = (peer) => {\r\n    if (peer !== this.peer) {\r\n      this._events.dispatch('user online', peer)\r\n    }\r\n  }\r\n\r\n  _handleUserOffline = (peer) => {\r\n    if (peer !== this.peer) {\r\n      this._events.dispatch('user offline', peer)\r\n    }\r\n  }\r\n\r\n  _handleNewMessage = (message) => {\r\n    const { from, data: rawData } = message\r\n    debug('swap.verbose:room')('message from', from)\r\n\r\n\r\n    if (from === this.peer) {\r\n      return\r\n    }\r\n\r\n    let parsedData\r\n\r\n    try {\r\n      parsedData = JSON.parse(rawData.toString())\r\n    } catch (err) {\r\n      console.error('parse message data err:', err)\r\n    }\r\n\r\n    const { fromAddress, data, sign, event, action } = parsedData\r\n\r\n    if (!data) {\r\n      return\r\n    }\r\n\r\n    debug('swap.verbose:room')('data:', parsedData)\r\n\r\n    const recover = this._recoverMessage(data, sign)\r\n\r\n    if (recover !== fromAddress) {\r\n      console.error(`Wrong message sign! Message from: ${fromAddress}, recover: ${recover}`)\r\n      return\r\n    }\r\n\r\n    if (action === 'active') {\r\n      this.acknowledgeReceipt(parsedData)\r\n    }\r\n\r\n    this._events.dispatch(event, {\r\n      fromPeer: from.id,\r\n      ...data,\r\n    })\r\n  }\r\n\r\n  on(eventName, handler) {\r\n    this._events.subscribe(eventName, handler)\r\n    return this\r\n  }\r\n\r\n  off(eventName, handler) {\r\n    this._events.unsubscribe(eventName, handler)\r\n    return this\r\n  }\r\n\r\n  once(eventName, handler) {\r\n    this._events.once(eventName, handler)\r\n    return this\r\n  }\r\n\r\n  subscribe(eventName, handler) {\r\n    this._events.subscribe(eventName, handler)\r\n    return this\r\n  }\r\n\r\n  unsubscribe(eventName, handler) {\r\n    this._events.unsubscribe(eventName, handler)\r\n    return this\r\n  }\r\n\r\n  _recoverMessage(message, sign) {\r\n    const hash      = this.app.env.web3.utils.soliditySha3(JSON.stringify(message))\r\n    const recover   = this.app.env.web3.eth.accounts.recover(hash, sign.signature)\r\n\r\n    return recover\r\n  }\r\n\r\n  _signMessage(message) {\r\n    const hash  = this.app.env.web3.utils.soliditySha3(JSON.stringify(message))\r\n    const sign  = this.app.env.web3.eth.accounts.sign(hash, this.app.services.auth.accounts.eth.privateKey)\r\n\r\n    return sign\r\n  }\r\n\r\n  checkReceiving(message, callback) {\r\n    let address = message.fromAddress\r\n\r\n    const waitReceipt = (data) => {\r\n      if (!data.action || data.action !== 'confirmation') {\r\n        return\r\n      }\r\n\r\n      if (JSON.stringify(message.data) === JSON.stringify(data.message)) {\r\n        this.unsubscribe(address, waitReceipt)\r\n\r\n        if (this.CheckReceiptsT[message.peer]) {\r\n          clearTimeout(this.CheckReceiptsT[message.peer])\r\n        }\r\n\r\n        callback(true)\r\n      }\r\n    }\r\n\r\n    this.subscribe(address, waitReceipt)\r\n\r\n    if (!this.CheckReceiptsT) {\r\n      this.CheckReceiptsT = {}\r\n    }\r\n\r\n    this.CheckReceiptsT[message.peer] = setTimeout(() => {\r\n      this.unsubscribe(address, waitReceipt)\r\n\r\n      callback(false)\r\n    }, 15000)\r\n  }\r\n\r\n  sendConfirmation(peer, message, callback = null, repeat = 9) {\r\n    if (!this.connection) {\r\n      setTimeout(() => {\r\n        this.sendConfirmation(peer, message, callback, repeat)\r\n      }, 1000)\r\n      return\r\n    }\r\n\r\n    if (message.action === 'confirmation' && peer !== this.peer) {\r\n      return\r\n    }\r\n\r\n    message = this.sendMessagePeer(peer, message)\r\n\r\n    this.checkReceiving(message, delivered => {\r\n      if (!delivered && repeat > 0) {\r\n        repeat--\r\n        setTimeout(() => {\r\n          this.sendConfirmation(peer, message, callback, repeat)\r\n        }, 1000)\r\n        return\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback(delivered)\r\n      }\r\n    })\r\n  }\r\n\r\n  acknowledgeReceipt(message) {\r\n    if (!message.peer || !message.action\r\n      || message.action  === 'confirmation'\r\n      || message.action  === 'active') {\r\n      return\r\n    }\r\n\r\n    const { fromAddress, data } = message\r\n\r\n    this.sendMessagePeer(fromAddress, {\r\n      action  : 'confirmation',\r\n      data,\r\n    })\r\n  }\r\n\r\n  sendMessagePeer(peer, message) {\r\n    if (!this.connection) {\r\n      if (message.action !== 'active') {\r\n        setTimeout(() => {\r\n          this.sendMessagePeer(peer, message)\r\n        }, 999)\r\n      }\r\n      return\r\n    }\r\n\r\n    debug('swap.verbose:room')('sent message to peer', peer)\r\n    // debug('swap.verbose:room')('message', message)\r\n\r\n    const { data, event }  = message\r\n    const sign = this._signMessage(data)\r\n\r\n    this.connection.sendTo(peer, JSON.stringify({\r\n      fromAddress: this.app.services.auth.accounts.eth.address,\r\n      data,\r\n      event,\r\n      sign,\r\n    }))\r\n\r\n    return message\r\n  }\r\n\r\n  sendMessageRoom(message) {\r\n    const { data, event } = message\r\n    const sign = this._signMessage(data)\r\n\r\n    this.connection.broadcast(JSON.stringify({\r\n      fromAddress: this.app.services.auth.accounts.eth.address,\r\n      data,\r\n      event,\r\n      sign,\r\n    }))\r\n  }\r\n}\r\n\r\n\r\nexport default SwapRoom\r\n"]}]}