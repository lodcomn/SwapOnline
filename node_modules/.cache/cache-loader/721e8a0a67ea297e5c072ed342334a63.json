{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\PreventMultiTabs\\PreventMultiTabs.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\PreventMultiTabs\\PreventMultiTabs.tsx","mtime":1614850576262},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09ICJ1bmRlZmluZWQiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKLy8gQHRzLW5vY2hlY2sKaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFdpZHRoQ29udGFpbmVyIGZyb20gJ2NvbXBvbmVudHMvbGF5b3V0L1dpZHRoQ29udGFpbmVyL1dpZHRoQ29udGFpbmVyJzsKaW1wb3J0IHsgRm9ybWF0dGVkTWVzc2FnZSB9IGZyb20gJ3JlYWN0LWludGwnOwppbXBvcnQgQnV0dG9uIGZyb20gJ2NvbXBvbmVudHMvY29udHJvbHMvQnV0dG9uL0J1dHRvbic7CmltcG9ydCBjb25maWcgZnJvbSAnYXBwLWNvbmZpZyc7CmltcG9ydCB7IGNvbnN0YW50cywgbG9jYWxTdG9yYWdlIH0gZnJvbSAnaGVscGVycyc7CmltcG9ydCBmZWVkYmFjayBmcm9tICdzaGFyZWQvaGVscGVycy9mZWVkYmFjayc7CnZhciBpc1dpZGdldEJ1aWxkID0gY29uZmlnICYmIGNvbmZpZy5pc1dpZGdldDsKCnZhciBQcmV2ZW50TXVsdGlUYWJzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7CiAgX2luaGVyaXRzKFByZXZlbnRNdWx0aVRhYnMsIF9Db21wb25lbnQpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFByZXZlbnRNdWx0aVRhYnMpOwoKICBmdW5jdGlvbiBQcmV2ZW50TXVsdGlUYWJzKHByb3BzKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFByZXZlbnRNdWx0aVRhYnMpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgImhhbmRsZVN3aXRjaENsaWNrIiwgZnVuY3Rpb24gKCkgewogICAgICBmZWVkYmFjay5hcHAub3RoZXJUYWJzQ2xvc2VkKCk7CiAgICAgIHZhciBvblN3aXRjaFRhYiA9IF90aGlzLnByb3BzLm9uU3dpdGNoVGFiOwogICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShjb25zdGFudHMubG9jYWxTdG9yYWdlLnByZXZlbnRTd2l0Y2gsICd3aGUtYXJlLW5vdy1tYWtlLXN3aXRjaC10YWInKTsKICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oY29uc3RhbnRzLmxvY2FsU3RvcmFnZS5wcmV2ZW50U3dpdGNoKTsKICAgICAgfSwgNTAwMCk7CgogICAgICBpZiAob25Td2l0Y2hUYWIgaW5zdGFuY2VvZiBGdW5jdGlvbikgewogICAgICAgIG9uU3dpdGNoVGFiKCk7CiAgICAgIH0KICAgIH0pOwoKICAgIHZhciBwcmV2ZW50U3dpdGNoID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oY29uc3RhbnRzLmxvY2FsU3RvcmFnZS5wcmV2ZW50U3dpdGNoKTsKCiAgICBpZiAoIXByZXZlbnRTd2l0Y2gpIHsKICAgICAgLy8gYXV0byBzd2l0Y2gKICAgICAgc2V0VGltZW91dChfdGhpcy5oYW5kbGVTd2l0Y2hDbGljaywgMTAwKTsKICAgIH0KCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUHJldmVudE11bHRpVGFicywgW3sKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICByZXR1cm4gKAogICAgICAgIC8qI19fUFVSRV9fKi8KCiAgICAgICAgLyoNCiAgICAgICAgLy9AICovCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChXaWR0aENvbnRhaW5lciwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImgxIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgICAgaWQ6ICJQcmV2ZW50TXVsdGlUYWJzIiwKICAgICAgICAgIGRlZmF1bHRNZXNzYWdlOiAiU3VjaCBlcnJvciwgbWFueSB0YWJzIgogICAgICAgIH0pKSwgaXNXaWRnZXRCdWlsZCAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChGb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgICBpZDogIlByZXZlbnRNdWx0aVRhYnNXaWRnZXRCdWlsZCIsCiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogInt3aWRnZXROYW1lfSBzdXBwb3J0cyBvbmx5IG9uZSBhY3RpdmUgdGFiLiBQbGVhc2UgY2xvc2UgdGhlIG90aGVyIG9wZW4gd2luZG93IGFuZCByZWZyZXNoIHRvIGNvbnRpbnVlLiIsCiAgICAgICAgICB2YWx1ZXM6IHsKICAgICAgICAgICAgd2lkZ2V0TmFtZTogd2luZG93LndpZGdldE5hbWUgfHwgJ0F0b21pYyBTd2FwIFdpZGdldCcKICAgICAgICAgIH0KICAgICAgICB9KSwgIWlzV2lkZ2V0QnVpbGQgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoRm9ybWF0dGVkTWVzc2FnZSwgewogICAgICAgICAgaWQ6ICJQcmV2ZW50TXVsdGlUYWJzMTIiLAogICAgICAgICAgZGVmYXVsdE1lc3NhZ2U6ICJPdXIgc2VydmljZSBTdXBwb3J0cyBvbmx5IG9uZSBhY3RpdmUgdGFiLiBQbGVhc2UgY2xvc2UgdGhlIG90aGVyIG9wZW4gd2luZG93IGFuZCByZWZyZXNoIHRvIGNvbnRpbnVlLiIKICAgICAgICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoImJyIiwgbnVsbCksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJiciIsIG51bGwpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHsKICAgICAgICAgIGJyYW5kOiB0cnVlLAogICAgICAgICAgZnVsbFdpZHRoOiB0cnVlLAogICAgICAgICAgb25DbGljazogdGhpcy5oYW5kbGVTd2l0Y2hDbGljawogICAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEZvcm1hdHRlZE1lc3NhZ2UsIHsKICAgICAgICAgIGlkOiAiUHJldmVudE11bHRpVGFic1N3aXRjaEFwcCIsCiAgICAgICAgICBkZWZhdWx0TWVzc2FnZTogIlx1MDQxN1x1MDQzMFx1MDQzQVx1MDQ0MFx1MDQ0Qlx1MDQ0Mlx1MDQ0QyBcdTA0MzRcdTA0NDBcdTA0NDNcdTA0MzNcdTA0MzhcdTA0MzUgXHUwNDMyXHUwNDNBXHUwNDNCXHUwNDMwXHUwNDM0XHUwNDNBXHUwNDM4IFx1MDQzOCBcdTA0M0ZcdTA0NDBcdTA0M0VcdTA0MzRcdTA0M0VcdTA0M0JcdTA0MzZcdTA0MzhcdTA0NDJcdTA0NEMgXHUwNDQyXHUwNDQzXHUwNDQyIgogICAgICAgIH0pKSkKICAgICAgKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBQcmV2ZW50TXVsdGlUYWJzOwp9KENvbXBvbmVudCk7CgpleHBvcnQgeyBQcmV2ZW50TXVsdGlUYWJzIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/PreventMultiTabs/PreventMultiTabs.tsx"],"names":["React","Component","WidthContainer","FormattedMessage","Button","config","constants","localStorage","feedback","isWidgetBuild","isWidget","PreventMultiTabs","props","app","otherTabsClosed","onSwitchTab","setItem","preventSwitch","setTimeout","removeItem","Function","getItem","handleSwitchClick","widgetName","window"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,cAAP,MAA2B,iDAA3B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,SAAxC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAGA,IAAMC,aAAa,GAAGJ,MAAM,IAAIA,MAAM,CAACK,QAAvC;;IAEqBC,gB;;;;;AACnB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,wEAaC,YAAM;AACxBJ,MAAAA,QAAQ,CAACK,GAAT,CAAaC,eAAb;AADwB,UAEhBC,WAFgB,GAEA,MAAKH,KAFL,CAEhBG,WAFgB;AAIxBR,MAAAA,YAAY,CAACS,OAAb,CAAqBV,SAAS,CAACC,YAAV,CAAuBU,aAA5C,EAA2D,6BAA3D;AACAC,MAAAA,UAAU,CAAC,YAAM;AACfX,QAAAA,YAAY,CAACY,UAAb,CAAwBb,SAAS,CAACC,YAAV,CAAuBU,aAA/C;AACD,OAFS,EAEP,IAFO,CAAV;;AAIA,UAAIF,WAAW,YAAYK,QAA3B,EAAqC;AACnCL,QAAAA,WAAW;AACZ;AACF,KAzBkB;;AAGjB,QAAME,aAAa,GAAGV,YAAY,CAACc,OAAb,CACpBf,SAAS,CAACC,YAAV,CAAuBU,aADH,CAAtB;;AAIA,QAAI,CAACA,aAAL,EAAoB;AAClB;AACAC,MAAAA,UAAU,CAAC,MAAKI,iBAAN,EAAyB,GAAzB,CAAV;AACD;;AAVgB;AAWlB;;;;WAgBD,kBAAS;AACP;AAAA;;AACE;AACN;AACM,4BAAC,cAAD,qBACE,6CACE,oBAAC,gBAAD;AACE,UAAA,EAAE,EAAC,kBADL;AAEE,UAAA,cAAc,EAAC;AAFjB,UADF,CADF,EAOGb,aAAa,iBACZ,oBAAC,gBAAD;AACE,UAAA,EAAE,EAAC,6BADL;AAEE,UAAA,cAAc,EAAC,wGAFjB;AAGE,UAAA,MAAM,EAAE;AAAEc,YAAAA,UAAU,EAAEC,MAAM,CAACD,UAAP,IAAqB;AAAnC;AAHV,UARJ,EAcG,CAACd,aAAD,iBACC,oBAAC,gBAAD;AACE,UAAA,EAAE,EAAC,oBADL;AAEE,UAAA,cAAc,EAAC;AAFjB,UAfJ,eAoBE,+BApBF,eAqBE,+BArBF,eAsBE,oBAAC,MAAD;AAAQ,UAAA,KAAK,MAAb;AAAc,UAAA,SAAS,MAAvB;AAAwB,UAAA,OAAO,EAAE,KAAKa;AAAtC,wBACE,oBAAC,gBAAD;AACE,UAAA,EAAE,EAAC,2BADL;AAEE,UAAA,cAAc,EAAC;AAFjB,UADF,CAtBF;AAHF;AAiCD;;;;EA9D2CrB,S;;SAAzBU,gB","sourcesContent":["// @ts-nocheck\r\nimport React, { Component } from 'react'\r\n\r\nimport WidthContainer from 'components/layout/WidthContainer/WidthContainer'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport Button from 'components/controls/Button/Button'\r\nimport config from 'app-config'\r\nimport { constants, localStorage } from 'helpers'\r\nimport feedback from 'shared/helpers/feedback'\r\n\r\n\r\nconst isWidgetBuild = config && config.isWidget\r\n\r\nexport default class PreventMultiTabs extends Component<any, any> {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const preventSwitch = localStorage.getItem(\r\n      constants.localStorage.preventSwitch\r\n    )\r\n\r\n    if (!preventSwitch) {\r\n      // auto switch\r\n      setTimeout(this.handleSwitchClick, 100)\r\n    }\r\n  }\r\n\r\n  handleSwitchClick = () => {\r\n    feedback.app.otherTabsClosed()\r\n    const { onSwitchTab } = this.props\r\n\r\n    localStorage.setItem(constants.localStorage.preventSwitch, 'whe-are-now-make-switch-tab')\r\n    setTimeout(() => {\r\n      localStorage.removeItem(constants.localStorage.preventSwitch)\r\n    }, 5000)\r\n\r\n    if (onSwitchTab instanceof Function) {\r\n      onSwitchTab()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      /*\r\n      //@ */\r\n      <WidthContainer>\r\n        <h1>\r\n          <FormattedMessage\r\n            id=\"PreventMultiTabs\"\r\n            defaultMessage=\"Such error, many tabs\"\r\n          />\r\n        </h1>\r\n        {isWidgetBuild && (\r\n          <FormattedMessage\r\n            id=\"PreventMultiTabsWidgetBuild\"\r\n            defaultMessage=\"{widgetName} supports only one active tab. Please close the other open window and refresh to continue.\"\r\n            values={{ widgetName: window.widgetName || 'Atomic Swap Widget' }}\r\n          />\r\n        )}\r\n        {!isWidgetBuild && (\r\n          <FormattedMessage\r\n            id=\"PreventMultiTabs12\"\r\n            defaultMessage=\"Our service Supports only one active tab. Please close the other open window and refresh to continue.\"\r\n          />\r\n        )}\r\n        <br />\r\n        <br />\r\n        <Button brand fullWidth onClick={this.handleSwitchClick}>\r\n          <FormattedMessage\r\n            id=\"PreventMultiTabsSwitchApp\"\r\n            defaultMessage=\"Закрыть другие вкладки и продолжить тут\"\r\n          />\r\n        </Button>\r\n      </WidthContainer>\r\n    )\r\n  }\r\n}\r\n"]}]}