{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\BtcMultisignSwitch\\BtcMultisignSwitch.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\BtcMultisignSwitch\\BtcMultisignSwitch.tsx","mtime":1614850922259},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/BtcMultisignSwitch/BtcMultisignSwitch.tsx"],"names":["React","Fragment","PropTypes","actions","cssModules","defaultStyles","styles","Modal","injectIntl","defineMessages","Table","WalletRow","BtcMultisignSwitch","allowMultiple","props","refreshWallets","name","modals","close","data","callback","state","wallets","isFetching","btcmultisig","getBtcMultisigKeys","then","setState","intl","itemsCount","length","langLabels","title","id","defaultMessage","fetching","empty","formatMessage","row","index","selectId","handleSelectId","handleFinish","handleRefresh","Component","string","object"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\nimport config from 'app-config'\r\n\r\nimport cssModules from 'react-css-modules'\r\n\r\nimport defaultStyles from '../Styles/default.scss'\r\nimport styles from './BtcMultisignSwitch.scss'\r\n\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport Button from 'components/controls/Button/Button'\r\n\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\n\r\nimport Table from 'components/tables/Table/Table'\r\nimport WalletRow from './WalletRow'\r\n\r\n\r\n@injectIntl\r\n@cssModules({ ...defaultStyles, ...styles }, { allowMultiple: true })\r\nexport default class BtcMultisignSwitch extends React.Component<any, any> {\r\n\r\n  props: any\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    data: PropTypes.object,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      wallets: [],\r\n      isFetching: true,\r\n    }\r\n  }\r\n\r\n  handleRefresh = async () => {\r\n    this.refreshWallets()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshWallets()\r\n  }\r\n\r\n  refreshWallets() {\r\n    //@\r\n    actions.btcmultisig.getBtcMultisigKeys().then((wallets) => {\r\n      this.setState({\r\n        wallets,\r\n        isFetching: false,\r\n      })\r\n    })\r\n  }\r\n\r\n  handleFinish = async () => {\r\n    const { name } = this.props\r\n    actions.modals.close(name)\r\n\r\n    if (this.props.data.callback) {\r\n      this.props.data.callback()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, intl } = this.props\r\n    const { wallets, isFetching } = this.state\r\n    const itemsCount = wallets.length\r\n\r\n    const langLabels = defineMessages({\r\n      title: {\r\n        id: 'btcmsSwitchTitle',\r\n        defaultMessage: `Подключенные BTC-Multisign кошельки`,\r\n      },\r\n      fetching: {\r\n        id: 'btcmsSwitchFetchWalletsData',\r\n        defaultMessage: `Загрузка BTC-Multisign кошельков`,\r\n      },\r\n      empty: {\r\n        id: 'btcmsSwitchFetchWalletsEmpty',\r\n        defaultMessage: `У вас нет BTC-Multisign кошельков`,\r\n      }\r\n    })\r\n\r\n    return (\r\n      <Modal name={name} title={`${intl.formatMessage(langLabels.title)}`}>\r\n        <Fragment>\r\n          <Table\r\n            styleName=\"wallets\"\r\n            rows={wallets}\r\n            textIfEmpty={`${intl.formatMessage((isFetching) ? langLabels.fetching : langLabels.empty)}`}\r\n            rowRender={(row, index, selectId, handleSelectId) => (\r\n              <WalletRow\r\n                key={index}\r\n                index={index}\r\n                itemsCount={itemsCount}\r\n                item={row}\r\n                handleFinish={this.handleFinish}\r\n                handleRefresh={this.handleRefresh}\r\n              />\r\n            )}\r\n            { ... this.props }\r\n          />\r\n        </Fragment>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}