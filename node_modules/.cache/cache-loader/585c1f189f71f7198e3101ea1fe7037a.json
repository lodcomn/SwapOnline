{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\RegisterPINProtected\\RegisterPINProtected.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\RegisterPINProtected\\RegisterPINProtected.tsx","mtime":1614842914017},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/RegisterPINProtected/RegisterPINProtected.tsx"],"names":["React","Fragment","PropTypes","constants","actions","Link","connect","cssModules","styles","ownStyle","Modal","FieldLabel","Input","Button","FormattedMessage","injectIntl","defineMessages","CopyToClipboard","moment","okSvg","langPrefix","langs","registerPinModal","id","defaultMessage","pinCodePlaceHolder","pinCodeConfirmPlaceHolder","needSaveMnemonicToContinue","pleaseSaveMnemonicToContinue","buttonSaveMnemonic","buttonCancel","enterPinCodeUpMessage","enterPinCodeBottomMessage","youNotEnterPin","pinCodeNotEqueals","pinServerOffline","useMnemonicNote","useMnemonicButton","restoryUpMessage","restoryBottomMessage","labelYourMnemonic","mnemonicPlaceHolder","shipButton","confirmButton","usepinButton","activateWallet","errorWalletLocked","labelYourPin","labelConfirmYourPin","buttonFinish","buttonCopiedInstruction","buttonCopyInstruction","buttonDownloadingInstruction","buttonDownloadInstruction","buttonShare","finishMessage","instructionMessage","howToWithdraw","errorMnemonicInvalid","errorMnemonicIncorrect","RegisterPINProtected","user","btcData","btcMultisigPinData","allowMultiple","props","mnemonic","state","setState","error","isShipped","btc","validateMnemonicWords","trim","btcmultisig","checkPinCanRestory","addPinWallet","generateRestoreInstruction","step","isMnemonicCopied","setTimeout","isInstructionCopied","restoreInstruction","isInstructionDownloaded","element","document","createElement","message","setAttribute","encodeURIComponent","window","location","hostname","format","style","display","body","appendChild","click","removeChild","pinCode","pinCodeConfirm","isMnemonicGenerated","isMnemonicValid","getRandomMnemonicWords","name","enableWalletSMS","modals","close","data","callback","open","Share","title","link","SaveMnemonicModal","onClose","localStorage","getItem","privateKeyNames","twentywords","mnemonicSaved","mnemonicWallet","useGeneratedKey","generatedKey","address","publicKeys","toString","privateKey","WIF","useGeneratedKeyEnabled","isWalletLockedOtherPin","length","register_PIN","result","answer","initStep","btcSmsMnemonicKeyGenerated","showFinalInstruction","intl","linked","all","formatMessage","handleBeginSaveMnemonic","handleClose","handleRestoreWallet","handleUsePin","handleCheckPIN","handleRestoreWalletStep","fontSize","textAlign","marginBottom","handleCopyInstruction","handleDownloadInstruction","handleShareInstruction","handleFinish","Component","string","object"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport helpers, { constants } from 'helpers'\r\nimport actions from 'redux/actions'\r\nimport Link from 'local_modules/sw-valuelink'\r\nimport { connect } from 'redaction'\r\nimport config from 'app-config'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from '../Styles/default.scss'\r\nimport ownStyle from './RegisterPINProtected.scss'\r\n\r\nimport { BigNumber } from 'bignumber.js'\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport FieldLabel from 'components/forms/FieldLabel/FieldLabel'\r\nimport Input from 'components/forms/Input/Input'\r\nimport Button from 'components/controls/Button/Button'\r\nimport Tooltip from 'components/ui/Tooltip/Tooltip'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { isMobile } from 'react-device-detect'\r\n\r\nimport typeforce from 'swap.app/util/typeforce'\r\nimport { inputReplaceCommaWithDot } from 'helpers/domUtils'\r\nimport CopyToClipboard from 'react-copy-to-clipboard'\r\nimport moment from 'moment/moment'\r\nimport okSvg from 'shared/images/ok.svg'\r\n\r\nconst langPrefix = `RegisterPINProtectedBTC`\r\n\r\nconst langs = defineMessages({\r\n  registerPinModal: {\r\n    id: `${langPrefix}_Title`,\r\n    defaultMessage: `Activate PIN Protected Wallet`,\r\n  },\r\n  pinCodePlaceHolder: {\r\n    id: `${langPrefix}_PinCodePlaceholder`,\r\n    defaultMessage: `Enter your pin code`,\r\n  },\r\n  pinCodeConfirmPlaceHolder: {\r\n    id: `${langPrefix}_PinCodeConfirmPlaceholder`,\r\n    defaultMessage: `Confirm your pin code`,\r\n  },\r\n  needSaveMnemonicToContinue: {\r\n    id: `${langPrefix}_YouNeedSaveMnemonic`,\r\n    defaultMessage: `Для активации 2fa вы должны сохранить 12 слов.`,\r\n  },\r\n  pleaseSaveMnemonicToContinue: {\r\n    id: `${langPrefix}_SaveYourMnemonic`,\r\n    defaultMessage: `Пожалуйста сохраните свою секретную фразу.`,\r\n  },\r\n  buttonSaveMnemonic: {\r\n    id: `${langPrefix}_ButtonSaveMnemonic`,\r\n    defaultMessage: `Save`,\r\n  },\r\n  buttonCancel: {\r\n    id: `${langPrefix}_ButtonCancel`,\r\n    defaultMessage: `Cancel`,\r\n  },\r\n  enterPinCodeUpMessage: {\r\n    id: `${langPrefix}_EnterPinCodeUpMessage`,\r\n    defaultMessage: `Активация кошелька BTC, защищенного паролем`,\r\n  },\r\n  enterPinCodeBottomMessage: {\r\n    id: `${langPrefix}_EnterPinCodeBottomMessage`,\r\n    defaultMessage: `Придумайте пароль`,\r\n  },\r\n  youNotEnterPin: {\r\n    id: `${langPrefix}_ErrorNoPinOrSmall`,\r\n    defaultMessage: `Пароль должен быть не менее 4х символов`,\r\n  },\r\n  pinCodeNotEqueals: {\r\n    id: `${langPrefix}_ErrorPinCodesNotEqueals`,\r\n    defaultMessage: `Пароли не совпадают`,\r\n  },\r\n  pinServerOffline: {\r\n    id: `${langPrefix}_PinServerOffline`,\r\n    defaultMessage: `Сервер авторизации не доступен`,\r\n  },\r\n  useMnemonicNote: {\r\n    id: `${langPrefix}_UseMnemonicRestoreNote`,\r\n    defaultMessage: `Вы можете востановить кошелек используя секретную фразу (12 слов)`,\r\n  },\r\n  useMnemonicButton: {\r\n    id: `${langPrefix}_UseMnemonicButton`,\r\n    defaultMessage: `Восстановить кошелек`,\r\n  },\r\n  restoryUpMessage: {\r\n    id: `${langPrefix}_RestoryUpMessage`,\r\n    defaultMessage: `Восстановление BTC кошелька защещеного паролем`,\r\n  },\r\n  restoryBottomMessage: {\r\n    id: `${langPrefix}_RestoryBottomMessage`,\r\n    defaultMessage: `Введите секретную фразу (12 слов)`,\r\n  },\r\n  labelYourMnemonic: {\r\n    id: `${langPrefix}_LabelYourMnemonic`,\r\n    defaultMessage: `Ваша секретная фраза`,\r\n  },\r\n  mnemonicPlaceHolder: {\r\n    id: `${langPrefix}_MnemonicPlaceholder`,\r\n    defaultMessage: `Введите секретную фразу (12 слов)`,\r\n  },\r\n  shipButton: {\r\n    id: `${langPrefix}_ShipButton`,\r\n    defaultMessage: `Processing ...`,\r\n  },\r\n  confirmButton: {\r\n    id: `${langPrefix}_ConfirmRestory`,\r\n    defaultMessage: `Восстановить кошелек`,\r\n  },\r\n  usepinButton: {\r\n    id: `${langPrefix}_UsePinButton`,\r\n    defaultMessage: `Использовать пароль`,\r\n  },\r\n  activateWallet: {\r\n    id: `${langPrefix}_ActivateWalletButton`,\r\n    defaultMessage: `Активировать кошелек`,\r\n  },\r\n  errorWalletLocked: {\r\n    id: `${langPrefix}_ErrorWalletLocked`,\r\n    defaultMessage: `Этот счет уже зарегистрирован и защищен другим паролем. Укажите правильный пароль`,\r\n  },\r\n  labelYourPin: {\r\n    id: `${langPrefix}_LabelYourPinCode`,\r\n    defaultMessage: `Your PIN-code`,\r\n  },\r\n  labelConfirmYourPin: {\r\n    id: `${langPrefix}_LabelConfirmYourPin`,\r\n    defaultMessage: `Confirm your PIN-code`,\r\n  },\r\n  buttonFinish: {\r\n    id: `${langPrefix}_ButtonFinish`,\r\n    defaultMessage: `Готово`,\r\n  },\r\n  buttonCopiedInstruction: {\r\n    id: `${langPrefix}_Instruction_Copied`,\r\n    defaultMessage: `Скопировано`,\r\n  },\r\n  buttonCopyInstruction: {\r\n    id: `${langPrefix}_Instruction_Copy`,\r\n    defaultMessage: `Скопировать`,\r\n  },\r\n  buttonDownloadingInstruction: {\r\n    id: `${langPrefix}_Instruction_Downloading`,\r\n    defaultMessage: `Загружается`,\r\n  },\r\n  buttonDownloadInstruction: {\r\n    id: `${langPrefix}_Instruction_Download`,\r\n    defaultMessage: `Скачать`,\r\n  },\r\n  buttonShare: {\r\n    id: `${langPrefix}_Share`,\r\n    defaultMessage: `Share`,\r\n  },\r\n  finishMessage: {\r\n    id: `${langPrefix}_FinishMessage`,\r\n    defaultMessage: `Your protected wallet activated`,\r\n  },\r\n  instructionMessage: {\r\n    id: `${langPrefix}_Instruction_Message`,\r\n    defaultMessage: `Информация на случай недоступности нашего сервиса`,\r\n  },\r\n  howToWithdraw: {\r\n    id: `${langPrefix}_HowToWithdraw`,\r\n    defaultMessage: `How to withdraw money manually`,\r\n  },\r\n  errorMnemonicInvalid: {\r\n    id: `${langPrefix}_ErrorMnemonicInvalid`,\r\n    defaultMessage: `Вы указали не валидную секретную фразу (12 слов)`,\r\n  },\r\n  errorMnemonicIncorrect: {\r\n    id: `${langPrefix}_ErrorMnemonicIncorrect`,\r\n    defaultMessage: `Указаная секретная фраза не подходит к этому кошельку`,\r\n  },\r\n})\r\n\r\n@injectIntl\r\n@connect(({ user: { btcData, btcMultisigPinData } }) => ({\r\n  btcData,\r\n  btcMultisigPinData,\r\n}))\r\n@cssModules({ ...styles, ...ownStyle }, { allowMultiple: true })\r\nexport default class RegisterPINProtected extends React.Component<any, any> {\r\n  props: any\r\n\r\n  static propTypes = {\r\n    name: PropTypes.string,\r\n    data: PropTypes.object,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {\r\n      data: { initStep },\r\n    } = props\r\n\r\n    const generatedKey = localStorage.getItem(constants.privateKeyNames.btcSmsMnemonicKeyGenerated)\r\n\r\n    const mnemonic = localStorage.getItem(constants.privateKeyNames.twentywords)\r\n    const mnemonicSaved = mnemonic === `-`\r\n    const useGeneratedKeyEnabled = !!generatedKey\r\n\r\n    let step = 'enterPinCode'\r\n    if (useGeneratedKeyEnabled && !mnemonicSaved) step = 'saveMnemonicWords'\r\n\r\n    let showFinalInstruction = false\r\n    if (initStep === 'export') {\r\n      showFinalInstruction = true\r\n      step = 'ready'\r\n    }\r\n\r\n    this.state = {\r\n      pinCode: '',\r\n      pinCodeConfirm: '',\r\n      step,\r\n      error: false,\r\n      isShipped: false,\r\n      showFinalInstruction,\r\n      useGeneratedKey: useGeneratedKeyEnabled,\r\n      generatedKey,\r\n      useGeneratedKeyEnabled,\r\n      mnemonicSaved,\r\n      mnemonic: ``,\r\n      mnemonicWallet: false,\r\n      isMnemonicCopied: false,\r\n      isMnemonicGenerated: false,\r\n      isMnemonicValid: true,\r\n      isWalletLockedOtherPin: false,\r\n      isInstructionCopied: false,\r\n      isInstructionDownloaded: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.generateRestoreInstruction()\r\n  }\r\n\r\n  handleRestoreWallet = async () => {\r\n    const { mnemonic } = this.state\r\n\r\n    this.setState(\r\n      {\r\n        error: false,\r\n        isShipped: true,\r\n      },\r\n      async () => {\r\n        if (!mnemonic || !actions.btc.validateMnemonicWords(mnemonic.trim())) {\r\n          this.setState({\r\n            error: <FormattedMessage {...langs.errorMnemonicInvalid} />,\r\n            isShipped: false,\r\n          })\r\n          return\r\n        }\r\n\r\n        if (!actions.btcmultisig.checkPinCanRestory(mnemonic.trim())) {\r\n          this.setState({\r\n            error: <FormattedMessage {...langs.errorMnemonicIncorrect} />,\r\n            isShipped: false,\r\n          })\r\n          return\r\n        }\r\n\r\n        await actions.btcmultisig.addPinWallet(mnemonic.trim())\r\n\r\n        this.generateRestoreInstruction()\r\n\r\n        this.setState({\r\n          isShipped: false,\r\n          step: 'ready',\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  handleCopyMnemonic = async () => {\r\n    this.setState(\r\n      {\r\n        isMnemonicCopied: true,\r\n      },\r\n      () => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isMnemonicCopied: false,\r\n          })\r\n        }, 1000)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleCopyInstruction = async () => {\r\n    this.setState(\r\n      {\r\n        isInstructionCopied: true,\r\n      },\r\n      () => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isInstructionCopied: false,\r\n          })\r\n        }, 1000)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleDownloadInstruction = async () => {\r\n    const { restoreInstruction } = this.state\r\n\r\n    this.setState(\r\n      {\r\n        isInstructionDownloaded: true,\r\n      },\r\n      () => {\r\n        const element = document.createElement('a')\r\n        const message = 'Check your browser downloads'\r\n\r\n        element.setAttribute(\r\n          'href',\r\n          `data:text/plaincharset=utf-8,${encodeURIComponent(restoreInstruction)}`\r\n        )\r\n        element.setAttribute(\r\n          'download',\r\n          `${window.location.hostname}_btc_sms_protected_keys_${moment().format('DD.MM.YYYY')}.txt`\r\n        )\r\n\r\n        element.style.display = 'none'\r\n        document.body.appendChild(element)\r\n        element.click()\r\n        document.body.removeChild(element)\r\n\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isInstructionDownloaded: false,\r\n          })\r\n        }, 1000)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleUsePin = () => {\r\n    this.setState({\r\n      pinCode: ``,\r\n      pinCodeConfirm: ``,\r\n      step: `enterPinCode`,\r\n      error: false,\r\n      pinServerOffline: false,\r\n    })\r\n  }\r\n\r\n  handleRestoreWalletStep = () => {\r\n    this.setState({\r\n      error: false,\r\n      mnemonic: ``,\r\n      pinServerOffline: false,\r\n      step: `restory`,\r\n    })\r\n  }\r\n\r\n  handleGenerateMnemonic = async () => {\r\n    this.setState(\r\n      {\r\n        isMnemonicGenerated: true,\r\n        isMnemonicValid: true,\r\n        mnemonic: actions.btc.getRandomMnemonicWords(),\r\n      },\r\n      () => {\r\n        setTimeout(() => {\r\n          this.setState({\r\n            isMnemonicGenerated: false,\r\n          })\r\n        }, 1000)\r\n      }\r\n    )\r\n  }\r\n\r\n  handleFinish = async () => {\r\n    const { name } = this.props\r\n\r\n    actions.btcmultisig.enableWalletSMS()\r\n    actions.modals.close(name)\r\n    if (this.props.data.callback) {\r\n      this.props.data.callback()\r\n    }\r\n  }\r\n\r\n  handleShareInstruction = async () => {\r\n    const { restoreInstruction } = this.state\r\n\r\n    actions.modals.open(constants.modals.Share, {\r\n      title: `BTC Sms-protected wallet restory instruction`,\r\n      link: restoreInstruction,\r\n    })\r\n  }\r\n\r\n  handleBeginSaveMnemonic = async () => {\r\n    actions.modals.open(constants.modals.SaveMnemonicModal, {\r\n      onClose: () => {\r\n        const mnemonic = localStorage.getItem(constants.privateKeyNames.twentywords)\r\n        const mnemonicSaved = mnemonic === `-`\r\n        const step = mnemonicSaved ? 'enterPhoneAndMnemonic' : 'saveMnemonicWords'\r\n\r\n        this.setState({\r\n          mnemonicSaved,\r\n          step,\r\n        })\r\n      },\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { name, data, onClose } = this.props\r\n\r\n    if (typeof onClose === 'function') {\r\n      onClose()\r\n    }\r\n\r\n    if (typeof data.onClose === 'function') {\r\n      data.onClose()\r\n    }\r\n\r\n    actions.modals.close(name)\r\n  }\r\n\r\n  generateRestoreInstruction = () => {\r\n    const { mnemonic, mnemonicWallet, useGeneratedKey, generatedKey } = this.state\r\n\r\n    const { btcData, btcMultisigPinData } = this.props\r\n\r\n    let restoreInstruction = ''\r\n\r\n    restoreInstruction = `Wallet address:\\r\\n`\r\n    restoreInstruction += `${btcMultisigPinData.address}\\r\\n`\r\n    restoreInstruction += `To withdraw funds create transaction using this code https://github.com/bitcoinjs/bitcoinjs-lib/blob/master/test/integration/transactions.spec.ts#L193\\r\\n`\r\n    restoreInstruction += `\\r\\n`\r\n    restoreInstruction += `Public keys for create Multisig (2of3) wallet:\\r\\n`\r\n    if (btcMultisigPinData.publicKeys[0])\r\n      restoreInstruction += `${btcMultisigPinData.publicKeys[0].toString('Hex')}\\r\\n`\r\n    if (btcMultisigPinData.publicKeys[1])\r\n      restoreInstruction += `${btcMultisigPinData.publicKeys[1].toString('Hex')}\\r\\n`\r\n    if (btcMultisigPinData.publicKeys[2])\r\n      restoreInstruction += `${btcMultisigPinData.publicKeys[2].toString('Hex')}\\r\\n`\r\n    restoreInstruction += `\\r\\n`\r\n    restoreInstruction += `Hot wallet private key (WIF) (first of three for sign tx):\\r\\n`\r\n    restoreInstruction += `Wallet delivery path from your secret phrase:\\r\\n`\r\n    restoreInstruction += `m/44'/0'/0'/0/0\\r\\n`\r\n    restoreInstruction += `${btcData.privateKey}\\r\\n`\r\n    restoreInstruction += `*** (this private key stored in your browser)\\r\\n`\r\n    restoreInstruction += `\\r\\n`\r\n    if (!useGeneratedKey) {\r\n      restoreInstruction += `Secret mnemonic:\\r\\n`\r\n      restoreInstruction += `${mnemonic}\\r\\n`\r\n      restoreInstruction += `Wallet delivery path for mnemonic:\\r\\n`\r\n      restoreInstruction += `m/44'/0'/0'/0/0\\r\\n`\r\n      restoreInstruction += `Private key (WIF) of wallet, generated from mnemonic:\\r\\n`\r\n      restoreInstruction += `(DELETE THIS LINE!) ${mnemonicWallet.WIF}\\r\\n`\r\n      restoreInstruction += `*** (this private key does not stored anywhere! but in case if our  2fa server does down, you can withdraw your fond using this private key)\\r\\n`\r\n    } else {\r\n      restoreInstruction += `Second of three for sign tx:\\r\\n`\r\n      restoreInstruction += `Wallet delivery path from your secret phrase:\\r\\n`\r\n      restoreInstruction += `m/44'/0'/0'/0/1\\r\\n`\r\n      restoreInstruction += `\\r\\n`\r\n    }\r\n    restoreInstruction += `If our service is unavailable, use a local copy of the wallet.\\r\\n`\r\n    restoreInstruction += `https://swaponline.github.io/2fa_wallet.zip\\r\\n`\r\n\r\n    this.setState({\r\n      restoreInstruction,\r\n    })\r\n  }\r\n\r\n  handleCheckPIN = () => {\r\n    const {\r\n      pinCode,\r\n      pinCodeConfirm,\r\n      mnemonic,\r\n      useGeneratedKey,\r\n      useGeneratedKeyEnabled,\r\n      generatedKey,\r\n    } = this.state\r\n\r\n    this.setState(\r\n      {\r\n        error: false,\r\n        isShipped: true,\r\n        pinServerOffline: false,\r\n        isWalletLockedOtherPin: false,\r\n      },\r\n      async () => {\r\n        if (!pinCode || pinCode.length < 4) {\r\n          this.setState({\r\n            error: <FormattedMessage {...langs.youNotEnterPin} />,\r\n            isShipped: false,\r\n          })\r\n          return\r\n        }\r\n        if (pinCode != pinCodeConfirm) {\r\n          this.setState({\r\n            error: <FormattedMessage {...langs.pinCodeNotEqueals} />,\r\n            isShipped: false,\r\n          })\r\n          return\r\n        }\r\n        const result = await actions.btcmultisig.register_PIN(\r\n          pinCode,\r\n          mnemonic ? mnemonic.trim() : false,\r\n          useGeneratedKey && useGeneratedKeyEnabled ? generatedKey : false\r\n        )\r\n\r\n        if (result && result.answer && result.answer == 'ok') {\r\n          this.generateRestoreInstruction()\r\n          this.setState({\r\n            isShipped: false,\r\n            step: 'ready',\r\n          })\r\n        } else {\r\n          if (result && result.error == 'Already registered') {\r\n            this.generateRestoreInstruction()\r\n            this.setState({\r\n              isShipped: false,\r\n              step: 'ready',\r\n            })\r\n          } else {\r\n            if (result && result.error == 'This wallet already locked by other pin code') {\r\n              // Кошелек зарегистрирован на другой номер телефона\r\n              // Может быть так, что человек потерял телефон или забыл его\r\n              // Даем возможность подключить кошелек, чтобы если у клиента есть\r\n              // валидный mnemonic - он мог разблокировать средства\r\n              this.setState({\r\n                isShipped: false,\r\n                isWalletLockedOtherPin: true,\r\n              })\r\n            } else {\r\n              const pinServerOffline = result === false\r\n              this.setState({\r\n                isShipped: false,\r\n                pinServerOffline,\r\n                error: result && result.error ? result.error : 'Unknown error',\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      step,\r\n      pinCode,\r\n      pinCodeConfirm,\r\n      error,\r\n      isShipped,\r\n      mnemonicSaved,\r\n      // useGeneratedKey,\r\n      useGeneratedKeyEnabled,\r\n      mnemonic,\r\n      mnemonicWallet,\r\n      isMnemonicCopied,\r\n      isMnemonicGenerated,\r\n      isMnemonicValid,\r\n      pinServerOffline,\r\n      isWalletLockedOtherPin,\r\n      isInstructionCopied,\r\n      isInstructionDownloaded,\r\n      restoreInstruction,\r\n      showFinalInstruction,\r\n    } = this.state\r\n\r\n    const { name, intl, btcData, btcMultisigPinData } = this.props\r\n\r\n    const linked = Link.all(this, 'pinCode', 'pinCodeConfirm', 'mnemonic')\r\n\r\n    return (\r\n      <Modal name={name} title={`${intl.formatMessage(langs.registerPinModal)}`}>\r\n        <div styleName=\"registerPINModalHolder\">\r\n          {step === 'saveMnemonicWords' && (\r\n            <Fragment>\r\n              <div styleName=\"content-overlay\">\r\n                <p styleName=\"centerInfoBlock\">\r\n                  <strong>\r\n                    <FormattedMessage {...langs.needSaveMnemonicToContinue} />\r\n                  </strong>\r\n                  <br />\r\n                  <FormattedMessage {...langs.pleaseSaveMnemonicToContinue} />\r\n                </p>\r\n              </div>\r\n\r\n              <div styleName=\"buttonsHolder buttonsHolder_2_buttons button-overlay\">\r\n                <Button blue onClick={this.handleBeginSaveMnemonic}>\r\n                  <FormattedMessage {...langs.buttonSaveMnemonic} />\r\n                </Button>\r\n                <Button gray onClick={this.handleClose}>\r\n                  <FormattedMessage {...langs.buttonCancel} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {step === 'restory' && (\r\n            <Fragment>\r\n              <p styleName=\"centerInfoBlock\">\r\n                <strong>\r\n                  <FormattedMessage {...langs.restoryUpMessage} />\r\n                </strong>\r\n                <br />\r\n                <FormattedMessage {...langs.restoryBottomMessage} />\r\n              </p>\r\n              <div styleName=\"highLevel\" className=\"ym-hide-content\">\r\n                <FieldLabel>\r\n                  <FormattedMessage {...langs.labelYourMnemonic} />\r\n                </FieldLabel>\r\n                <Input\r\n                  styleName=\"input inputMargin25\"\r\n                  valueLink={linked.mnemonic}\r\n                  placeholder={`${intl.formatMessage(langs.mnemonicPlaceHolder)}`}\r\n                  focusOnInit\r\n                />\r\n              </div>\r\n              {error && <div styleName=\"error rednotes\">{error}</div>}\r\n              <div styleName=\"mnemonicButtonsHolder\">\r\n                <Button blue disabled={isShipped} onClick={this.handleRestoreWallet}>\r\n                  {isShipped ? (\r\n                    <Fragment>\r\n                      <FormattedMessage {...langs.shipButton} />\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <FormattedMessage {...langs.confirmButton} />\r\n                    </Fragment>\r\n                  )}\r\n                </Button>\r\n                <Button blue disabled={isShipped} onClick={this.handleUsePin}>\r\n                  <FormattedMessage {...langs.usepinButton} />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )}\r\n          {step === 'enterPinCode' && (\r\n            <Fragment>\r\n              <p styleName=\"centerInfoBlock\">\r\n                <strong>\r\n                  <FormattedMessage {...langs.enterPinCodeUpMessage} />\r\n                </strong>\r\n                <br />\r\n                <FormattedMessage {...langs.enterPinCodeBottomMessage} />\r\n              </p>\r\n              {isWalletLockedOtherPin && (\r\n                <div styleName=\"rednotes pinInfoBlock\">\r\n                  <FormattedMessage {...langs.errorWalletLocked} />\r\n                </div>\r\n              )}\r\n              <div styleName=\"highLevel\" className=\"ym-hide-content\">\r\n                <FieldLabel>\r\n                  <FormattedMessage {...langs.labelYourPin} />\r\n                </FieldLabel>\r\n                <Input\r\n                  styleName=\"input inputMargin25\"\r\n                  valueLink={linked.pinCode}\r\n                  type=\"password\"\r\n                  placeholder={`${intl.formatMessage(langs.pinCodePlaceHolder)}`}\r\n                  focusOnInit\r\n                />\r\n              </div>\r\n              <div styleName=\"highLevel\" className=\"ym-hide-content\">\r\n                <FieldLabel>\r\n                  <FormattedMessage {...langs.labelConfirmYourPin} />\r\n                </FieldLabel>\r\n                <Input\r\n                  styleName=\"input inputMargin25\"\r\n                  valueLink={linked.pinCodeConfirm}\r\n                  type=\"password\"\r\n                  placeholder={`${intl.formatMessage(langs.pinCodeConfirmPlaceHolder)}`}\r\n                />\r\n                {!pinServerOffline && error && <div styleName=\"error rednotes\">{error}</div>}\r\n                {pinServerOffline && (\r\n                  <div styleName=\"error rednotes\">\r\n                    <FormattedMessage {...langs.pinServerOffline} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div styleName=\"buttonHolder\">\r\n                <Button blue big fullWidth disabled={isShipped} onClick={this.handleCheckPIN}>\r\n                  {isShipped ? (\r\n                    <Fragment>\r\n                      <FormattedMessage {...langs.shipButton} />\r\n                    </Fragment>\r\n                  ) : (\r\n                    <Fragment>\r\n                      <FormattedMessage {...langs.activateWallet} />\r\n                    </Fragment>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n              {pinServerOffline && (\r\n                <div styleName=\"restoryHolder\">\r\n                  <p>\r\n                    <FormattedMessage {...langs.useMnemonicNote} />\r\n                  </p>\r\n                  <Button blue fullWidth onClick={this.handleRestoreWalletStep}>\r\n                    <FormattedMessage {...langs.useMnemonicButton} />\r\n                  </Button>\r\n                </div>\r\n              )}\r\n            </Fragment>\r\n          )}\r\n          {step === 'ready' && (\r\n            <Fragment>\r\n              <div styleName=\"highLevel\">\r\n                <div>\r\n                  <img styleName=\"finishImg\" src={okSvg} alt=\"finish\" />\r\n                </div>\r\n                <span\r\n                  style={{\r\n                    fontSize: '25px',\r\n                    display: 'block',\r\n                    textAlign: 'center',\r\n                    marginBottom: '40px',\r\n                  }}\r\n                >\r\n                  <FormattedMessage {...langs.finishMessage} />\r\n                </span>\r\n              </div>\r\n              {showFinalInstruction && (\r\n                <div styleName=\"restoreInstruction\" className=\"ym-hide-content\">\r\n                  <h1>\r\n                    <FormattedMessage {...langs.instructionMessage} />\r\n                  </h1>\r\n                  <div>\r\n                    <pre>{restoreInstruction}</pre>\r\n                    <a\r\n                      styleName=\"link\"\r\n                      target=\"_blank\"\r\n                      href=\"https://github.com/bitcoinjs/bitcoinjs-lib/blob/master/test/integration/addresses.spec.ts\"\r\n                    >\r\n                      <FormattedMessage {...langs.howToWithdraw} />\r\n                    </a>\r\n                  </div>\r\n                  <div styleName=\"buttonsHolder\">\r\n                    <CopyToClipboard text={restoreInstruction} onCopy={this.handleCopyInstruction}>\r\n                      <Button\r\n                        blue\r\n                        disabled={isInstructionCopied}\r\n                        onClick={this.handleCopyInstruction}\r\n                      >\r\n                        {isInstructionCopied ? (\r\n                          <FormattedMessage {...langs.buttonCopiedInstruction} />\r\n                        ) : (\r\n                          <FormattedMessage {...langs.buttonCopyInstruction} />\r\n                        )}\r\n                      </Button>\r\n                    </CopyToClipboard>\r\n                    <Button\r\n                      blue\r\n                      disabled={isInstructionDownloaded}\r\n                      onClick={this.handleDownloadInstruction}\r\n                    >\r\n                      {isInstructionDownloaded ? (\r\n                        <FormattedMessage {...langs.buttonDownloadingInstruction} />\r\n                      ) : (\r\n                        <FormattedMessage {...langs.buttonDownloadInstruction} />\r\n                      )}\r\n                    </Button>\r\n                    <Button blue onClick={this.handleShareInstruction}>\r\n                      <FormattedMessage {...langs.buttonShare} />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <Button big blue fullWidth onClick={this.handleFinish}>\r\n                <Fragment>\r\n                  <FormattedMessage {...langs.buttonFinish} />\r\n                </Fragment>\r\n              </Button>\r\n            </Fragment>\r\n          )}\r\n        </div>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n"]}]}