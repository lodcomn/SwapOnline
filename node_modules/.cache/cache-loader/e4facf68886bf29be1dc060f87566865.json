{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Transaction\\Transaction.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Transaction\\Transaction.tsx","mtime":1614852553204},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Transaction/Transaction.tsx"],"names":["withRouter","React","Component","actions","helpers","links","getCurrencyKey","defineMessages","injectIntl","getWalletLink","TxInfo","ModalBox","cssModules","styles","lsDataCache","labels","Title","id","defaultMessage","Transaction","allowMultiple","props","currency","txId","setTimeout","transactions","fetchTxBalances","finalBalances","unmounted","setState","history","state","infoTx","walletOne","senderAddress","walletTwo","receiverAddress","ticker","wallets","Array","forEach","wallet","push","walletLink","match","params","tx","get","toLowerCase","rest","amount","oldBalance","afterBalance","confirmed","sender","toAddress","confirmations","minerFee","minerFeeCurrency","adminFee","isFetching","balance","error","currencyKey","cachedTxInfo","token","fetchTokenTxInfo","fetchTxInfo","console","key","time","data","log","notFound","fetchTxFinalBalances","document","body","classList","add","remove","intl","formatMessage","handleClose"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport { withRouter } from 'react-router-dom'\r\nimport React, { Component, Fragment } from 'react'\r\nimport actions from 'redux/actions'\r\nimport helpers, { constants, links } from 'helpers'\r\n\r\nimport getCurrencyKey from 'helpers/getCurrencyKey'\r\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl'\r\nimport getWalletLink from 'helpers/getWalletLink'\r\n\r\nimport TxInfo from './TxInfo'\r\nimport { ModalBox } from 'components/modal'\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './styles.scss'\r\nimport lsDataCache from 'helpers/lsDataCache'\r\n\r\n\r\nconst labels = defineMessages({\r\n  Title: {\r\n    id: 'InfoPay_1',\r\n    defaultMessage: 'Transaction is completed',\r\n  },\r\n})\r\n\r\n@injectIntl\r\n@cssModules({\r\n  ...styles,\r\n}, { allowMultiple: true })\r\nclass Transaction extends Component<any, any> {\r\n  unmounted = false\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const {\r\n      history,\r\n      match: {\r\n        params: {\r\n          ticker = null,\r\n          tx: txId = null,\r\n        },\r\n      } = null,\r\n    } = props\r\n\r\n    const currency = getCurrencyKey(ticker, true)\r\n    const infoTx = lsDataCache.get(`TxInfo_${currency.toLowerCase()}_${txId}`)\r\n\r\n    let rest = {}\r\n    if (infoTx) {\r\n      const {\r\n        amount,\r\n        afterBalance: oldBalance,\r\n        confirmed,\r\n        senderAddress: sender,\r\n        receiverAddress: toAddress,\r\n        confirmations,\r\n        minerFee,\r\n        minerFeeCurrency,\r\n        adminFee,\r\n      } = infoTx\r\n\r\n      rest = {\r\n        amount,\r\n        confirmed,\r\n        sender,\r\n        toAddress,\r\n        oldBalance,\r\n        confirmations,\r\n        minerFee,\r\n        minerFeeCurrency,\r\n        adminFee,\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      currency,\r\n      ticker,\r\n      txId,\r\n      isFetching: !(infoTx),\r\n      infoTx,\r\n      amount: 0,\r\n      balance: 0,\r\n      oldBalance: 0,\r\n      confirmed: false,\r\n      sender: ``,\r\n      toAddress: ``,\r\n      confirmations: 0,\r\n      minerFee: 0,\r\n      error: null,\r\n      finalBalances: false,\r\n      ...rest,\r\n    }\r\n  }\r\n\r\n  async fetchTxInfo(currencyKey, txId, ticker) {\r\n    const {\r\n      infoTx: cachedTxInfo,\r\n    } = this.state\r\n\r\n    let infoTx = null\r\n    let error = null\r\n    try {\r\n      if (currencyKey === `token`) {\r\n        infoTx = await actions.token.fetchTokenTxInfo(ticker, txId, 5 * 60 * 1000)\r\n      } else {\r\n        infoTx = await actions[currencyKey].fetchTxInfo(txId, 5 * 60 * 1000)\r\n      }\r\n    } catch (err) {\r\n      console.error(err)\r\n      error = err\r\n    }\r\n\r\n    if (!infoTx || error) {\r\n      // Fail parse\r\n      this.setState({\r\n        isFetching: false,\r\n        error: !(cachedTxInfo),\r\n      })\r\n      return\r\n    }\r\n\r\n    if (!this.unmounted) {\r\n      lsDataCache.push({\r\n        key: `TxInfo_${currencyKey.toLowerCase()}_${txId}`,\r\n        time: 3600,\r\n        data: infoTx,\r\n      })\r\n\r\n      const {\r\n        amount,\r\n        afterBalance: oldBalance,\r\n        confirmed,\r\n        senderAddress: sender,\r\n        receiverAddress: toAddress,\r\n        confirmations,\r\n        minerFee,\r\n        minerFeeCurrency,\r\n        adminFee,\r\n      } = infoTx\r\n\r\n      this.setState({\r\n        isFetching: false,\r\n        infoTx,\r\n        amount,\r\n        balance:0,\r\n        oldBalance,\r\n        confirmed,\r\n        sender,\r\n        toAddress,\r\n        confirmations,\r\n        minerFee,\r\n        minerFeeCurrency,\r\n        adminFee,\r\n      })\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Transaction mounted')\r\n    const {\r\n      ticker,\r\n      txId,\r\n    } = this.state\r\n\r\n    if (!txId) {\r\n      //@\r\n      history.push(links.notFound)\r\n      return\r\n    }\r\n\r\n    const currency = getCurrencyKey(ticker, false)\r\n    this.fetchTxInfo(currency, txId, ticker)\r\n    this.fetchTxFinalBalances(getCurrencyKey(ticker, true), txId)\r\n\r\n    if (typeof document !== 'undefined') {\r\n      document.body.classList.add('overflowY-hidden-force')\r\n    }\r\n  }\r\n\r\n  fetchTxFinalBalances = (currency, txId) => {\r\n    setTimeout(async () => {\r\n      const finalBalances = await helpers.transactions.fetchTxBalances(currency, txId)\r\n      if (finalBalances && !this.unmounted) {\r\n        this.setState({\r\n          finalBalances,\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  handleClose = () => {\r\n    const { history } = this.props\r\n\r\n    let {\r\n      infoTx: {\r\n        senderAddress: walletOne,\r\n        receiverAddress: walletTwo,\r\n      },\r\n      ticker,\r\n    } = this.state\r\n\r\n    const wallets = []\r\n    if (walletOne instanceof Array) {\r\n      walletOne.forEach((wallet) => wallets.push(wallet))\r\n    } else wallets.push(walletOne)\r\n\r\n    if (walletTwo instanceof Array) {\r\n      walletTwo.forEach((wallet) => wallets.push(wallet))\r\n    } else wallets.push(walletTwo)\r\n\r\n    const walletLink = getWalletLink(ticker, wallets)\r\n    history.push((walletLink) || '/')\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Transaction unmounted')\r\n    this.unmounted = true\r\n\r\n    if (typeof document !== 'undefined') {\r\n      document.body.classList.remove('overflowY-hidden-force')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      intl,\r\n    } = this.props\r\n\r\n    return (\r\n      <ModalBox title={intl.formatMessage(labels.Title)} onClose={this.handleClose} >\r\n        <div styleName=\"holder\">\r\n          <TxInfo {...this.state} />\r\n        </div>\r\n      </ModalBox>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Transaction)\r\n"]}]}