{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Exchange\\Orders\\Pair.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Exchange\\Orders\\Pair.ts","mtime":1614852659596},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Exchange/Orders/Pair.ts"],"names":["BigNumber","TOKEN_DECIMALS","TRADE_TICKERS","PAIR_TYPES","config","isWidgetBuild","isWidget","console","log","PAIR_BID","BID","PAIR_ASK","ASK","isAsk","type","isBid","filteredDecimals","amount","currency","decimalPlaces","toString","parseTicker","order","buy","buyCurrency","sell","sellCurrency","BS","toUpperCase","SB","includes","ticker","warn","parsePair","str","Error","tokens","split","length","reverse","join","MAIN","BASE","Pair","price","main","base","total","times","buyAmount","sellAmount","exchangeRate","dp","mainAmount","baseAmount","div","pair","fromOrder","err","order1","order2","pair1","pair2","comparedTo"],"mappings":";;;AAAA;AACA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAGA,IAAMC,aAAa,GAAGD,MAAM,IAAIA,MAAM,CAACE,QAAvC;AAEAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BP,cAA9B;AACAM,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,aAA7B;AAEA,IAAMO,QAAQ,GAAGN,UAAU,CAACO,GAA5B;AACA,IAAMC,QAAQ,GAAGR,UAAU,CAACS,GAA5B;;AAEA,IAAMC,MAAK,GAAG,SAARA,KAAQ,CAACC,IAAD;AAAA,SAAWA,IAAI,KAAKX,UAAU,CAACS,GAA/B;AAAA,CAAd;;AACA,IAAMG,MAAK,GAAG,SAARA,KAAQ,CAACD,IAAD;AAAA,SAAWA,IAAI,KAAKX,UAAU,CAACO,GAA/B;AAAA,CAAd;;AAEA,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,MAAWC,QAAX,QAAWA,QAAX;AAAA,SACvB,IAAIlB,SAAJ,CAAciB,MAAd,EAAsBE,aAAtB,CAAoClB,cAAc,CAACiB,QAAD,CAAd,IAA4B,CAAhE,EAAmEE,QAAnE,EADuB;AAAA,CAAzB;;AAGA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,MACfC,GADe,GACaD,KADb,CAC5BE,WAD4B;AAAA,MACIC,IADJ,GACaH,KADb,CACVI,YADU;AAGpC,MAAMC,EAAE,GAAG,UAAGJ,GAAH,cAAUE,IAAV,EAAiBG,WAAjB,EAAX,CAHoC,CAGM;;AAC1C,MAAMC,EAAE,GAAG,UAAGJ,IAAH,cAAWF,GAAX,EAAiBK,WAAjB,EAAX,CAJoC,CAIM;;AAE1C,MAAI1B,aAAa,CAAC4B,QAAd,CAAuBH,EAAvB,CAAJ,EAAgC;AAE9B,WAAO;AACLI,MAAAA,MAAM,EAAEJ,EADH;AAELb,MAAAA,IAAI,EAAEL;AAFD,KAAP;AAID;;AAED,MAAIP,aAAa,CAAC4B,QAAd,CAAuBD,EAAvB,CAAJ,EAAgC;AAE9B,WAAO;AACLE,MAAAA,MAAM,EAAEF,EADH;AAELf,MAAAA,IAAI,EAAEH;AAFD,KAAP;AAID;;AAED,MAAI,CAACN,aAAL,EAAoB;AAClBE,IAAAA,OAAO,CAACyB,IAAR,8CAAmDL,EAAnD,cAAyDE,EAAzD;AACD;;AAED,SAAO;AAAEE,IAAAA,MAAM,EAAE,MAAV;AAAkBjB,IAAAA,IAAI,EAAEL;AAAxB,GAAP;AACD,CA3BM;AA6BP,OAAO,IAAMwB,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AAEhC,MAAI,CAACA,GAAL,EAAU;AACR,UAAM,IAAIC,KAAJ,yBAA2BD,GAA3B,EAAN;AACD;;AAED,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,UAAM,IAAIC,KAAJ,2CAA6CD,GAA7C,EAAN;AACD;;AAED,MAAME,MAAM,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAf;;AAEA,MAAID,MAAM,CAACE,MAAP,KAAkB,CAAtB,EAAyB;AACvB,UAAM,IAAIH,KAAJ,2CAA6CD,GAA7C,EAAN;AACD;;AAED,MAAI,CAAChC,aAAa,CAAC4B,QAAd,CAAuBI,GAAvB,CAAL,EAAkC;AAChCA,IAAAA,GAAG,GAAGE,MAAM,CAACG,OAAP,GAAiBC,IAAjB,CAAsB,GAAtB,CAAN;AACD;;AAED,MAAI,CAACtC,aAAa,CAAC4B,QAAd,CAAuBI,GAAvB,CAAL,EAAkC;AAChC,UAAM,IAAIC,KAAJ,+CAAiDD,GAAjD,EAAN;AACD;;AAED,MAAMO,IAAI,GAAGL,MAAM,CAAC,CAAD,CAAN,CAAUR,WAAV,EAAb;AACA,MAAMc,IAAI,GAAGN,MAAM,CAAC,CAAD,CAAN,CAAUR,WAAV,EAAb;AAEA,SAAO;AACLa,IAAAA,IAAI,EAAJA,IADK;AAELC,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CA/BM;;IAiCcC,I;AASnB,uBAA6C;AAAA,QAA/BC,KAA+B,SAA/BA,KAA+B;AAAA,QAAxB3B,MAAwB,SAAxBA,MAAwB;AAAA,QAAhBc,MAAgB,SAAhBA,MAAgB;AAAA,QAARjB,IAAQ,SAARA,IAAQ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAC3C,SAAK8B,KAAL,GAAa,IAAI5C,SAAJ,CAAc4C,KAAd,CAAb;AACA,SAAK3B,MAAL,GAAc,IAAIjB,SAAJ,CAAciB,MAAd,CAAd;;AAF2C,qBAIpBgB,SAAS,CAACF,MAAD,CAJW;AAAA,QAInCU,IAJmC,cAInCA,IAJmC;AAAA,QAI7BC,IAJ6B,cAI7BA,IAJ6B;;AAK3C,QAAI,CAACD,IAAD,IAAS,CAACC,IAAd,EAAoB,MAAM,IAAIP,KAAJ,0CAA4CM,IAA5C,cAAoDC,IAApD,EAAN;AAEpB,SAAKX,MAAL,GAAcA,MAAd;AACA,SAAKc,IAAL,GAAYJ,IAAZ;AACA,SAAKK,IAAL,GAAYJ,IAAZ;AACA,SAAK5B,IAAL,GAAYA,IAAI,KAAKX,UAAU,CAACO,GAApB,GAA0BP,UAAU,CAACO,GAArC,GAA2CP,UAAU,CAACS,GAAlE;AACA,SAAKmC,KAAL,GAAa,KAAKH,KAAL,CAAWI,KAAX,CAAiB,KAAK/B,MAAtB,CAAb;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACE,mBAAU;AAAA,UACAc,MADA,GACgC,IADhC,CACAA,MADA;AAAA,UACQjB,IADR,GACgC,IADhC,CACQA,IADR;AAAA,UACc8B,KADd,GACgC,IADhC,CACcA,KADd;AAAA,UACqB3B,MADrB,GACgC,IADhC,CACqBA,MADrB;AAGRV,MAAAA,OAAO,CAACC,GAAR,wBAA4B,IAA5B;;AAHQ,wBAIeyB,SAAS,CAACF,MAAD,CAJxB;AAAA,UAIAU,IAJA,eAIAA,IAJA;AAAA,UAIMC,IAJN,eAIMA,IAJN,EAKR;;;AACA,UAAI,CAACD,IAAD,IAAS,CAACC,IAAd,EAAoB,MAAM,IAAIP,KAAJ,0CAA4CU,IAA5C,cAAoDC,IAApD,EAAN;AAEpB,UAAI,CAAC,CAACnC,QAAD,EAAWF,QAAX,EAAqBqB,QAArB,CAA8BhB,IAA9B,CAAL,EAA0C,MAAM,IAAIqB,KAAJ,+CAAiDrB,IAAjD,EAAN;AAE1C,UAAMgC,IAAI,GAAG;AAAE5B,QAAAA,QAAQ,EAAEwB,IAAZ;AAAkBzB,QAAAA,MAAM,EAAEA,MAAM,CAAC+B,KAAP,CAAaJ,KAAb;AAA1B,OAAb;AACA,UAAMC,IAAI,GAAG;AAAE3B,QAAAA,QAAQ,EAAEuB,IAAZ;AAAkBxB,QAAAA,MAAM,EAANA;AAAlB,OAAb;AAEA,UAAMM,GAAG,GAAIT,IAAI,KAAKH,QAAV,GAAsBmC,IAAtB,GAA6BD,IAAzC;AACA,UAAMpB,IAAI,GAAIX,IAAI,KAAKH,QAAV,GAAsBkC,IAAtB,GAA6BC,IAA1C;AAEA,aAAO;AACLtB,QAAAA,WAAW,EAAED,GAAG,CAACL,QADZ;AAELQ,QAAAA,YAAY,EAAED,IAAI,CAACP,QAFd;AAGL+B,QAAAA,SAAS,EAAEjC,gBAAgB,CAACO,GAAD,CAHtB;AAIL2B,QAAAA,UAAU,EAAElC,gBAAgB,CAACS,IAAD,CAJvB;AAKL0B,QAAAA,YAAY,EAAEP,KALT,CAKgB;;AALhB,OAAP;AAOD;;;WAsBD,oBAAW;AACT,UAAM9B,IAAI,GAAG,KAAKA,IAAL,KAAcX,UAAU,CAACO,GAAzB,GAA+B,KAA/B,GAAuC,KAApD;AACA,uBAAUI,IAAV,gBAAoB,KAAKiB,MAAzB,gBAAqC,KAAKa,KAAL,CAAWQ,EAAX,CAAc,CAAd,CAArC,gBAA2D,KAAKnC,MAAhE;AACD;;;WAoBD,iBAAQ;AACN,aAAOF,MAAK,CAAC,KAAKD,IAAN,CAAZ;AACD;;;WAED,iBAAQ;AACN,aAAOD,MAAK,CAAC,KAAKC,IAAN,CAAZ;AACD;;;WAjDD,mBAAiBQ,KAAjB,EAAwB;AAAA,UACdE,WADc,GACuCF,KADvC,CACdE,WADc;AAAA,UACDE,YADC,GACuCJ,KADvC,CACDI,YADC;AAAA,UACauB,SADb,GACuC3B,KADvC,CACa2B,SADb;AAAA,UACwBC,UADxB,GACuC5B,KADvC,CACwB4B,UADxB;;AAAA,yBAEG7B,WAAW,CAACC,KAAD,CAFd;AAAA,UAEdS,MAFc,gBAEdA,MAFc;AAAA,UAENjB,IAFM,gBAENA,IAFM;;AAItB,UAAIiB,MAAM,KAAK,MAAf,EAAuB;AACrB;AACD,OANqB,CAQtB;;;AACA,UAAMsB,UAAU,GAAG,IAAIrD,SAAJ,CAAcc,IAAI,KAAKH,QAAT,GAAoBuC,UAApB,GAAiCD,SAA/C,CAAnB;AACA,UAAMK,UAAU,GAAG,IAAItD,SAAJ,CAAcc,IAAI,KAAKH,QAAT,GAAoBsC,SAApB,GAAgCC,UAA9C,CAAnB;AAEA,aAAO,IAAIP,IAAJ,CAAS;AACdZ,QAAAA,MAAM,EAANA,MADc;AAEdjB,QAAAA,IAAI,EAAJA,IAFc;AAGd8B,QAAAA,KAAK,EAAEU,UAAU,CAACC,GAAX,CAAeF,UAAf,CAHO;AAIdpC,QAAAA,MAAM,EAAEoC;AAJM,OAAT,CAAP;AAMD;;;WAOD,eAAa/B,KAAb,EAAoBS,MAApB,EAA4B;AAC1B,UAAI;AACF,YAAMyB,IAAI,GAAGb,IAAI,CAACc,SAAL,CAAenC,KAAf,CAAb;;AADE,0BAEqBW,SAAS,CAACF,MAAM,CAACH,WAAP,EAAD,CAF9B;AAAA,YAEMa,IAFN,eAEMA,IAFN;AAAA,YAEYC,IAFZ,eAEYA,IAFZ;;AAIF,eAAOc,IAAI,CAACzB,MAAL,eAAmBU,IAAnB,cAA2BC,IAA3B,CAAP;AACD,OALD,CAKE,OAAOgB,GAAP,EAAY;AACZ,eAAO,KAAP;AACD;AACF;;;WAED,uBAAqBC,MAArB,EAA6BC,MAA7B,EAAqC;AACnC,UAAMC,KAAK,GAAGlB,IAAI,CAACc,SAAL,CAAeE,MAAf,CAAd;AACA,UAAMG,KAAK,GAAGnB,IAAI,CAACc,SAAL,CAAeG,MAAf,CAAd;AAEA,aAAOC,KAAK,CAACjB,KAAN,CAAYmB,UAAZ,CAAuBD,KAAK,CAAClB,KAA7B,CAAP;AACD;;;;;;SAlHkBD,I","sourcesContent":["// @ts-nocheck\r\nimport BigNumber from 'bignumber.js'\r\n\r\nimport TOKEN_DECIMALS from 'helpers/constants/TOKEN_DECIMALS'\r\nimport TRADE_TICKERS from 'helpers/constants/TRADE_TICKERS'\r\nimport PAIR_TYPES from 'helpers/constants/PAIR_TYPES'\r\nimport config from 'app-config'\r\n\r\n\r\nconst isWidgetBuild = config && config.isWidget\r\n\r\nconsole.log('TOKEN_DECIMALS', TOKEN_DECIMALS)\r\nconsole.log('TRADE_TICKERS', TRADE_TICKERS)\r\n\r\nconst PAIR_BID = PAIR_TYPES.BID\r\nconst PAIR_ASK = PAIR_TYPES.ASK\r\n\r\nconst isAsk = (type) => (type === PAIR_TYPES.ASK)\r\nconst isBid = (type) => (type === PAIR_TYPES.BID)\r\n\r\nconst filteredDecimals = ({ amount, currency }) =>\r\n  new BigNumber(amount).decimalPlaces(TOKEN_DECIMALS[currency] || 0).toString()\r\n\r\nexport const parseTicker = (order) => {\r\n  const { buyCurrency: buy, sellCurrency: sell } = order\r\n\r\n  const BS = `${buy}-${sell}`.toUpperCase() // buys ETH, sells BTC, BID\r\n  const SB = `${sell}-${buy}`.toUpperCase() // sells ETH = ASK\r\n\r\n  if (TRADE_TICKERS.includes(BS)) {\r\n\r\n    return {\r\n      ticker: BS,\r\n      type: PAIR_BID,\r\n    }\r\n  }\r\n\r\n  if (TRADE_TICKERS.includes(SB)) {\r\n\r\n    return {\r\n      ticker: SB,\r\n      type: PAIR_ASK,\r\n    }\r\n  }\r\n\r\n  if (!isWidgetBuild) {\r\n    console.warn(`ParseTickerError: No such tickers: ${BS},${SB}`)\r\n  }\r\n\r\n  return { ticker: 'none', type: PAIR_BID }\r\n}\r\n\r\nexport const parsePair = (str) => {\r\n\r\n  if (!str) {\r\n    throw new Error(`Empty string: ${str}`)\r\n  }\r\n\r\n  if (typeof str !== 'string') {\r\n    throw new Error(`ParseTickerError: Not a string: ${str}`)\r\n  }\r\n\r\n  const tokens = str.split('-')\r\n\r\n  if (tokens.length !== 2) {\r\n    throw new Error(`ParseTickerError: Wrong tokens: ${str}`)\r\n  }\r\n\r\n  if (!TRADE_TICKERS.includes(str)) {\r\n    str = tokens.reverse().join('-')\r\n  }\r\n\r\n  if (!TRADE_TICKERS.includes(str)) {\r\n    throw new Error(`ParseTickerError: Ticker not found: ${str}`)\r\n  }\r\n\r\n  const MAIN = tokens[0].toUpperCase()\r\n  const BASE = tokens[1].toUpperCase()\r\n\r\n  return {\r\n    MAIN,\r\n    BASE,\r\n  }\r\n}\r\n\r\nexport default class Pair {\r\n  price: any\r\n  amount: any\r\n  ticker: any\r\n  main: any\r\n  base: any\r\n  type: any\r\n  total: any\r\n\r\n  constructor({ price, amount, ticker, type }) {\r\n    this.price = new BigNumber(price)\r\n    this.amount = new BigNumber(amount)\r\n\r\n    const { MAIN, BASE } = parsePair(ticker)\r\n    if (!MAIN || !BASE) throw new Error(`CreateOrderError: No currency: ${MAIN}-${BASE}`)\r\n\r\n    this.ticker = ticker\r\n    this.main = MAIN\r\n    this.base = BASE\r\n    this.type = type === PAIR_TYPES.BID ? PAIR_TYPES.BID : PAIR_TYPES.ASK\r\n    this.total = this.price.times(this.amount)\r\n  }\r\n\r\n  /*\r\n  * 10 ETH -> 1 BTC\r\n  *\r\n  * ticker: ETH-BTC\r\n  *\r\n  * So we are on ETH market, thus:\r\n  *   - ASK orders are SELL ETH (for BTC),\r\n  *   - BID orders are BUY ETH (for BTC)\r\n  *\r\n  * This order is SELLING ETH, to it's ASK\r\n  * type: BID = true, ASK = false\r\n  *\r\n  * Price is also calculated in BTC, while amount in ETH\r\n  * price: 0.1\r\n  * amount: 10\r\n  *\r\n  *\r\n  * So, for type = ASK\r\n  *\r\n  * buyCurrency: BTC = base\r\n  * sellCurrency: ETH = main\r\n  * buyAmount: 1 BTC = (0.1 BTC/ETH) * 10 ETH = price * amount\r\n  * sellAmount: 10 ETH = 10 ETH = amount\r\n  *\r\n  */\r\n  toOrder() {\r\n    const { ticker, type, price, amount } = this\r\n\r\n    console.log(`create order ${this}`)\r\n    const { MAIN, BASE } = parsePair(ticker)\r\n    //@\r\n    if (!MAIN || !BASE) throw new Error(`CreateOrderError: No currency: ${main}-${base}`)\r\n\r\n    if (![PAIR_ASK, PAIR_BID].includes(type)) throw new Error(`CreateOrderError: Wrong order type: ${type}`)\r\n\r\n    const base = { currency: BASE, amount: amount.times(price) }\r\n    const main = { currency: MAIN, amount }\r\n\r\n    const buy = (type === PAIR_ASK) ? base : main\r\n    const sell = (type === PAIR_ASK) ? main : base\r\n\r\n    return {\r\n      buyCurrency: buy.currency,\r\n      sellCurrency: sell.currency,\r\n      buyAmount: filteredDecimals(buy),\r\n      sellAmount: filteredDecimals(sell),\r\n      exchangeRate: price, // isAsk(type) ? price : 1/price\r\n    }\r\n  }\r\n\r\n  static fromOrder(order) {\r\n    const { buyCurrency, sellCurrency, buyAmount, sellAmount } = order\r\n    const { ticker, type } = parseTicker(order)\r\n\r\n    if (ticker === 'none') {\r\n      return\r\n    }\r\n\r\n    // ASK means sellCurrency is ETH, then sell is main\r\n    const mainAmount = new BigNumber(type === PAIR_ASK ? sellAmount : buyAmount)\r\n    const baseAmount = new BigNumber(type === PAIR_ASK ? buyAmount : sellAmount)\r\n\r\n    return new Pair({\r\n      ticker,\r\n      type,\r\n      price: baseAmount.div(mainAmount),\r\n      amount: mainAmount,\r\n    })\r\n  }\r\n\r\n  toString() {\r\n    const type = this.type === PAIR_TYPES.BID ? 'bid' : 'ask'\r\n    return `${type} \\t${this.ticker} \\t${this.price.dp(8)} \\t${this.amount}`\r\n  }\r\n\r\n  static check(order, ticker) {\r\n    try {\r\n      const pair = Pair.fromOrder(order)\r\n      const { MAIN, BASE } = parsePair(ticker.toUpperCase())\r\n\r\n      return pair.ticker === `${MAIN}-${BASE}`\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  static compareOrders(order1, order2) {\r\n    const pair1 = Pair.fromOrder(order1)\r\n    const pair2 = Pair.fromOrder(order2)\r\n\r\n    return pair1.price.comparedTo(pair2.price)\r\n  }\r\n\r\n  isBid() {\r\n    return isBid(this.type)\r\n  }\r\n\r\n  isAsk() {\r\n    return isAsk(this.type)\r\n  }\r\n}\r\n"]}]}