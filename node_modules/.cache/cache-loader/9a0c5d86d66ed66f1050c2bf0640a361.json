{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Exchange\\Orders\\OrderBook\\Row\\Row.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Exchange\\Orders\\OrderBook\\Row\\Row.tsx","mtime":1614852616852},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Exchange/Orders/OrderBook/Row/Row.tsx"],"names":["React","Component","Fragment","connect","actions","cssModules","styles","helpers","links","constants","Link","SwapApp","Avatar","InlineLoader","RemoveButton","Pair","PAIR_TYPES","RequestButton","FormattedMessage","injectIntl","defineMessages","localisedUrl","BigNumber","feedback","TurboIcon","isDark","localStorage","getItem","Row","peer","pubsubRoom","user","currenciesData","allowMultiple","props","orderId","currency","decline","length","sendSwapRequest","getDeclinedExistedSwapIndex","handleGoTrade","handleDeclineOrdersModalOpen","amount","decimalPlaces","tokenDecimals","toLowerCase","String","dp","ROUND_CEIL","indexOfDecline","orders","shared","services","items","declineSwap","core","getSwapById","undefined","modals","open","DeclineOrdersModal","row","id","sellAmount","buyAmount","sellCurrency","buyCurrency","intl","history","pairFees","balances","checkSwapAllow","balance","getBalance","offers","buyPressed","pair","fromOrder","price","total","main","base","type","exchangeRates","messages","sell","defaultMessage","buy","ConfirmBeginSwap","order","onAccept","customWallet","swapRequested","setState","isFetching","setTimeout","destination","address","sendRequest","isAccepted","console","log","swapUri","isTurbo","turboSwap","atomicSwap","push","locale","updateCore","message","action","BID","formatMessage","getDecimals","windowWidthIn","window","innerWidth","windowWidth","state","enterButton","isMy","balanceCheckCur","_mounted","addEventListener","renderContent","removeEventListener","close","Confirm","isRequested","isProcessing","ownerPeer","owner","removeOrder","linkedOrderId","buyCurrencyFee","byCoins","toUpperCase","fee","costs","plus","isSwapButtonEnabled","isGreaterThanOrEqualTo","sellCurrencyOut","sellAmountOut","getCurrencyOut","getAmountOut","priceOut","div","ASK","mobileFormatCrypto","value","toFixed","Number","showDesktopContent","background","color","checkDeclineOrders","margin"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,OAAOC,OAAP,IAAkBC,KAAlB,EAAyBC,SAAzB,QAA0C,SAA1C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,8CAAzB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,cAAvC,QAA6D,YAA7D;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0CAAtB;AAGA,IAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqBlB,SAAS,CAACiB,YAAV,CAAuBD,MAA5C,CAAf;IA8CqBG,G,WATpBzB,OAAO,CAAC;AAAA,MACO0B,IADP,QACPC,UADO,CACOD,IADP;AAAA,MAEPE,IAFO,QAEPA,IAFO;AAAA,SAGF;AACLC,IAAAA,cAAc,EAAED,IADX;AAELF,IAAAA,IAAI,EAAJA;AAFK,GAHE;AAAA,CAAD,C,UAQPxB,UAAU,CAACC,MAAD,EAAS;AAAE2B,EAAAA,aAAa,EAAE;AAAjB,CAAT,C,EATVd,U;;;;;AAgBC,eAAYe,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,+DALR,KAKQ;;AAAA;;AAAA;;AAAA,yEAqCE,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAAA,UAClCC,OADkC,GACtB,MAAKH,KADiB,CAClCG,OADkC;;AAG1C,UAAIA,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,cAAKC,eAAL,CAAqBJ,OAArB,EAA8BC,QAA9B;AACD,OAFD,MAEO;AACL,YAAMI,2BAA2B,GAAGjC,OAAO,CAACkC,aAAR,CAAsBD,2BAAtB,CAAkD;AAAEJ,UAAAA,QAAQ,EAARA,QAAF;AAAYC,UAAAA,OAAO,EAAPA;AAAZ,SAAlD,CAApC;;AACA,YAAIG,2BAA2B,KAAK,KAApC,EAA2C;AACzC,gBAAKE,4BAAL,CAAkCF,2BAAlC;AACD,SAFD,MAEO;AACL,gBAAKD,eAAL,CAAqBJ,OAArB,EAA8BC,QAA9B;AACD;AACF;AACF,KAlDkB;;AAAA,kEAoDL,UAACO,MAAD,EAASP,QAAT,EAAsB;AAClC,UAAMQ,aAAa,GAAGnC,SAAS,CAACoC,aAAV,CAAwBT,QAAQ,CAACU,WAAT,EAAxB,KAAmD,CAAzE;AAEA,aAAOF,aAAa,GAAG,CAAhB,GACHG,MAAM,CAAC,IAAIzB,SAAJ,CAAcqB,MAAd,EAAsBK,EAAtB,CAAyB,CAAzB,EAA4B1B,SAAS,CAAC2B,UAAtC,CAAD,CADH,GAEHF,MAAM,CAAC,IAAIzB,SAAJ,CAAcqB,MAAd,EAAsBK,EAAtB,CAAyBJ,aAAzB,EAAwCtB,SAAS,CAAC2B,UAAlD,CAAD,CAFV;AAGD,KA1DkB;;AAAA,mFA4DY,UAACC,cAAD,EAAoB;AACjD,UAAMC,MAAM,GAAGxC,OAAO,CAACyC,MAAR,GAAiBC,QAAjB,CAA0BF,MAA1B,CAAiCG,KAAhD;AACA,UAAMC,WAAW,GAAGnD,OAAO,CAACoD,IAAR,CAAaC,WAAb,CAAyB,MAAKvB,KAAL,CAAWG,OAAX,CAAmBa,cAAnB,CAAzB,CAApB;;AAEA,UAAIK,WAAW,KAAKG,SAApB,EAA+B;AAC7BtD,QAAAA,OAAO,CAACuD,MAAR,CAAeC,IAAf,CAAoBnD,SAAS,CAACkD,MAAV,CAAiBE,kBAArC,EAAyD;AACvDN,UAAAA,WAAW,EAAXA;AADuD,SAAzD;AAGD;AACF,KArEkB;;AAAA;AAAA,2EAuED,kBAAOpB,OAAP,EAAgBC,QAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAcZ,MAAKF,KAdO,gCAEd4B,GAFc,EAGZC,EAHY,mBAGZA,EAHY,EAIDC,UAJC,mBAIZC,SAJY,EAKCC,YALD,mBAKZC,WALY,EAMEA,WANF,mBAMZD,YANY,EAQdJ,GARc,eAQdA,GARc,EASdM,IATc,eASdA,IATc,EAUdC,OAVc,eAUdA,OAVc,EAWdC,QAXc,eAWdA,QAXc,EAYdC,QAZc,eAYdA,QAZc,EAadC,cAbc,eAadA,cAbc;AAgBVC,gBAAAA,OAhBU,GAgBA,MAAKC,UAAL,EAhBA;AAkBhBnD,gBAAAA,QAAQ,CAACoD,MAAT,CAAgBC,UAAhB,WAA8BV,YAA9B,eAA+CC,WAA/C;AAEMU,gBAAAA,IApBU,GAoBH9D,IAAI,CAAC+D,SAAL,CAAehB,GAAf,CApBG;AAqBRiB,gBAAAA,KArBQ,GAqBmCF,IArBnC,CAqBRE,KArBQ,EAqBDpC,MArBC,GAqBmCkC,IArBnC,CAqBDlC,MArBC,EAqBOqC,KArBP,GAqBmCH,IArBnC,CAqBOG,KArBP,EAqBcC,IArBd,GAqBmCJ,IArBnC,CAqBcI,IArBd,EAqBoBC,IArBpB,GAqBmCL,IArBnC,CAqBoBK,IArBpB,EAqB0BC,IArB1B,GAqBmCN,IArBnC,CAqB0BM,IArB1B;;AAAA,oBAuBXX,cAAc,CAAC;AAClBN,kBAAAA,YAAY,EAAZA,YADkB;AAElBC,kBAAAA,WAAW,EAAXA,WAFkB;AAGlBxB,kBAAAA,MAAM,EAAEqB,UAHU;AAIlBS,kBAAAA,OAAO,EAAPA;AAJkB,iBAAD,CAvBH;AAAA;AAAA;AAAA;;AAAA,kDA4BL,KA5BK;;AAAA;AA8BVW,gBAAAA,aA9BU,GA8BM,IAAI9D,SAAJ,CAAcyD,KAAd,EAAqB/B,EAArB,CAAwB,CAAxB,EAA2B1B,SAAS,CAAC2B,UAArC,CA9BN;AAgCVoC,gBAAAA,QAhCU,GAgCCjE,cAAc,CAAC;AAC9BkE,kBAAAA,IAAI,EAAE;AACJvB,oBAAAA,EAAE,EAAE,aADA;AAEJwB,oBAAAA,cAAc,EAAE;AAFZ,mBADwB;AAK9BC,kBAAAA,GAAG,EAAE;AACHzB,oBAAAA,EAAE,EAAE,cADD;AAEHwB,oBAAAA,cAAc,EAAE;AAFb;AALyB,iBAAD,CAhCf;AA2ChBnF,gBAAAA,OAAO,CAACuD,MAAR,CAAeC,IAAf,CAAoBnD,SAAS,CAACkD,MAAV,CAAiB8B,gBAArC,EAAuD;AACrDC,kBAAAA,KAAK,EAAE5B,GAD8C;AAErD6B,kBAAAA,QAAQ;AAAA,6FAAE,iBAAOC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACRrE,8BAAAA,QAAQ,CAACoD,MAAT,CAAgBkB,aAAhB,WAAiC3B,YAAjC,eAAkDC,WAAlD;;AAEA,oCAAK2B,QAAL,CAAc;AAAEC,gCAAAA,UAAU,EAAE;AAAd,+BAAd;;AAEAC,8BAAAA,UAAU,CAAC,YAAM;AACf,sCAAKF,QAAL,CAAc;AAAA,yCAAO;AAAEC,oCAAAA,UAAU,EAAE;AAAd,mCAAP;AAAA,iCAAd;AACD,+BAFS,EAEP,KAAK,IAFE,CAAV;AAIME,8BAAAA,WATE,GASY;AAClBC,gCAAAA,OAAO,EAAE;AADS,+BATZ;;AAYR,kCAAIN,YAAY,KAAK,IAArB,EAA2B;AACzBK,gCAAAA,WAAW,CAACC,OAAZ,GAAsBN,YAAtB;AACD;;AAEDxF,8BAAAA,OAAO,CAACoD,IAAR,CAAa2C,WAAb,CAAyBhE,OAAzB,EAAkC8D,WAAlC,EAA+C,UAACG,UAAD,EAAgB;AAC7DC,gCAAAA,OAAO,CAACC,GAAR,2BAA+BF,UAAU,GAAG,UAAH,GAAgB,UAAzD;;AAEA,oCAAIA,UAAJ,EAAgB;AACd,wCAAKN,QAAL,CAAc;AAAEC,oCAAAA,UAAU,EAAE;AAAd,mCAAd,EAAqC,YAAM;AACzC,wCAAMQ,OAAO,GAAGzC,GAAG,CAAC0C,OAAJ,aACXhG,KAAK,CAACiG,SADK,cACQ1C,EADR,cAGXvD,KAAK,CAACkG,UAHK,cAGS3C,EAHT,CAAhB;AAKAsC,oCAAAA,OAAO,CAACC,GAAR,6BAAiCC,OAAjC;AACAlC,oCAAAA,OAAO,CAACsC,IAAR,CAAatF,YAAY,CAAC+C,IAAI,CAACwC,MAAN,EAAcL,OAAd,CAAzB;AACD,mCARD;AASD,iCAVD,MAUO;AACL,wCAAKT,QAAL,CAAc;AAAEC,oCAAAA,UAAU,EAAE;AAAd,mCAAd;AACD;AACF,+BAhBD;AAiBA3F,8BAAAA,OAAO,CAACoD,IAAR,CAAaqD,UAAb;;AAjCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAF6C;AAqCrDC,kBAAAA,OAAO,eACL,oBAAC,gBAAD;AACE,oBAAA,EAAE,EAAC,cADL;AAEE,oBAAA,cAAc,EAAC,4FAFjB;AAGE,oBAAA,MAAM,EAAE;AACNC,sBAAAA,MAAM,YAAK5B,IAAI,KAAKnE,UAAU,CAACgG,GAApB,GACP5C,IAAI,CAAC6C,aAAL,CAAmB5B,QAAQ,CAACC,IAA5B,CADO,GAEPlB,IAAI,CAAC6C,aAAL,CAAmB5B,QAAQ,CAACG,GAA5B,CAFE,CADA;AAKN7C,sBAAAA,MAAM,YAAK,MAAKuE,WAAL,CAAiBvE,MAAjB,EAAyBsC,IAAzB,CAAL,CALA;AAMNA,sBAAAA,IAAI,YAAKA,IAAL,CANE;AAOND,sBAAAA,KAAK,YAAK,MAAKkC,WAAL,CAAiBlC,KAAjB,EAAwBE,IAAxB,CAAL,CAPC;AAQNA,sBAAAA,IAAI,YAAKA,IAAL,CARE;AASNH,sBAAAA,KAAK,YAAKK,aAAL;AATC;AAHV;AAtCmD,iBAAvD;;AA3CgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAvEC;;AAAA;AAAA;AAAA;AAAA;;AAAA,oEA2KH,YAAM;AACpB,UAAI+B,aAAa,GAAGC,MAAM,CAACC,UAA3B;;AACA,YAAKvB,QAAL,CAAc;AAAEwB,QAAAA,WAAW,EAAEH;AAAf,OAAd;AACD,KA9KkB;;AAGjB,UAAKI,KAAL,GAAa;AACXD,MAAAA,WAAW,EAAE,CADF;AAEXvB,MAAAA,UAAU,EAAE,KAFD;AAGXyB,MAAAA,WAAW,EAAE;AAHF,KAAb;AAHiB;AAQlB;;;;WAED,sBAAa;AAAA,yBAQP,KAAKtF,KARE;AAAA,0CAET4B,GAFS;AAAA,UAGP2D,IAHO,oBAGPA,IAHO;AAAA,UAIPtD,WAJO,oBAIPA,WAJO;AAAA,UAKPD,YALO,oBAKPA,YALO;AAAA,UAOTK,QAPS,gBAOTA,QAPS;AAUX,UAAMmD,eAAe,GAAID,IAAD,GAASvD,YAAT,GAAwBC,WAAhD;AAEA,aAAQI,QAAQ,IAAIA,QAAQ,CAACmD,eAAD,CAArB,GAA0CnD,QAAQ,CAACmD,eAAD,CAAlD,GAAsE,CAA7E;AACD;;;WAED,6BAAoB;AAClB,WAAKC,QAAL,GAAgB,IAAhB;AACAP,MAAAA,MAAM,CAACQ,gBAAP,CAAwB,QAAxB,EAAkC,KAAKC,aAAvC;AACA,WAAKA,aAAL;AACD;;;WAED,gCAAuB;AACrB,WAAKF,QAAL,GAAgB,KAAhB;AACAP,MAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqC,KAAKD,aAA1C;AACAzH,MAAAA,OAAO,CAACuD,MAAR,CAAeoE,KAAf,CAAqBtH,SAAS,CAACkD,MAAV,CAAiBqE,OAAtC;AACD;;;WA6ID,kBAAS;AAAA;;AAAA,wBAIH,KAAKT,KAJF;AAAA,UAELxB,UAFK,eAELA,UAFK;AAAA,UAGLuB,WAHK,eAGLA,WAHK;AAMP,UAAM7C,OAAO,GAAG,KAAKC,UAAL,EAAhB;AANO,yBA2BH,KAAKxC,KA3BF;AAAA,0CASL4B,GATK;AAAA,UAUHC,EAVG,oBAUHA,EAVG;AAAA,UAWH0D,IAXG,oBAWHA,IAXG;AAAA,UAYHjB,OAZG,oBAYHA,OAZG;AAAA,UAaHrC,WAbG,oBAaHA,WAbG;AAAA,UAcHF,SAdG,oBAcHA,SAdG;AAAA,UAeHC,YAfG,oBAeHA,YAfG;AAAA,UAgBHF,UAhBG,oBAgBHA,UAhBG;AAAA,UAiBHiE,WAjBG,oBAiBHA,WAjBG;AAAA,UAkBHC,YAlBG,oBAkBHA,YAlBG;AAAA,UAmBYC,SAnBZ,oBAmBHC,KAnBG,CAmBMvG,IAnBN;AAAA,UAqBLA,IArBK,gBAqBLA,IArBK;AAAA,UAsBLM,OAtBK,gBAsBLA,OAtBK;AAAA,UAuBLkG,WAvBK,gBAuBLA,WAvBK;AAAA,UAwBLC,aAxBK,gBAwBLA,aAxBK;AAAA,UAyBG1B,MAzBH,gBAyBLxC,IAzBK,CAyBGwC,MAzBH;AAAA,UA0BLtC,QA1BK,gBA0BLA,QA1BK;AA6BP,UAAMO,IAAI,GAAG9D,IAAI,CAAC+D,SAAL,CAAe,KAAK5C,KAAL,CAAW4B,GAA1B,CAAb;AA7BO,UA8BCiB,KA9BD,GA8B4CF,IA9B5C,CA8BCE,KA9BD;AAAA,UA8BQpC,MA9BR,GA8B4CkC,IA9B5C,CA8BQlC,MA9BR;AAAA,UA8BgBqC,KA9BhB,GA8B4CH,IA9B5C,CA8BgBG,KA9BhB;AAAA,UA8BuBC,IA9BvB,GA8B4CJ,IA9B5C,CA8BuBI,IA9BvB;AAAA,UA8B6BC,IA9B7B,GA8B4CL,IA9B5C,CA8B6BK,IA9B7B;AAAA,UA8BmCC,IA9BnC,GA8B4CN,IA9B5C,CA8BmCM,IA9BnC,EAgCP;;AACA,UAAMoD,cAAc,GAClBjE,QAAQ,IACLA,QAAQ,CAACkE,OADZ,IAEGlE,QAAQ,CAACkE,OAAT,CAAiBrE,WAAW,CAACsE,WAAZ,EAAjB,CAHkB,GAInBnE,QAAQ,CAACkE,OAAT,CAAiBrE,WAAW,CAACsE,WAAZ,EAAjB,EAA4CC,GAJzB,GAKnB,KALJ;AAOA,UAAMC,KAAK,GAAIJ,cAAD,GAAmB,IAAIjH,SAAJ,CAAc2C,SAAd,EAAyB2E,IAAzB,CAA8BL,cAA9B,CAAnB,GAAmEtE,SAAjF;AAEA,UAAI4E,mBAAmB,GAAG,IAAIvH,SAAJ,CAAcmD,OAAd,EAAuBqE,sBAAvB,CAA8CH,KAA9C,CAA1B,CA1CO,CA2CP;;AAEA,UAAII,eAAJ,EACEC,aADF,EAEEC,cAFF,EAGEC,YAHF,EAIEC,QAJF;;AAMA,UAAIhE,IAAI,KAAKnE,UAAU,CAACgG,GAAxB,EAA6B;AAC3B+B,QAAAA,eAAe,GAAG7D,IAAlB;AACA8D,QAAAA,aAAa,GAAGhE,KAAhB;AACAiE,QAAAA,cAAc,GAAGhE,IAAjB;AACAiE,QAAAA,YAAY,GAAGvG,MAAf;AACAwG,QAAAA,QAAQ,GAAG,IAAI7H,SAAJ,CAAc,CAAd,EAAiB8H,GAAjB,CAAqBrE,KAArB,CAAX;AACD;;AAED,UAAII,IAAI,KAAKnE,UAAU,CAACqI,GAAxB,EAA6B;AAC3BN,QAAAA,eAAe,GAAG9D,IAAlB;AACA+D,QAAAA,aAAa,GAAGrG,MAAhB;AACAsG,QAAAA,cAAc,GAAG/D,IAAjB;AACAgE,QAAAA,YAAY,GAAGlE,KAAf;AACAmE,QAAAA,QAAQ,GAAGpE,KAAX;AACD;;AAED,UAAMwB,OAAO,aAAM/F,KAAK,CAACkG,UAAZ,cAA0B3C,EAA1B,CAAb;;AAEA,UAAMuF,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQnH,QAAR,EAAqB;AAC9C,YAAIA,QAAQ,KAAK,MAAb,IAAuBA,QAAQ,IAAI,KAAvC,EAA8C;AAC5C,iBAAOW,MAAM,CAACwG,KAAK,CAACC,OAAN,CAAc,CAAd,CAAD,CAAb;AACD,SAFD,MAEO;AACL,cAAIC,MAAM,CAACF,KAAD,CAAN,GAAgB,EAApB,EAAwB;AACtB,mBAAOxG,MAAM,CAACwG,KAAK,CAACC,OAAN,CAAc,CAAd,CAAD,CAAb;AACD,WAFD,MAEO;AACL,mBAAOzG,MAAM,CAACwG,KAAK,CAACC,OAAN,CAAc,CAAd,CAAD,CAAb;AACD;AACF;AACF,OAVD;;AAYA,UAAME,kBAAkB,GAAGpC,WAAW,GAAG,GAAzC;AAEA,aAAOoC,kBAAkB,gBACvB;AACE,QAAA,EAAE,EAAE3F,EADN;AAEE,QAAA,SAAS,wBACLtC,MAAM,GAAG,SAAH,GAAe,EADhB,yBAELsC,EAAE,KAAKuE,aAAP,GAAuB,sBAAvB,GAAgD,EAF3C,eAFX;AAME,QAAA,KAAK,EAAEnG,OAAO,KAAK4B,EAAZ,GAAiB;AAAE4F,UAAAA,UAAU,EAAE;AAAd,SAAjB,GAA0D;AANnE,sBAQE;AAAI,QAAA,SAAS,EAAC;AAAd,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAExB,SADT;AAEE,QAAA,IAAI,EAAE;AAFR,QADF,EAKG3B,OAAO,iBACN,oBAAC,SAAD,OANJ,CADF,CARF,eAmBE;AAAI,QAAA,SAAS,EAAC;AAAd,sBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,mBACM,KAAKU,WAAL,CAAiB8B,aAAjB,EAAgCD,eAAhC,CADN,cAC0DA,eAD1D,EADF,CAnBF,eAwBE;AAAI,QAAA,SAAS,EAAC;AAAd,sBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,mBACM,KAAK7B,WAAL,CAAiBgC,YAAjB,EAA+BD,cAA/B,CADN,cACwDA,cADxD,EADF,CAxBF,eA6BE;AAAI,QAAA,SAAS,EAAC;AAAd,sBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,mBACM,KAAK/B,WAAL,CAAiBiC,QAAjB,EAA2BF,cAA3B,CADN,cACoDA,cADpD,cACsEF,eADtE,EADF,CA7BF,eAkCE;AAAI,QAAA,SAAS,EAAC;AAAd,SACGlH,IAAI,KAAKsG,SAAT,gBAEC,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,cAAxB;AAAuC,QAAA,OAAO,EAAE;AAAA,iBAAME,WAAW,CAACtE,EAAD,CAAjB;AAAA;AAAhD,QAFD,gBAIC,oBAAC,QAAD,QAEIkE,WAAW,gBACT,oBAAC,QAAD,qBACE;AAAK,QAAA,KAAK,EAAE;AAAE2B,UAAAA,KAAK,EAAE;AAAT;AAAZ,sBACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,cAAc,EAAC;AAA7C,QADF,CADF,eAIE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAErD;AAAV,sBACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,cAAc,EAAC;AAA7C,QADF,CAJF,CADS,GAUT2B,YAAY,gBACV,+CACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,cAAc,EAAC;AAA7C,QADF,CADU,GAKVnC,UAAU,gBACR,oBAAC,QAAD,qBACE,oBAAC,YAAD,OADF,eAEE,+BAFF,eAGE,+CACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,cAAc,EAAC;AAA7C,QADF,CAHF,CADQ,gBASR,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAE,CAAC8C,mBADb;AAEE,QAAA,OAAO,EAAEA,mBAAmB,GAC1B;AAAA,iBAAM,MAAI,CAACgB,kBAAL,CAAwB9F,EAAxB,EAA4B0D,IAAI,GAAGvD,YAAH,GAAkBC,WAAlD,CAAN;AAAA,SAD0B,GAG1B,YAAM,CAAE,CALZ;AAOE,QAAA,IAAI,EAAE;AAAEgB,UAAAA,IAAI,EAAJA,IAAF;AAAQxC,UAAAA,MAAM,EAANA,MAAR;AAAgBsC,UAAAA,IAAI,EAAJA,IAAhB;AAAsBD,UAAAA,KAAK,EAALA,KAAtB;AAA6BE,UAAAA,IAAI,EAAJA;AAA7B;AAPR,sBASE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC;AAA9C,QATF,CA1BV,CALJ,CAlCF,CADuB;AAAA;;AAsFvB;AAEA;AACE,QAAA,EAAE,EAAEnB,EADN;AAEE,QAAA,SAAS,wBACLlC,IAAI,KAAKsG,SAAT,GAAqB,iBAArB,GAAyC,gBADpC,yBAEL1G,MAAM,GAAG,SAAH,GAAe,EAFhB,yBAGLsC,EAAE,KAAKuE,aAAP,GAAuB,sBAAvB,GAAgD,EAH3C,eAFX;AAOE,QAAA,KAAK,EAAEnG,OAAO,KAAK4B,EAAZ,GAAiB;AAAE4F,UAAAA,UAAU,EAAE;AAAd,SAAjB,GAA0D;AAPnE,sBASE,6CACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGxE,IAAI,KAAKnE,UAAU,CAACgG,GAApB,gBACI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,kBAArB;AAAwC,QAAA,cAAc,EAAC;AAAvD,QADJ,gBAEI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iBAArB;AAAuC,QAAA,cAAc,EAAC;AAAtD,QAHP,CADF,eAME;AAAM,QAAA,SAAS,EAAC;AAAhB,SACGR,OAAO,iBACN,oBAAC,SAAD,OAFJ,YAIM8C,kBAAkB,CAAC3G,MAAD,EAASsC,IAAT,CAJxB,cAI0CA,IAJ1C,EANF,CADF,eAcE,8CACE;AAAG,QAAA,KAAK,EAAE;AAAE6E,UAAAA,MAAM,EAAE;AAAV,SAAV;AAAiC,QAAA,SAAS,EAAC;AAA3C,QADF,CAdF,eAiBE;AAAK,QAAA,SAAS,EAAC;AAAf,sBACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACG3E,IAAI,KAAKnE,UAAU,CAACgG,GAApB,gBACI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iBAArB;AAAuC,QAAA,cAAc,EAAC;AAAtD,QADJ,gBAEI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,kBAArB;AAAwC,QAAA,cAAc,EAAC;AAAvD,QAHP,CADF,eAME;AAAM,QAAA,SAAS,EAAC;AAAhB,mBAAgCsC,kBAAkB,CAACtE,KAAD,EAAQE,IAAR,CAAlD,cAAmEA,IAAnE,EANF,CAjBF,eAyBE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEIrD,IAAI,KAAKsG,SAAT,gBACE,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAC,cAAxB;AAAuC,QAAA,OAAO,EAAE;AAAA,iBAAME,WAAW,CAACtE,EAAD,CAAjB;AAAA;AAAhD,QADF,gBAGE,oBAAC,QAAD,QAEIkE,WAAW,gBACT,oBAAC,QAAD,qBACE;AAAK,QAAA,KAAK,EAAE;AAAE2B,UAAAA,KAAK,EAAE;AAAT;AAAZ,sBACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC;AAA9C,QADF,CADF,eAIE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAErD;AAAV,sBACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC;AAA9C,QADF,CAJF,CADS,GAUT2B,YAAY,gBACV,+CACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC;AAA9C,QADF,CADU,GAKVnC,UAAU,gBACR,oBAAC,QAAD,qBACE,oBAAC,YAAD,OADF,eAEE,+BAFF,eAGE,+CACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC;AAA9C,QADF,CAHF,CADQ;AAAA;AASR;AACA,0BAAC,aAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,QAAQ,EAAE,CAAC8C,mBAFb;AAGE,QAAA,OAAO,EAAEA,mBAAmB,GAC1B;AAAA,iBAAM,MAAI,CAACtG,eAAL,CAAqBwB,EAArB,EAAyB0D,IAAI,GAAGvD,YAAH,GAAkBC,WAA/C,CAAN;AAAA,SAD0B,GAG1B,YAAM,CAAE,CANZ;AAQE,QAAA,IAAI,EAAE;AAAEgB,UAAAA,IAAI,EAAJA,IAAF;AAAQxC,UAAAA,MAAM,EAANA,MAAR;AAAgBsC,UAAAA,IAAI,EAAJA,IAAhB;AAAsBD,UAAAA,KAAK,EAALA,KAAtB;AAA6BE,UAAAA,IAAI,EAAJA;AAA7B;AARR,QA3BV,CALN,CAzBF,CADF,CATF,CAxFF;AAiLD;;;;EA1b8BjF,S;SAAZ2B,G","sourcesContent":["// @ts-nocheck\r\nimport React, { Component, Fragment } from 'react'\r\n\r\nimport { connect } from 'redaction'\r\nimport actions from 'redux/actions'\r\n\r\nimport cssModules from 'react-css-modules'\r\nimport styles from './Row.scss'\r\n\r\nimport helpers, { links, constants } from 'helpers'\r\nimport { Link } from 'react-router-dom'\r\nimport SwapApp from 'swap.app'\r\n\r\nimport Avatar from 'components/Avatar/Avatar'\r\nimport InlineLoader from 'components/loaders/InlineLoader/InlineLoader'\r\nimport { RemoveButton } from 'components/controls'\r\n\r\nimport Pair from './../../Pair'\r\nimport PAIR_TYPES from 'helpers/constants/PAIR_TYPES'\r\nimport RequestButton from '../RequestButton/RequestButton'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport feedback from 'shared/helpers/feedback'\r\nimport TurboIcon from 'shared/components/ui/TurboIcon/TurboIcon'\r\n\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\ntype RowProps = {\r\n  history: { [key: string]: any }\r\n  balances: { [key: string]: number } | boolean\r\n  pairFees: any\r\n  decline: any[]\r\n  orderId: string\r\n  linkedOrderId: string\r\n  \r\n  row: {\r\n    id: string\r\n    isMy: boolean\r\n    isTurbo: boolean\r\n    buyCurrency: string\r\n    sellCurrency: string\r\n    buyAmount: BigNumber\r\n    sellAmount: BigNumber\r\n    isRequested: boolean\r\n    isProcessing: boolean\r\n    owner: { [key: string]: any }\r\n  }\r\n\r\n  removeOrder: (number) => void\r\n  checkSwapAllow: ({}) => boolean\r\n\r\n  currenciesData?: { [key: string]: any }\r\n  intl?: { [key: string]: any }\r\n  peer?: string\r\n}\r\n\r\ntype RowState = {\r\n  enterButton: boolean\r\n  isFetching: boolean\r\n  windowWidth: number\r\n}\r\n@injectIntl\r\n@connect(({\r\n  pubsubRoom: { peer },\r\n  user,\r\n}) => ({\r\n  currenciesData: user,\r\n  peer,\r\n}))\r\n\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class Row extends Component {\r\n  _mounted = false\r\n\r\n  props: RowProps\r\n  state: RowState\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      windowWidth: 0,\r\n      isFetching: false,\r\n      enterButton: false,\r\n    }\r\n  }\r\n\r\n  getBalance() {\r\n    const {\r\n      row: {\r\n        isMy,\r\n        buyCurrency,\r\n        sellCurrency,\r\n      },\r\n      balances,\r\n    } = this.props\r\n\r\n    const balanceCheckCur = (isMy) ? sellCurrency : buyCurrency\r\n\r\n    return (balances && balances[balanceCheckCur]) ? balances[balanceCheckCur] : 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._mounted = true\r\n    window.addEventListener('resize', this.renderContent)\r\n    this.renderContent()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._mounted = false\r\n    window.removeEventListener('resize', this.renderContent)\r\n    actions.modals.close(constants.modals.Confirm)\r\n  }\r\n\r\n  checkDeclineOrders = (orderId, currency) => {\r\n    const { decline } = this.props\r\n\r\n    if (decline.length === 0) {\r\n      this.sendSwapRequest(orderId, currency)\r\n    } else {\r\n      const getDeclinedExistedSwapIndex = helpers.handleGoTrade.getDeclinedExistedSwapIndex({ currency, decline })\r\n      if (getDeclinedExistedSwapIndex !== false) {\r\n        this.handleDeclineOrdersModalOpen(getDeclinedExistedSwapIndex)\r\n      } else {\r\n        this.sendSwapRequest(orderId, currency)\r\n      }\r\n    }\r\n  }\r\n\r\n  getDecimals = (amount, currency) => {\r\n    const decimalPlaces = constants.tokenDecimals[currency.toLowerCase()] || 8\r\n\r\n    return decimalPlaces > 8\r\n      ? String(new BigNumber(amount).dp(8, BigNumber.ROUND_CEIL))\r\n      : String(new BigNumber(amount).dp(decimalPlaces, BigNumber.ROUND_CEIL))\r\n  }\r\n\r\n  handleDeclineOrdersModalOpen = (indexOfDecline) => {\r\n    const orders = SwapApp.shared().services.orders.items\r\n    const declineSwap = actions.core.getSwapById(this.props.decline[indexOfDecline])\r\n\r\n    if (declineSwap !== undefined) {\r\n      actions.modals.open(constants.modals.DeclineOrdersModal, {\r\n        declineSwap,\r\n      })\r\n    }\r\n  }\r\n\r\n  sendSwapRequest = async (orderId, currency) => {\r\n    const {\r\n      row: {\r\n        id,\r\n        buyAmount: sellAmount,\r\n        buyCurrency: sellCurrency, // taker-maker - (maker buy - we sell)\r\n        sellCurrency: buyCurrency, // taker-maker - (maker sell - we buy)\r\n      },\r\n      row,\r\n      intl,\r\n      history,\r\n      pairFees,\r\n      balances,\r\n      checkSwapAllow,\r\n    } = this.props\r\n\r\n    const balance = this.getBalance()\r\n\r\n    feedback.offers.buyPressed(`${sellCurrency}->${buyCurrency}`)\r\n\r\n    const pair = Pair.fromOrder(row)\r\n    const { price, amount, total, main, base, type } = pair\r\n\r\n    if (!checkSwapAllow({\r\n      sellCurrency,\r\n      buyCurrency,\r\n      amount: sellAmount,\r\n      balance,\r\n    })) return false\r\n\r\n    const exchangeRates = new BigNumber(price).dp(6, BigNumber.ROUND_CEIL)\r\n\r\n    const messages = defineMessages({\r\n      sell: {\r\n        id: 'ordersRow97',\r\n        defaultMessage: 'sell',\r\n      },\r\n      buy: {\r\n        id: 'ordersRow101',\r\n        defaultMessage: 'buy',\r\n      },\r\n    })\r\n\r\n    actions.modals.open(constants.modals.ConfirmBeginSwap, {\r\n      order: row,\r\n      onAccept: async (customWallet) => {\r\n        feedback.offers.swapRequested(`${sellCurrency}->${buyCurrency}`)\r\n\r\n        this.setState({ isFetching: true })\r\n\r\n        setTimeout(() => {\r\n          this.setState(() => ({ isFetching: false }))\r\n        }, 15 * 1000)\r\n\r\n        const destination = {\r\n          address: null\r\n        }\r\n        if (customWallet !== null) {\r\n          destination.address = customWallet\r\n        }\r\n\r\n        actions.core.sendRequest(orderId, destination, (isAccepted) => {\r\n          console.log(`Your request is ${isAccepted ? 'accepted' : 'declined'}`)\r\n\r\n          if (isAccepted) {\r\n            this.setState({ isFetching: false }, () => {\r\n              const swapUri = row.isTurbo ?\r\n                `${links.turboSwap}/${id}`\r\n                :\r\n                `${links.atomicSwap}/${id}`\r\n              \r\n              console.log(`Redirect to swap: ${swapUri}`)\r\n              history.push(localisedUrl(intl.locale, swapUri))\r\n            })\r\n          } else {\r\n            this.setState({ isFetching: false })\r\n          }\r\n        })\r\n        actions.core.updateCore()\r\n      },\r\n      message: (\r\n        <FormattedMessage\r\n          id=\"ordersRow134\"\r\n          defaultMessage=\"Do you want to {action} {amount} {main} for {total} {base} at price {price} {main}/{base}?\"\r\n          values={{\r\n            action: `${type === PAIR_TYPES.BID\r\n              ? intl.formatMessage(messages.sell)\r\n              : intl.formatMessage(messages.buy)\r\n            }`,\r\n            amount: `${this.getDecimals(amount, main)}`,\r\n            main: `${main}`,\r\n            total: `${this.getDecimals(total, base)}`,\r\n            base: `${base}`,\r\n            price: `${exchangeRates}`,\r\n          }}\r\n        />\r\n      ),\r\n    })\r\n  }\r\n\r\n  renderContent = () => {\r\n    let windowWidthIn = window.innerWidth\r\n    this.setState({ windowWidth: windowWidthIn })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isFetching,\r\n      windowWidth,\r\n    } = this.state\r\n\r\n    const balance = this.getBalance()\r\n\r\n    const {\r\n      row: {\r\n        id,\r\n        isMy,\r\n        isTurbo,\r\n        buyCurrency,\r\n        buyAmount,\r\n        sellCurrency,\r\n        sellAmount,\r\n        isRequested,\r\n        isProcessing,\r\n        owner: { peer: ownerPeer },\r\n      },\r\n      peer,\r\n      orderId,\r\n      removeOrder,\r\n      linkedOrderId,\r\n      intl: { locale },\r\n      pairFees,\r\n    } = this.props\r\n\r\n    const pair = Pair.fromOrder(this.props.row)\r\n    const { price, amount, total, main, base, type } = pair\r\n\r\n    // todo: improve calculation much more\r\n    const buyCurrencyFee = (\r\n      pairFees\r\n      && pairFees.byCoins\r\n      && pairFees.byCoins[buyCurrency.toUpperCase()]\r\n    ) ? pairFees.byCoins[buyCurrency.toUpperCase()].fee\r\n      : false\r\n\r\n    const costs = (buyCurrencyFee) ? new BigNumber(buyAmount).plus(buyCurrencyFee) : buyAmount\r\n\r\n    let isSwapButtonEnabled = new BigNumber(balance).isGreaterThanOrEqualTo(costs)\r\n    // @ToDo - Tokens - need eth balance for fee\r\n\r\n    let sellCurrencyOut,\r\n      sellAmountOut,\r\n      getCurrencyOut,\r\n      getAmountOut,\r\n      priceOut\r\n\r\n    if (type === PAIR_TYPES.BID) {\r\n      sellCurrencyOut = base\r\n      sellAmountOut = total\r\n      getCurrencyOut = main\r\n      getAmountOut = amount\r\n      priceOut = new BigNumber(1).div(price)\r\n    }\r\n\r\n    if (type === PAIR_TYPES.ASK) {\r\n      sellCurrencyOut = main\r\n      sellAmountOut = amount\r\n      getCurrencyOut = base\r\n      getAmountOut = total\r\n      priceOut = price\r\n    }\r\n\r\n    const swapUri = `${links.atomicSwap}/${id}`\r\n\r\n    const mobileFormatCrypto = (value, currency) => {\r\n      if (currency === 'USDT' || currency == 'EUR') {\r\n        return String(value.toFixed(2))\r\n      } else {\r\n        if (Number(value) > 10) {\r\n          return String(value.toFixed(5))\r\n        } else {\r\n          return String(value.toFixed(8))\r\n        }\r\n      }\r\n    }\r\n\r\n    const showDesktopContent = windowWidth > 800\r\n\r\n    return showDesktopContent ? (\r\n      <tr\r\n        id={id}\r\n        styleName={`\r\n          ${isDark ? 'rowDark' : ''}\r\n          ${id === linkedOrderId ? 'linkedOrderHighlight' : ''}\r\n        `}\r\n        style={orderId === id ? { background: 'rgba(0, 236, 0, 0.1)' } : {}}\r\n      >\r\n        <td styleName='rowCell'>\r\n          <div styleName='withIcon'>\r\n            <Avatar\r\n              value={ownerPeer}\r\n              size={30}\r\n            />\r\n            {isTurbo &&\r\n              <TurboIcon />\r\n            }\r\n          </div>\r\n        </td>\r\n        <td styleName='rowCell'>\r\n          <span styleName='rowAmount'>\r\n            {`${this.getDecimals(sellAmountOut, sellCurrencyOut)} ${sellCurrencyOut}`}\r\n          </span>\r\n        </td>\r\n        <td styleName='rowCell'>\r\n          <span styleName='rowAmount'>\r\n            {`${this.getDecimals(getAmountOut, getCurrencyOut)} ${getCurrencyOut}`}\r\n          </span>\r\n        </td>\r\n        <td styleName='rowCell'>\r\n          <span styleName='rowAmount'>\r\n            {`${this.getDecimals(priceOut, getCurrencyOut)} ${getCurrencyOut}/${sellCurrencyOut}`}\r\n          </span>\r\n        </td>\r\n        <td styleName='rowCell'>\r\n          {peer === ownerPeer\r\n            ?\r\n            <RemoveButton className=\"removeButton\" onClick={() => removeOrder(id)} />\r\n            :\r\n            <Fragment>\r\n              {\r\n                isRequested ? (\r\n                  <Fragment>\r\n                    <div style={{ color: 'red' }}>\r\n                      <FormattedMessage id=\"Row148\" defaultMessage=\"REQUESTING\" />\r\n                    </div>\r\n                    <Link to={swapUri}>\r\n                      <FormattedMessage id=\"Row151\" defaultMessage=\"Go to the swap\" />\r\n                    </Link>\r\n                  </Fragment>\r\n                ) : (\r\n                  isProcessing ? (\r\n                    <span>\r\n                      <FormattedMessage id=\"Row157\" defaultMessage=\"This order is in execution\" />\r\n                    </span>\r\n                  ) : (\r\n                    isFetching ? (\r\n                      <Fragment>\r\n                        <InlineLoader />\r\n                        <br />\r\n                        <span>\r\n                          <FormattedMessage id=\"Row165\" defaultMessage=\"Please wait while we confirm your request\" />\r\n                        </span>\r\n                      </Fragment>\r\n                    ) : (\r\n                      <RequestButton\r\n                        disabled={!isSwapButtonEnabled}\r\n                        onClick={isSwapButtonEnabled ?\r\n                          () => this.checkDeclineOrders(id, isMy ? sellCurrency : buyCurrency)\r\n                          :\r\n                          () => {}\r\n                        }\r\n                        data={{ type, amount, main, total, base }}\r\n                      >\r\n                        <FormattedMessage id=\"RowM166\" defaultMessage=\"Start\" />\r\n                      </RequestButton>\r\n                    )\r\n                  )\r\n                )\r\n              }\r\n            </Fragment>\r\n          }\r\n        </td>\r\n      </tr>\r\n    )\r\n    : /* mobile content */\r\n    (\r\n      <tr\r\n        id={id}\r\n        styleName={`\r\n          ${peer === ownerPeer ? 'mobileRowRemove' : 'mobileRowStart'}\r\n          ${isDark ? 'rowDark' : ''}\r\n          ${id === linkedOrderId ? 'linkedOrderHighlight' : ''}\r\n        `}\r\n        style={orderId === id ? { background: 'rgba(0, 236, 0, 0.1)' } : {}}\r\n      >\r\n        <td>\r\n          <div styleName=\"bigContainer\">\r\n            <div styleName=\"tdContainer-1\">\r\n              <span styleName=\"firstType\">\r\n                {type === PAIR_TYPES.BID\r\n                  ? (<FormattedMessage id=\"RowMobileYouSend\" defaultMessage=\"You send\" />)\r\n                  : (<FormattedMessage id=\"RowMobileYouGet\" defaultMessage=\"You get\" />)}\r\n              </span>\r\n              <span styleName='rowAmount withIcon'>\r\n                {isTurbo &&\r\n                  <TurboIcon />\r\n                }\r\n                {`${mobileFormatCrypto(amount, main)} ${main}`}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <i style={{ margin: '0 0.8em' }} className=\"fas fa-exchange-alt\" />\r\n            </div>\r\n            <div styleName=\"tdContainer-2\">\r\n              <span styleName=\"secondType\">\r\n                {type === PAIR_TYPES.BID\r\n                  ? (<FormattedMessage id=\"RowMobileYouGet\" defaultMessage=\"You get\" />)\r\n                  : (<FormattedMessage id=\"RowMobileYouSend\" defaultMessage=\"You send\" />)}\r\n              </span>\r\n              <span styleName='rowAmount'>{`${mobileFormatCrypto(total, base)} ${base}`}</span>\r\n            </div>\r\n            <div styleName=\"tdContainer-3\">\r\n              {\r\n                peer === ownerPeer ? (\r\n                  <RemoveButton className=\"removeButton\" onClick={() => removeOrder(id)} />\r\n                ) : (\r\n                  <Fragment>\r\n                    {\r\n                      isRequested ? (\r\n                        <Fragment>\r\n                          <div style={{ color: 'red' }}>\r\n                            <FormattedMessage id=\"RowM136\" defaultMessage=\"REQUESTING\" />\r\n                          </div>\r\n                          <Link to={swapUri}>\r\n                            <FormattedMessage id=\"RowM139\" defaultMessage=\"Go to the swap\" />\r\n                          </Link>\r\n                        </Fragment>\r\n                      ) : (\r\n                        isProcessing ? (\r\n                          <span>\r\n                            <FormattedMessage id=\"RowM145\" defaultMessage=\"This order is in execution\" />\r\n                          </span>\r\n                        ) : (\r\n                          isFetching ? (\r\n                            <Fragment>\r\n                              <InlineLoader />\r\n                              <br />\r\n                              <span>\r\n                                <FormattedMessage id=\"RowM153\" defaultMessage=\"Please wait while we confirm your request\" />\r\n                              </span>\r\n                            </Fragment>\r\n                          ) : (\r\n                            //@\r\n                            <RequestButton\r\n                              styleName=\"startButton\"\r\n                              disabled={!isSwapButtonEnabled}\r\n                              onClick={isSwapButtonEnabled ?\r\n                                () => this.sendSwapRequest(id, isMy ? sellCurrency : buyCurrency)\r\n                                :\r\n                                () => {}\r\n                              }\r\n                              data={{ type, amount, main, total, base }}\r\n                            />\r\n                          )\r\n                        )\r\n                      )\r\n                    }\r\n                  </Fragment>\r\n                )\r\n              }\r\n            </div>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n"]}]}