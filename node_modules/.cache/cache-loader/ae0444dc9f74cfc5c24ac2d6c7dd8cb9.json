{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\redux\\actions\\multisigTx.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\redux\\actions\\multisigTx.ts","mtime":1614852484411},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/redux/actions/multisigTx.ts"],"names":["apiLooper","actions","getState","reducers","broadcast","sender","destination","amount","fee","rawTx","invoice","btcData","user","senderWallet","btcmultisig","addressToWallet","requestData","address","pubkey","publicKey","toString","mainnet","process","env","MAINNET","keys","publicKeys","map","key","post","body","then","txId","console","error","fetchTx","get","txData","confirmTx","msTxId","signedTx","data","rejectTx","fetchRawTx","fetch","holderKey","firstPending","pengingCount","query","res","answer","transactions","items","item","status","holder","type","hash","uniqhash","canEdit","txType","isHolder","confirmations","value","date","utx","direction","updateMultisigStatus","last","total","e","goToLastWallet","multisigStatus","walletsWithRequests","Object","walletAddress","filter","count","pending","length","window","location"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport { apiLooper, constants, api, redirectTo } from 'helpers'\r\nimport config from 'app-config'\r\nimport actions from 'redux/actions'\r\nimport { getState } from 'redux/core'\r\nimport reducers from 'redux/core/reducers'\r\n\r\n\r\nconst broadcast = ({ sender, destination, amount, fee, rawTx, invoice }) => {\r\n  const { user: { btcData } } = getState()\r\n\r\n  const senderWallet = actions.btcmultisig.addressToWallet(sender)\r\n\r\n  if (senderWallet) {\r\n    const requestData = {\r\n      address: btcData.address,\r\n      pubkey: btcData.publicKey.toString('hex'),\r\n      mainnet: (process.env.MAINNET) ? '1' : '0',\r\n\r\n      sender,\r\n      destination,\r\n      amount,\r\n      fee,\r\n      rawTx,\r\n      invoice,\r\n\r\n      keys: senderWallet.publicKeys.map((key) => key.toString('hex')),\r\n    }\r\n\r\n    return apiLooper.post('multisig', `/broadcast/`, {\r\n      body: requestData,\r\n    }).then(({ txId }) => txId)\r\n  }\r\n  console.error(`Btc-Multisig. Cant detect sender wallet`)\r\n  return false\r\n\r\n}\r\n\r\nconst fetchTx = (txId) => apiLooper\r\n  .get('multisig', `/tx/${txId}`)\r\n  .then((txData) => txData)\r\n\r\nconst confirmTx = (address, msTxId, signedTx, txId) => {\r\n  const senderWallet = actions.btcmultisig.addressToWallet(address)\r\n\r\n  if (senderWallet) {\r\n    return apiLooper.post('multisig', `/confirmtx/`, {\r\n      body: {\r\n        msTxId,\r\n        keys: senderWallet.publicKeys.map((key) => key.toString('hex')),\r\n        signedTx,\r\n        txId,\r\n      },\r\n    }).then((data) => data)\r\n  }\r\n}\r\n\r\nconst rejectTx = (address, txId) => {\r\n  const senderWallet = actions.btcmultisig.addressToWallet(address)\r\n\r\n  if (senderWallet) {\r\n    return apiLooper.post('multisig', `/rejecttx/`, {\r\n      body: {\r\n        txId,\r\n        keys: senderWallet.publicKeys.map((key) => key.toString('hex')),\r\n      },\r\n    }).then((data) => data)\r\n  }\r\n}\r\n\r\nconst fetchRawTx = (address, txId) => {\r\n  const senderWallet = actions.btcmultisig.addressToWallet(address)\r\n\r\n  if (senderWallet) {\r\n    return apiLooper.post('multisig', `/rawtx/`, {\r\n      body: {\r\n        txId,\r\n        keys: senderWallet.publicKeys.map((key) => key.toString('hex')),\r\n      },\r\n    }).then((data) => data)\r\n  }\r\n}\r\n\r\nconst fetch = (address) => {\r\n  const { user: { btcData } } = getState()\r\n  const holderKey = btcData.publicKey.toString('hex')\r\n\r\n  let firstPending = false\r\n  let pengingCount = 0\r\n\r\n  return apiLooper.post('multisig', `/txs/`, {\r\n    body: {\r\n      address,\r\n    },\r\n    query: 'multisigTx',\r\n  }).then((res: any) => {\r\n    if (res\r\n      && res.answer\r\n    ) {\r\n      const senderWallet = actions.btcmultisig.addressToWallet(address)\r\n\r\n      const transactions = res.items.map((item) => {\r\n        let { status } = item\r\n\r\n        switch (status) {\r\n          case 1: status = 'pending'\r\n            break\r\n          case 2: status = 'ready'\r\n            break\r\n          case 3: status = 'reject'\r\n            break\r\n          case 4: status = 'cancel'\r\n            break\r\n        }\r\n\r\n        // @ToDo - (draft) use api request for fetch status of address list\r\n        if (status === 'pending' && holderKey !== item.holder) {\r\n          //@\r\n          firstPending = firstPending || {\r\n            address,\r\n            item,\r\n          }\r\n          pengingCount++\r\n        }\r\n\r\n        return ({\r\n          type: 'btc',\r\n          hash: item.uniqhash,\r\n          canEdit: false,\r\n          txType: 'CONFIRM',\r\n          confirmTx: {\r\n            ...item,\r\n            status,\r\n            isHolder: (holderKey === item.holder),\r\n          },\r\n          confirmations: 0,\r\n          value: item.amount,\r\n          date: item.utx * 1000,\r\n          direction: 'out',\r\n        })\r\n      })\r\n\r\n      // @ToDo - (draft) use api request for fetch status of address list\r\n      reducers.user.updateMultisigStatus({\r\n        address,\r\n        last: firstPending,\r\n        total: pengingCount,\r\n      })\r\n      return transactions\r\n    } return []\r\n  }).catch((e) => [])\r\n}\r\n\r\nconst goToLastWallet = () => {\r\n  const {\r\n    user: {\r\n      multisigStatus,\r\n    },\r\n  } = getState()\r\n\r\n  const walletsWithRequests = Object.keys(multisigStatus).map((walletAddress) => ({\r\n    walletAddress,\r\n    ...multisigStatus[walletAddress],\r\n  })).filter((item) => {\r\n    const {\r\n      count,\r\n      pending,\r\n    } = item\r\n\r\n    return count\r\n  })\r\n\r\n  if (walletsWithRequests.length) {\r\n    window.location.hash = `/btc/${walletsWithRequests[0].walletAddress}`\r\n  }\r\n}\r\n\r\n\r\nexport default {\r\n  broadcast,\r\n  fetch,\r\n\r\n  fetchTx,\r\n  fetchRawTx,\r\n  confirmTx,\r\n  rejectTx,\r\n\r\n  goToLastWallet,\r\n}\r\n"]}]}