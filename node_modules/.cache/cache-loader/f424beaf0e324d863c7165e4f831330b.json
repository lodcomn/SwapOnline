{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\getCurrencyKey.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\getCurrencyKey.ts","mtime":1614842914107},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGV0aFRva2VuIGZyb20gJy4vZXRoVG9rZW4nOwpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKGN1cnJlbmN5LCByZXR1cm5Ub2tlbikgewogIHZhciBrZXkgPSBjdXJyZW5jeS50b0xvd2VyQ2FzZSgpOwoKICBzd2l0Y2ggKGtleSkgewogICAgY2FzZSAnY3VycmVuY3knOgogICAgY2FzZSAnYnRjIChzbXMtcHJvdGVjdGVkKSc6CiAgICBjYXNlICdidGMgKHBpbi1wcm90ZWN0ZWQpJzoKICAgIGNhc2UgJ2J0YyAobXVsdGlzaWcpJzoKICAgICAgcmV0dXJuICdidGMnOwoKICAgIGNhc2UgJ2V0aCc6CiAgICAgIHJldHVybiAnZXRoJzsKCiAgICBjYXNlICdnaG9zdCc6CiAgICAgIHJldHVybiAnZ2hvc3QnOwoKICAgIGNhc2UgJ25leHQnOgogICAgICByZXR1cm4gJ25leHQnOwogIH0KCiAgaWYgKGV0aFRva2VuLmlzRXRoVG9rZW4oewogICAgbmFtZToga2V5CiAgfSkpIHsKICAgIGtleSA9IHJldHVyblRva2VuID8ga2V5IDogJ3Rva2VuJzsKICB9CgogIHJldHVybiBrZXk7Cn0pOw=="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/helpers/getCurrencyKey.ts"],"names":["ethToken","currency","returnToken","key","toLowerCase","isEthToken","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAGA,gBAAe,UAACC,QAAD,EAAWC,WAAX,EAA2B;AACxC,MAAIC,GAAG,GAAGF,QAAQ,CAACG,WAAT,EAAV;;AACA,UAAQD,GAAR;AACE,SAAK,UAAL;AACA,SAAK,qBAAL;AACA,SAAK,qBAAL;AACA,SAAK,gBAAL;AACE,aAAO,KAAP;;AACF,SAAK,KAAL;AACE,aAAO,KAAP;;AACF,SAAK,OAAL;AACE,aAAO,OAAP;;AACF,SAAK,MAAL;AACE,aAAO,MAAP;AAXJ;;AAcA,MAAIH,QAAQ,CAACK,UAAT,CAAoB;AAAEC,IAAAA,IAAI,EAAEH;AAAR,GAApB,CAAJ,EAAwC;AACtCA,IAAAA,GAAG,GAAID,WAAD,GAAgBC,GAAhB,GAAsB,OAA5B;AACD;;AAED,SAAOA,GAAP;AACD,CArBD","sourcesContent":["import ethToken from './ethToken'\r\n\r\n\r\nexport default (currency, returnToken) => {\r\n  let key = currency.toLowerCase()\r\n  switch (key) {\r\n    case 'currency':\r\n    case 'btc (sms-protected)':\r\n    case 'btc (pin-protected)':\r\n    case 'btc (multisig)':\r\n      return 'btc'\r\n    case 'eth':\r\n      return 'eth'\r\n    case 'ghost':\r\n      return 'ghost'\r\n    case 'next':\r\n      return 'next'\r\n  }\r\n\r\n  if (ethToken.isEthToken({ name: key })) {\r\n    key = (returnToken) ? key : 'token'\r\n  }\r\n\r\n  return key\r\n}\r\n"]}]}