{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\eth.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\eth.ts","mtime":1614842914101},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIkBiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yIjsKaW1wb3J0IGNvbmZpZyBmcm9tICdhcHAtY29uZmlnJzsKaW1wb3J0IGNvbnN0YW50cyBmcm9tICcuL2NvbnN0YW50cyc7CmltcG9ydCBhcGkgZnJvbSAnLi9hcGknOwppbXBvcnQgQmlnTnVtYmVyIGZyb20gJ2JpZ251bWJlci5qcyc7Cgp2YXIgZXN0aW1hdGVGZWVWYWx1ZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKG9wdGlvbnMpIHsKICAgIHZhciBtZXRob2QsIHNwZWVkLCBnYXNQcmljZSwgZmVlVmFsdWU7CiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBtZXRob2QgPSBvcHRpb25zLm1ldGhvZCwgc3BlZWQgPSBvcHRpb25zLnNwZWVkOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGVzdGltYXRlR2FzUHJpY2UoewogICAgICAgICAgICAgIHNwZWVkOiBzcGVlZAogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGdhc1ByaWNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgZmVlVmFsdWUgPSBuZXcgQmlnTnVtYmVyKGNvbnN0YW50cy5kZWZhdWx0RmVlUmF0ZXMuZXRoLmxpbWl0W21ldGhvZF0pLm11bHRpcGxpZWRCeShnYXNQcmljZSkubXVsdGlwbGllZEJ5KDFlLTE4KS50b051bWJlcigpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBmZWVWYWx1ZSk7CgogICAgICAgICAgY2FzZSA2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGVzdGltYXRlRmVlVmFsdWUoX3gpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGVzdGltYXRlR2FzUHJpY2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgdmFyIF9yZWYzLAogICAgICAgIF9yZWYzJHNwZWVkLAogICAgICAgIHNwZWVkLAogICAgICAgIGxpbmssCiAgICAgICAgZGVmYXVsdFByaWNlLAogICAgICAgIGFwaVJlc3VsdCwKICAgICAgICBhcGlTcGVlZHMsCiAgICAgICAgYXBpU3BlZWQsCiAgICAgICAgYXBpUHJpY2UsCiAgICAgICAgX2FyZ3MyID0gYXJndW1lbnRzOwoKICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfcmVmMyA9IF9hcmdzMi5sZW5ndGggPiAwICYmIF9hcmdzMlswXSAhPT0gdW5kZWZpbmVkID8gX2FyZ3MyWzBdIDoge30sIF9yZWYzJHNwZWVkID0gX3JlZjMuc3BlZWQsIHNwZWVkID0gX3JlZjMkc3BlZWQgPT09IHZvaWQgMCA/ICdmYXN0JyA6IF9yZWYzJHNwZWVkOwogICAgICAgICAgICBsaW5rID0gY29uZmlnLmZlZVJhdGVzLmV0aDsKICAgICAgICAgICAgZGVmYXVsdFByaWNlID0gY29uc3RhbnRzLmRlZmF1bHRGZWVSYXRlcy5ldGgucHJpY2U7CgogICAgICAgICAgICBpZiAobGluaykgewogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGRlZmF1bHRQcmljZVtzcGVlZF0pOwoKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA1OwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgIHJldHVybiBhcGkuYXN5bmNGZXRjaEFwaShsaW5rKTsKCiAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgIGFwaVJlc3VsdCA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDExOwogICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oNSk7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIkVzdGltYXRlR2FzUHJpY2U6ICIuY29uY2F0KF9jb250ZXh0Mi50MC5tZXNzYWdlKSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBkZWZhdWx0UHJpY2Vbc3BlZWRdKTsKCiAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICBhcGlTcGVlZHMgPSB7CiAgICAgICAgICAgICAgc2xvdzogJ3NhZmVMb3cnLAogICAgICAgICAgICAgIGZhc3Q6ICdmYXN0JywKICAgICAgICAgICAgICBmYXN0ZXN0OiAnZmFzdGVzdCcKICAgICAgICAgICAgfTsKICAgICAgICAgICAgYXBpU3BlZWQgPSBhcGlTcGVlZHNbc3BlZWRdIHx8IGFwaVNwZWVkcy5mYXN0OwogICAgICAgICAgICAvKiANCiAgICAgICAgICAgICogYXBpIHJldHVybnMgZ2FzIHByaWNlIGluIHgxMCBHd2VpDQogICAgICAgICAgICAqIGRpdmlkZWQgYnkgMTAgdG8gY29udmVydCBpdCB0byBnd2VpDQogICAgICAgICAgICAqLwoKICAgICAgICAgICAgYXBpUHJpY2UgPSBuZXcgQmlnTnVtYmVyKGFwaVJlc3VsdFthcGlTcGVlZF0pLmRpdmlkZWRCeSgxMCkubXVsdGlwbGllZEJ5KDFlOSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBhcGlQcmljZSA+PSBkZWZhdWx0UHJpY2Vbc3BlZWRdID8gYXBpUHJpY2UudG9TdHJpbmcoKSA6IGRlZmF1bHRQcmljZVtzcGVlZF0pOwoKICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzUsIDExXV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGVzdGltYXRlR2FzUHJpY2UoKSB7CiAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7CgpleHBvcnQgZGVmYXVsdCB7CiAgZXN0aW1hdGVGZWVWYWx1ZTogZXN0aW1hdGVGZWVWYWx1ZSwKICBlc3RpbWF0ZUdhc1ByaWNlOiBlc3RpbWF0ZUdhc1ByaWNlCn07"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/helpers/eth.ts"],"names":["config","constants","api","BigNumber","estimateFeeValue","options","method","speed","estimateGasPrice","gasPrice","feeValue","defaultFeeRates","eth","limit","multipliedBy","toNumber","link","feeRates","defaultPrice","price","asyncFetchApi","apiResult","console","error","message","apiSpeeds","slow","fast","fastest","apiSpeed","apiPrice","dividedBy","toString"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAOA,IAAMC,gBAAgB;AAAA,sEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,MADe,GACGD,OADH,CACfC,MADe,EACPC,KADO,GACGF,OADH,CACPE,KADO;AAAA;AAAA,mBAEAC,gBAAgB,CAAC;AAAED,cAAAA,KAAK,EAALA;AAAF,aAAD,CAFhB;;AAAA;AAEjBE,YAAAA,QAFiB;AAGjBC,YAAAA,QAHiB,GAGN,IAAIP,SAAJ,CAAcF,SAAS,CAACU,eAAV,CAA0BC,GAA1B,CAA8BC,KAA9B,CAAoCP,MAApC,CAAd,EACdQ,YADc,CACDL,QADC,EAEdK,YAFc,CAED,KAFC,EAGdC,QAHc,EAHM;AAAA,6CAQhBL,QARgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBN,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAWA,IAAMI,gBAAgB;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,+EAA4B,EAA5B,sBAASD,KAAT,EAASA,KAAT,4BAAiB,MAAjB;AACjBS,YAAAA,IADiB,GACVhB,MAAM,CAACiB,QAAP,CAAgBL,GADN;AAEjBM,YAAAA,YAFiB,GAEFjB,SAAS,CAACU,eAAV,CAA0BC,GAA1B,CAA8BO,KAF5B;;AAAA,gBAIlBH,IAJkB;AAAA;AAAA;AAAA;;AAAA,8CAKdE,YAAY,CAACX,KAAD,CALE;;AAAA;AAAA;AAAA;AAAA,mBAWHL,GAAG,CAACkB,aAAJ,CAAkBJ,IAAlB,CAXG;;AAAA;AAWrBK,YAAAA,SAXqB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAarBC,YAAAA,OAAO,CAACC,KAAR,6BAAmC,aAAIC,OAAvC;AAbqB,8CAcdN,YAAY,CAACX,KAAD,CAdE;;AAAA;AAiBjBkB,YAAAA,SAjBiB,GAiBL;AAChBC,cAAAA,IAAI,EAAE,SADU;AAEhBC,cAAAA,IAAI,EAAE,MAFU;AAGhBC,cAAAA,OAAO,EAAE;AAHO,aAjBK;AAuBjBC,YAAAA,QAvBiB,GAuBNJ,SAAS,CAAClB,KAAD,CAAT,IAAoBkB,SAAS,CAACE,IAvBxB;AAwBvB;AACF;AACA;AACA;;AACQG,YAAAA,QA5BiB,GA4BN,IAAI3B,SAAJ,CAAckB,SAAS,CAACQ,QAAD,CAAvB,EAAmCE,SAAnC,CAA6C,EAA7C,EAAiDjB,YAAjD,CAA8D,GAA9D,CA5BM;AAAA,8CA8BhBgB,QAAQ,IAAIZ,YAAY,CAACX,KAAD,CAAxB,GACHuB,QAAQ,CAACE,QAAT,EADG,GAEHd,YAAY,CAACX,KAAD,CAhCO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAhBC,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAmCA,eAAe;AACbJ,EAAAA,gBAAgB,EAAhBA,gBADa;AAEbI,EAAAA,gBAAgB,EAAhBA;AAFa,CAAf","sourcesContent":["import config from 'app-config'\r\nimport constants from './constants'\r\nimport api from './api'\r\nimport BigNumber from 'bignumber.js'\r\n\r\ntype EstimateFeeOptions = {\r\n  method: string\r\n  speed: 'fastest' | 'fast' | 'slow'\r\n}\r\n\r\nconst estimateFeeValue = async (options: EstimateFeeOptions) => {\r\n  const { method, speed } = options\r\n  const gasPrice = await estimateGasPrice({ speed })\r\n  const feeValue = new BigNumber(constants.defaultFeeRates.eth.limit[method])\r\n    .multipliedBy(gasPrice)\r\n    .multipliedBy(1e-18)\r\n    .toNumber()\r\n\r\n  return feeValue\r\n}\r\n\r\nconst estimateGasPrice = async ({ speed = 'fast' } = {}) => {\r\n  const link = config.feeRates.eth\r\n  const defaultPrice = constants.defaultFeeRates.eth.price\r\n\r\n  if (!link) {\r\n    return defaultPrice[speed]\r\n  }\r\n\r\n  let apiResult\r\n\r\n  try {\r\n    apiResult = await api.asyncFetchApi(link)\r\n  } catch (err) {\r\n    console.error(`EstimateGasPrice: ${err.message}`)\r\n    return defaultPrice[speed]\r\n  }\r\n\r\n  const apiSpeeds = {\r\n    slow: 'safeLow',\r\n    fast: 'fast',\r\n    fastest: 'fastest',\r\n  }\r\n\r\n  const apiSpeed = apiSpeeds[speed] || apiSpeeds.fast\r\n  /* \r\n  * api returns gas price in x10 Gwei\r\n  * divided by 10 to convert it to gwei\r\n  */\r\n  const apiPrice = new BigNumber(apiResult[apiSpeed]).dividedBy(10).multipliedBy(1e9)\r\n\r\n  return apiPrice >= defaultPrice[speed] \r\n    ? apiPrice.toString()\r\n    : defaultPrice[speed]\r\n}\r\n\r\nexport default {\r\n  estimateFeeValue,\r\n  estimateGasPrice,\r\n}\r\n"]}]}