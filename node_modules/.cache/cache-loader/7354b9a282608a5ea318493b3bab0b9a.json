{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\redux\\actions\\api.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\redux\\actions\\api.ts","mtime":1614842914283},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJlZHVjZXJzIGZyb20gJ3JlZHV4L2NvcmUvcmVkdWNlcnMnOwppbXBvcnQgY29uZmlnIGZyb20gJ2FwcC1jb25maWcnOwoKdmFyIGNoZWNrU2VydmVycyA9IGZ1bmN0aW9uIGNoZWNrU2VydmVycygpIHsKICByZWR1Y2Vycy5hcGkuc2V0Q2hlY2tlZChmYWxzZSk7CiAgcmV0dXJuIFByb21pc2UuYWxsKE9iamVjdC5rZXlzKGNvbmZpZy5hcGlBbHRlcm5hdGl2ZXMpLm1hcChmdW5jdGlvbiAocHJvdmlkZXIpIHsKICAgIHJldHVybiBQcm9taXNlLnJhY2UoY29uZmlnLmFwaUFsdGVybmF0aXZlc1twcm92aWRlcl0ubWFwKGZ1bmN0aW9uIChzZXJ2ZXIpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBmZXRjaCgiIi5jb25jYXQoc2VydmVyLCAiL3N0YXR1cyIpKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiByZXNvbHZlKHNlcnZlcik7CiAgICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIHJldHVybiByZWplY3QoZSk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSkpLnRoZW4oZnVuY3Rpb24gKGNob3NlbikgewogICAgICByZWR1Y2Vycy5hcGkuc2V0QXBpU2VydmVyKHByb3ZpZGVyLCBjaG9zZW4pOwogICAgICBjb25zb2xlLmxvZygiWyIuY29uY2F0KHByb3ZpZGVyLCAiXSAiKS5jb25jYXQoY2hvc2VuLCAiIGlzIE9LLCB1c2luZyBpdCIpKTsKICAgIH0pOwogIH0pKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgIHJlZHVjZXJzLmFwaS5zZXRDaGVja2VkKHRydWUpOwogICAgY29uc29sZS5sb2coJ0FsbCBzZXJ2ZXJzIGlzIE9LLicpOwogIH0pWyJjYXRjaCJdKGZ1bmN0aW9uIChlKSB7CiAgICByZXR1cm4gcmVkdWNlcnMuYXBpLnNldEVycm9ycyh0cnVlKTsKICB9KTsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjaGVja1NlcnZlcnM6IGNoZWNrU2VydmVycwp9Ow=="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/redux/actions/api.ts"],"names":["reducers","config","checkServers","api","setChecked","Promise","all","Object","keys","apiAlternatives","map","provider","race","server","resolve","reject","fetch","then","e","chosen","setApiServer","console","log","setErrors"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,YAAnB;;AAKA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBF,EAAAA,QAAQ,CAACG,GAAT,CAAaC,UAAb,CAAwB,KAAxB;AACA,SAAOC,OAAO,CAACC,GAAR,CACLC,MAAM,CAACC,IAAP,CAAYP,MAAM,CAACQ,eAAnB,EAAoCC,GAApC,CAAwC,UAAAC,QAAQ;AAAA,WAAIN,OAAO,CAACO,IAAR,CAClDX,MAAM,CAACQ,eAAP,CAAuBE,QAAvB,EAAiCD,GAAjC,CACE,UAACG,MAAD;AAAA,aAAY,IAAIR,OAAJ,CAAY,UAACS,OAAD,EAAUC,MAAV,EAAqB;AAC3CC,QAAAA,KAAK,WAAIH,MAAJ,aAAL,CAA0BI,IAA1B,CAA+B;AAAA,iBAAMH,OAAO,CAACD,MAAD,CAAb;AAAA,SAA/B,WAA4D,UAAAK,CAAC;AAAA,iBAAIH,MAAM,CAACG,CAAD,CAAV;AAAA,SAA7D;AACD,OAFW,CAAZ;AAAA,KADF,CADkD,EAMlDD,IANkD,CAM7C,UAAAE,MAAM,EAAI;AACfnB,MAAAA,QAAQ,CAACG,GAAT,CAAaiB,YAAb,CAA0BT,QAA1B,EAAoCQ,MAApC;AACAE,MAAAA,OAAO,CAACC,GAAR,YAAgBX,QAAhB,eAA6BQ,MAA7B;AACD,KATmD,CAAJ;AAAA,GAAhD,CADK,EAYLF,IAZK,CAYA,YAAM;AACXjB,IAAAA,QAAQ,CAACG,GAAT,CAAaC,UAAb,CAAwB,IAAxB;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD,GAfM,WAeE,UAAAJ,CAAC;AAAA,WAAIlB,QAAQ,CAACG,GAAT,CAAaoB,SAAb,CAAuB,IAAvB,CAAJ;AAAA,GAfH,CAAP;AAgBD,CAlBD;;AAoBA,eAAe;AACbrB,EAAAA,YAAY,EAAZA;AADa,CAAf","sourcesContent":["import reducers from 'redux/core/reducers'\r\nimport config from 'app-config'\r\n\r\n\r\n\r\n\r\nconst checkServers = () => {\r\n  reducers.api.setChecked(false)\r\n  return Promise.all(\r\n    Object.keys(config.apiAlternatives).map(provider => Promise.race(\r\n      config.apiAlternatives[provider].map(\r\n        (server) => new Promise((resolve, reject) => {\r\n          fetch(`${server}/status`).then(() => resolve(server)).catch(e => reject(e))\r\n        })\r\n      )\r\n    ).then(chosen => {\r\n      reducers.api.setApiServer(provider, chosen)\r\n      console.log(`[${provider}] ${chosen} is OK, using it`)\r\n    })\r\n    )\r\n  ).then(() => {\r\n    reducers.api.setChecked(true)\r\n    console.log('All servers is OK.')\r\n  }).catch(e => reducers.api.setErrors(true))\r\n}\r\n\r\nexport default {\r\n  checkServers,\r\n}\r\n"]}]}