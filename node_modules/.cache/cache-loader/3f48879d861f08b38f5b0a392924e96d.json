{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\css-loader\\dist\\cjs.js??ref--11-2!C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\postcss-loader\\dist\\cjs.js??ref--11-3!C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\sass-loader\\dist\\cjs.js??ref--11-4!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\Swap.scss","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\Swap.scss","mtime":1614842914202},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\index.scss","mtime":1614842913802},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\Swap.scss","mtime":1614842914202},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\index.scss","mtime":1614842913802},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\index.scss","mtime":1614842913807},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\_sizes.scss","mtime":1614842913807},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\_media.scss","mtime":1614842913807},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\_colors.scss","mtime":1614842913806},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\vars\\_animations.scss","mtime":1614842913806},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\mixins\\index.scss","mtime":1614842913805},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\mixins\\_common.scss","mtime":1614842913803},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\mixins\\_fonts.scss","mtime":1614842913804},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\client\\scss\\config\\mixins\\_media.scss","mtime":1614842913804},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gSW1wb3J0cwppbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tICIuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qcyI7CmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSAiLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyI7CnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTsKLy8gTW9kdWxlCl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgIi5rMGRBa2prNy16ZjZHNWJIZVE2VFQge1xuICBwYWRkaW5nLXRvcDogMjBweDtcbn1cblxuLl8zcDdxS3pLRndVaTItaVFEQjFhQTZrIGNvZGUge1xuICBjb2xvcjogd2hpdGU7XG59XG5cbi56YkZJOUc3MFZyQlNuZ0JXV05iTmMge1xuICBwYWRkaW5nLXRvcDogMDtcbn1cblxuLl8zNGF6TWRSeDJ2akhwWXNUTEVkamR1IHtcbiAgY29sb3I6ICMwMDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIHBhZGRpbmctYm90dG9tOiAzNXB4O1xufVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA1NzBweCkge1xuICAuXzM0YXpNZFJ4MnZqSHBZc1RMRWRqZHUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4uXzJfb2IwLVZKZFVHaU5haERkZ1RwR0Yge1xuICBjb2xvcjogIzAwMDtcbn1cblxuLl8xblREOGMyS0JlTlpsWW9pQjhTZFBCIHtcbiAgY29sb3I6ICNlMzI5NTA7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5fM25fVUlHSUZqdFc5MmttMXhEbk5IeiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6ICNhY2FjYWM7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLl8zTmdFckhSZGsxeG9vVXNoQjFMTjg4IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogNjAwcHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICBtYXJnaW4tdG9wOiAyZW07XG59XG5cbi5fMTRVYWhUQkNIb2UycWpEaTdlaFpiQiB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIG1hcmdpbi1ib3R0b206IC0zcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi5aWTZnN3FEZ3Z0djBtOFFTUVVKNkQge1xuICBjb2xvcjogI2UzMjk1MDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIHBhZGRpbmc6IDc4cHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uXzM3ME4tTGJtYVFCQ2k2S1pfQ1F0QXEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5fMUFqOFVRaFV2T3hTVGhURDhDVU9BOSB7XG4gIG1hcmdpbi1sZWZ0OiA1JTtcbiAgdG9wOiAtNHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5fMTVtTFMyQVVNTHhOdVdBQmhzLVVrdiB7XG4gIG1heC13aWR0aDogNjAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDFlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE4cHg7XG59XG5cbi5hVmFnX09hWjBvYXlGTmlWbU1HSyB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5fMTl1TkhjOF92djlvbGFLQ2RfZG9qSiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogLTM1cHg7XG59XG5cbi56SThiUlR0OTRyYmFUUVZlWGRGTmUge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi10b3A6IDcwcHg7XG59XG5cbi5fM2xzRmxndjhzOGgwbzl2TGs0cklJdCB7XG4gIGNvbG9yOiAjYTlhOWE5O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4uTExYaTU4NFVBdkNCN2ZoRnk5RzJGIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBmb250LXNpemU6IDE1cHg7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tdG9wOiAyNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5LUUpuU1BhYzhPbTd2MWtwUFFOZWYge1xuICBjb2xvcjogIzNkZTI1Yjtcbn1cblxuLl8zRi12ZjNYOWJtQXZRSE9BVTJ6SjhsIHtcbiAgY29sb3I6ICNlMzI5NTA7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NjhweCkge1xuICAuRVRxSlpaM2NfUVhLQVEtNEk4R2xGIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWxlZnQ6IDVweDtcbiAgICBtYXJnaW4tdG9wOiAycHg7XG4gIH1cblxuICAuXzFBajhVUWhVdk94U1RoVEQ4Q1VPQTkge1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgfVxufVxuLl8zMmNMUXJZcmY4NHJfYUNvUXIzaE1tIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NlY2VjZTtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBtYXJnaW4tdG9wOiAwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZzogMzBweCAyNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDM1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDIwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZy1ib3R0b206IDc1cHg7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBtYXgtd2lkdGg6IDYwMHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTY4cHgpIHtcbiAgLl8zbHNGbGd2OHM4aDBvOXZMazRySUl0IHtcbiAgICByaWdodDogNDBweDtcbiAgfVxuXG4gIC5fMzJjTFFyWXJmODRyX2FDb1FyM2hNbSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICB9XG59XG4uXzJiZTdQc0pfV1otOHFfYnpDTjZRMzQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDU2OHB4KSB7XG4gIC5fMmJlN1BzSl9XWi04cV9iekNONlEzNCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDcwcHg7XG4gIH1cblxuICAuTExYaTU4NFVBdkNCN2ZoRnk5RzJGIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi10b3A6IDBweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cbi5nYkozalNtMk8xaWJVZ0wzbXRYTzcge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uXzNVUzJha2V1QXc0cWE2X2hKVzMwYjQge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi5fMkRRdHhkdUZBN3l3S1gwR3B5OTNrcCB7XG4gIG1hcmdpbi10b3A6IDAuNWVtO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMjFweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xuICB6LWluZGV4OiAxO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5fM2htTTAxRUhvTURCVEdzZzV5eGU5UCBzcGFuIHtcbiAgZm9udC1zaXplOiA5cHg7XG4gIGhlaWdodDogM2VtO1xufVxuXG4uXzNobU0wMUVIb01EQlRHc2c1eXhlOVAgaSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdG9wOiA5cHg7XG59XG5cbi5fMkVNZkhyX2p3QnZXa3l1NDB5TlduayB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6IDVweDtcbn1cbi5fMkVNZkhyX2p3QnZXa3l1NDB5TlduayBhIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG4uXzJFTWZIcl9qd0J2V2t5dTQweU5XbmsgYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICMwMDdiZmY7XG59XG5cbi5fMkRRdHhkdUZBN3l3S1gwR3B5OTNrcCBzcGFuID4gZGl2IHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTY4cHgpIHtcbiAgLl8yRFF0eGR1RkE3eXdLWDBHcHk5M2twIHtcbiAgICBmb250LXNpemU6IDExLjJweDtcbiAgICB3aWR0aDogNjAlO1xuICB9XG59XG4ucmZaN2dZZjRxbmhCMXptelhqM0p1IHtcbiAgZm9udC1zaXplOiAyMnB4O1xufVxuXG4uXzFWWHdzOTdoVHlfNlBsWkF4TFJGWWsge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5fMnZCNE9lVFA1VzlDTzlyUVZoVVRwOSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5DR2x1YlFIbTltYld6WUxPYlR2d2Uge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMjBweDtcbiAgbGVmdDogNTAlO1xuICB3aWR0aDogbWF4LWNvbnRlbnQ7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbn1cbi5DR2x1YlFIbTltYld6WUxPYlR2d2UgaSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA0cHg7XG4gIGxlZnQ6IC0yNXB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNTY4cHgpIHtcbiAgLkNHbHViUUhtOW1iV3pZTE9iVHZ3ZSB7XG4gICAgbGVmdDogNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgfVxuICAuQ0dsdWJRSG05bWJXellMT2JUdndlIGkge1xuICAgIGxlZnQ6IC0yMHB4O1xuICB9XG59XG4uXzFMZ203ZUliRnNTWERQQW83V0JSSFgge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IDBweDtcbiAgYm90dG9tOiAtNDBweDtcbiAgY29sb3I6ICMwMDA7XG59XG5cbi5fMkNYeURZTTg4UGp5TkVabHBCZEVZSCB7XG4gIGNvbG9yOiAjMDAwO1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgd2lkdGg6IDE4NXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5fM2htTTAxRUhvTURCVEdzZzV5eGU5UCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbjogMWVtO1xufVxuLl8zaG1NMDFFSG9NREJUR3NnNXl4ZTlQIGltZyB7XG4gIHdpZHRoOiAyNjVweDtcbn1cbi5fM2htTTAxRUhvTURCVEdzZzV5eGU5UCBidXR0b24ge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIDFlbTtcbiAgaGVpZ2h0OiA1NnB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICB3aWR0aDogNTZweDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG4gIGNvbG9yOiAjMDAwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLl8zaG1NMDFFSG9NREJUR3NnNXl4ZTlQIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NjhweCkge1xuICAuXzNobU0wMUVIb01EQlRHc2c1eXhlOVAgYSB7XG4gICAgZm9udC1zaXplOiA5cHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgcG9zaXRpb246IHN0YXRpYztcbiAgfVxuICAuXzNobU0wMUVIb01EQlRHc2c1eXhlOVAgYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG4ucWxreHFTOGxjY0pVTHJyaWw3YnJCIHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDE4NXB4O1xuICBtYXJnaW4tdG9wOiAtMzVweDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgLW1zLWZsZXgtcGFjazogZGlzdHJpYnV0ZTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW4tYm90dG9tOiAtMjBweDtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5xbGt4cVM4bGNjSlVMcnJpbDdickIgaW1nIHtcbiAgd2lkdGg6IDcycHg7XG59XG5cbi5NZGtRWDZUUEs3Y3VoNHBFMy1Tbmkge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uXzN2M0xvT2NKbEpmSGJmU1VKeWIweFIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgbWFyZ2luLXRvcDogLTVweDtcbn1cblxuLlFzSmVPNm1KX1pkY0ltQTloSHBtMixcbi5fM1NzbXRPdktNSU9lQUJqbGVrV0gyVCB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogNTZweDtcbiAgZGlzcGxheTogZmxleDtcbiAgY29sb3I6ICNmZmY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIHBhZGRpbmc6IDEwcHggMTVweDtcbiAgYm94LXNoYWRvdzogMXB4IDFweCA2cHggIzkyOTI5MjtcbiAgY29sb3I6ICMwMDA7XG59XG4uUXNKZU82bUpfWmRjSW1BOWhIcG0yOmhvdmVyLFxuLl8zU3NtdE92S01JT2VBQmpsZWtXSDJUOmhvdmVyIHtcbiAgY29sb3I6ICMwMDA7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG59XG5cbi5Rc0plTzZtSl9aZGNJbUE5aEhwbTIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtc2l6ZTogMTdweDtcbn1cblxuLl8xNDZQaHRHQmZQemJHek9qREJIUVpoIHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5fM1NzbXRPdktNSU9lQUJqbGVrV0gyVCB7XG4gIGJhY2tncm91bmQ6ICNlZWU7XG4gIGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWJveDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICB0ZXh0LWRlY29yYXRpb246IGRhc2hlZDtcbiAgY29sb3I6ICMwMDA7XG4gIGhlaWdodDogNTZweDtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IG5vcm1hbDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxN3B4O1xuICBtYXJnaW4tdG9wOiAwO1xuICBmb250LXNpemU6IDEzcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDE4MnB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgbWFyZ2luLXRvcDogMTBweDtcbiAgYmFja2dyb3VuZDogI2RiZGJkYjtcbiAgY29sb3I6ICM2MjYyNjI7XG59XG4uXzNTc210T3ZLTUlPZUFCamxla1dIMlQ6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjZGJkYmRiO1xuICBjb2xvcjogIzYyNjI2Mjtcbn1cblxuLl8ycGtObjFNMmVJSGxRNFptV2ZVWHVxIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYm90dG9tOiAxM3B4O1xuICBmb250LXNpemU6IDE2cHg7XG4gIHRleHQtdHJhbnNmb3JtOiBpbml0aWFsO1xufVxuXG4uXzNPVlUzdEMxeTZvdkdBVkpudXE2WXkge1xuICBjb2xvcjogIzAwMDtcbn1cblxuLl8yTDh6SnVDbFB4bmtrOTY5QVVxRXNZLFxuLlFVOEhQTTFrbE52QVdWY21WOUR1NiB7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4uUVU4SFBNMWtsTnZBV1ZjbVY5RHU2IHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLnBibGxJengtM08xVlYwRnk2V1FHQyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnhyX3NXdTQ5anlhOHhhVnluRmZQLSB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cblxuLl8zVm1wbFlZLTJYSS13VEtVQWhJN3ZwIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY5MHB4KSB7XG4gIC5fMzJjTFFyWXJmODRyX2FDb1FyM2hNbSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLl8zMmNMUXJZcmY4NHJfYUNvUXIzaE1tIC5fMmJlN1BzSl9XWi04cV9iekNONlEzNCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAuXzNOZ0VySFJkazF4b29Vc2hCMUxOODgge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLl8yX29iMC1WSmRVR2lOYWhEZGdUcEdGIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIC5Rc0plTzZtSl9aZGNJbUE5aEhwbTIge1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDU2OXB4KSBhbmQgKG1heC13aWR0aDogMTAyNHB4ICkge1xuICAuXzJfb2IwLVZKZFVHaU5haERkZ1RwR0Yge1xuICAgIG9yZGVyOiAyO1xuICB9XG5cbiAgLl8zTmdFckhSZGsxeG9vVXNoQjFMTjg4IHtcbiAgICBvcmRlcjogMztcbiAgfVxuXG4gIC5fMTVtTFMyQVVNTHhOdVdBQmhzLVVrdiB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBiYWNrZ3JvdW5kOiAjY2VjZWNlM2I7XG4gICAgY29sb3I6ICMwMDA7XG4gICAgcGFkZGluZzogN3B4IDIwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA2MDBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgb3JkZXI6IDE7XG4gIH1cblxuICAuXzM0YXpNZFJ4MnZqSHBZc1RMRWRqZHUge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogNTY4cHgpIHtcbiAgLl8xNW1MUzJBVU1MeE51V0FCaHMtVWt2IHtcbiAgICBvcmRlcjogMTtcbiAgfVxuXG4gIC5fMl9vYjAtVkpkVUdpTmFoRGRnVHBHRiB7XG4gICAgb3JkZXI6IDI7XG4gIH1cblxuICAuXzNOZ0VySFJkazF4b29Vc2hCMUxOODgge1xuICAgIG9yZGVyOiAzO1xuICB9XG5cbiAgLl8zQ2s4Q3l5SWpmeGFfcHhHVWpzTGdPIHtcbiAgICBmb250LXNpemU6IDguNXB4O1xuICB9XG4gIC5fM0NrOEN5eUlqZnhhX3B4R1Vqc0xnTyBhIHtcbiAgICBmb250LXNpemU6IDguNXB4O1xuICB9XG5cbiAgLl8yRU1mSHJfandCdldreXU0MHlOV25rIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tbGVmdDogMHB4O1xuICB9XG4gIC5fMkVNZkhyX2p3QnZXa3l1NDB5TlduayBhIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gIH1cblxuICAuXzJfb2IwLVZKZFVHaU5haERkZ1RwR0Yge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLl8zMmNMUXJZcmY4NHJfYUNvUXIzaE1tIHtcbiAgICBwYWRkaW5nOiAxNXB4IDIwcHg7XG4gICAgcGFkZGluZy1ib3R0b206IDcwcHg7XG4gIH1cblxuICAuXzE1bUxTMkFVTUx4TnVXQUJocy1Va3Yge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgYmFja2dyb3VuZDogI2NlY2VjZTNiO1xuICAgIGNvbG9yOiAjMDAwO1xuICAgIHBhZGRpbmc6IDdweCAyMHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgLl8xNFVhaFRCQ0hvZTJxakRpN2VoWmJCIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgfVxuXG4gIC5nYkozalNtMk8xaWJVZ0wzbXRYTzcge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMTBweDtcbiAgICB0b3A6IDBweDtcbiAgICB3aWR0aDogMjAwcHg7XG4gIH1cblxuICAuZ2JKM2pTbTJPMWliVWdMM210WE83ID4gZGl2IHtcbiAgICBoZWlnaHQ6IHVuc2V0O1xuICB9XG5cbiAgLl8zaG1NMDFFSG9NREJUR3NnNXl4ZTlQIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcbiAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XG4gICAgbWFyZ2luOiAxZW0gMDtcbiAgfVxuXG4gIC5rMGRBa2prNy16ZjZHNWJIZVE2VFQge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgfVxuXG4gIC56YkZJOUc3MFZyQlNuZ0JXV05iTmMge1xuICAgIG1hcmdpbi10b3A6IDA7XG4gIH1cbn1cbi5fMW16SFRjdENkZWN5V09velNLUXRmSCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxleC1iYXNpczogMTAwJTtcbn1cblxuaDMge1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbi5fMTFLa3QxMkdJNDUwcHBPVkZQRXpBMyB7XG4gIHBhZGRpbmctYm90dG9tOiA3MDBweDtcbn1cblxuLl8yQ3RDNDc0QmxjTGZlTjllUTRjSFJUIHtcbiAgbWFyZ2luLXJpZ2h0OiAxJTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufSIsICIiLHsidmVyc2lvbiI6Mywic291cmNlcyI6WyJ3ZWJwYWNrOi8vLi9zcmMvZnJvbnQvc2hhcmVkL3BhZ2VzL1N3YXAvU3dhcC5zY3NzIiwid2VicGFjazovLy4vc3JjL2Zyb250L2NsaWVudC9zY3NzL2NvbmZpZy92YXJzL19jb2xvcnMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9mcm9udC9jbGllbnQvc2Nzcy9jb25maWcvbWl4aW5zL19tZWRpYS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsaUJBQUE7QUFBRjs7QUFJRTtFQUNFLFlBQUE7QUFESjs7QUFLQTtFQUNFLGNBQUE7QUFGRjs7QUFLQTtFQUNFLFdBQUE7RUFDQSxhQUFBO0VBQ0EsOEJBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxvQkFBQTtBQUZGOztBQUtBO0VBQ0U7SUFDRSxjQUFBO0VBRkY7QUFDRjtBQUtBO0VBQ0UsV0FBQTtBQUhG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QUFBO0lBQ0EsZUFBQTtJQUNBLGdCQUFBO0lBQ0Esa0JBQUE7SUFDQSxxQkFBQTtJQUNBLFdBQUE7SUFDQSxpQkFBQTtJQUNBLFdBQUE7RUFVRjs7RUFSQTtJQUNFLGVBQUE7SUFDQSxnQkFBQTtFQVdGOztFQVRBO0lBQ0Usa0JBQUE7SUFDQSxXQUFBO0lBQ0EsUUFBQTtJQUNBLFlBQUE7RUFZRjs7RUFUQTtJQUNFLGFBQUE7RUFZRjs7RUFUQTtJQUNFLG9CQUFBO0lBQ0Esa0JBQUE7SUFDQSxhQUFBO0VBWUY7O0VBVkE7SUFDRSxjQUFBO0lBQ0EsV0FBQTtJQUNBLGVBQUE7RUFhRjs7RUFYQTtJQUNFLGFBQUE7RUFjRjtBQUNGO0FBWEE7RUFDRSxrQkFBQTtFQUNBLGdCQUFBO0FBYUY7O0FBVkE7RUFDRSxlQUFBO0FBYUY7O0FBVkE7RUFDRSxxQkFBQTtBQWFGOztBQVZBO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0FBYUYiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi9zY3NzL2NvbmZpZy9pbmRleC5zY3NzXCI7XG4uc3dhcCB7XHJcbiAgcGFkZGluZy10b3A6IDIwcHg7XHJcbn1cclxuXHJcbi5kYXJrIHtcclxuICBjb2Rle1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxufVxyXG5cclxuLnN3YXBNb2JpbGUge1xyXG4gIHBhZGRpbmctdG9wOiAwO1xyXG59XHJcblxyXG4uc3dhcENvbnRhaW5lciB7XHJcbiAgY29sb3I6ICMwMDA7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICBwYWRkaW5nLWJvdHRvbTogMzVweDtcclxufVxyXG5cclxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNTcwcHgpIHtcclxuICAuc3dhcENvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcbn1cclxuXHJcbi5zd2FwRGVwb3NpdFdpbmRvdyB7XHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuXHJcbi51bmZpbmlzaGVkSHJlZiB7XHJcbiAgY29sb3I6ICRjb2xvci1mLWVycm9yO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ucmVsb2FkVGV4dCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGNvbG9yOiAjYWNhY2FjO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLnN3YXBDb250YWluZXJJbmZvIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB3aWR0aDogNjAwcHg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICBtYXJnaW4tdG9wOiAyZW07XHJcbn1cclxuXHJcbi5saW5rVGV4dCB7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBtYXJnaW4tYm90dG9tOiAtM3B4O1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmNhbmNlbGVkIHtcclxuICBjb2xvcjogI2UzMjk1MDtcclxuICBmb250LXNpemU6IDI0cHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgcGFkZGluZzogNzhweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ucmVmSGV4IHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5pbmNsdWRlZCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDUlO1xyXG4gIHRvcDogLTRweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5zd2FwSW5mbyB7XHJcbiAgbWF4LXdpZHRoOiA2MDBweDtcclxuICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxufVxyXG4uc3dhcEluZm9Nb2JpbGUge1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi5zd2FwR29OdW1iZXIge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogLTM1cHg7XHJcbn1cclxuXHJcbi5zd2FwV3JhcHBlciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbi10b3A6IDcwcHg7XHJcbn1cclxuXHJcbi5iaXRjb2luU2NyaXB0IHtcclxuICBjb2xvcjogI2E5YTlhOTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuXHJcbi5vbmxpbmVJbmRpY2F0b3Ige1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBmb250LXNpemU6IDE1cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLXRvcDogMjVweDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5vbmxpbmUge1xyXG4gIGNvbG9yOiAjM2RlMjViO1xyXG59XHJcbi5vZmZsaW5lIHtcclxuICBjb2xvcjogJGNvbG9yLWYtZXJyb3I7XHJcbn1cclxuXHJcbkBpbmNsdWRlIG1lZGlhLW1vYmlsZSB7XHJcbiAgLmxvYWRlckhvbGRlciB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG4gICAgbWFyZ2luLXRvcDogMnB4O1xyXG4gIH1cclxuICAuaW5jbHVkZWQge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDA7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgfVxyXG59XHJcblxyXG4udG9wVXBMaW5rIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2VjZWNlO1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHBhZGRpbmc6IDMwcHggMjVweDtcclxuICBwYWRkaW5nLWxlZnQ6IDM1cHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBwYWRkaW5nLWJvdHRvbTogNzVweDtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBtYXgtd2lkdGg6IDYwMHB4O1xyXG59XHJcblxyXG5AaW5jbHVkZSBtZWRpYS1tb2JpbGUge1xyXG4gIC5iaXRjb2luU2NyaXB0IHtcclxuICAgIHJpZ2h0OiA0MHB4O1xyXG4gIH1cclxuICAudG9wVXBMaW5rIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgfVxyXG59XHJcblxyXG4udG9wIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuQGluY2x1ZGUgbWVkaWEtbW9iaWxlIHtcclxuICAudG9wIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogNzBweDtcclxuICB9XHJcbiAgLm9ubGluZUluZGljYXRvciB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbn1cclxuXHJcbi5xckltZyB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWVzc2FnZSB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uYnRjTWVzc2FnZSB7XHJcbiAgbWFyZ2luLXRvcDogMC41ZW07XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIGZvbnQtc2l6ZTogMjFweDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tcmlnaHQ6IDVweDtcclxuICB6LWluZGV4OiAxO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLnFyIHNwYW4ge1xyXG4gIGZvbnQtc2l6ZTogOXB4O1xyXG4gIGhlaWdodDogM2VtO1xyXG59XHJcblxyXG4ucXIgaSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHRvcDogOXB4O1xyXG59XHJcblxyXG4ubGlua1RyYW5zYWN0aW9ucyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiA1cHg7XHJcbiAgYSB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgICY6aG92ZXIge1xyXG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgIGNvbG9yOiAjMDA3YmZmO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmJ0Y01lc3NhZ2Ugc3BhbiA+IGRpdiB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG5AaW5jbHVkZSBtZWRpYS1tb2JpbGUge1xyXG4gIC5idGNNZXNzYWdlIHtcclxuICAgIGZvbnQtc2l6ZTogMTEuMnB4O1xyXG4gICAgd2lkdGg6IDYwJTtcclxuICB9XHJcbn1cclxuXHJcbi5zZW5kTWVzc2FnZSB7XHJcbiAgZm9udC1zaXplOiAyMnB4O1xyXG59XHJcblxyXG4uaW5mb1dyYXBwZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmxvZ0hpZGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5sb2NrVGltZSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJvdHRvbTogMjBweDtcclxuICBsZWZ0OiA1MCU7XHJcbiAgd2lkdGg6IG1heC1jb250ZW50O1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICBpIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogNHB4O1xyXG4gICAgbGVmdDogLTI1cHg7XHJcbiAgfVxyXG59XHJcblxyXG5AaW5jbHVkZSBtZWRpYS1tb2JpbGUge1xyXG4gIC5sb2NrVGltZSB7XHJcbiAgICBsZWZ0OiA1MCU7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XHJcbiAgICBpIHtcclxuICAgICAgbGVmdDogLTIwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uY29weVRleHQge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBsZWZ0OiAwcHg7XHJcbiAgYm90dG9tOiAtNDBweDtcclxuICBjb2xvcjogIzAwMDtcclxufVxyXG4uc3dhcFRleHQge1xyXG4gIGNvbG9yOiAjMDAwO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgd2lkdGg6IDE4NXB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLnFyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW46IDFlbTtcclxuICBpbWcge1xyXG4gICAgd2lkdGg6IDI2NXB4O1xyXG4gIH1cclxuICBidXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXJnaW46IDAgMWVtO1xyXG4gICAgaGVpZ2h0OiA1NnB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiA1NnB4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZWVlO1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICY6aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kOiAjZWVlO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQGluY2x1ZGUgbWVkaWEtbW9iaWxlIHtcclxuICAucXIge1xyXG4gICAgYSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogOXB4O1xyXG4gICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgcGFkZGluZzogMTBweDtcclxuICAgICAgcG9zaXRpb246IHN0YXRpYztcclxuICAgIH1cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uY2FyZHNDb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDE4NXB4O1xyXG4gIG1hcmdpbi10b3A6IC0zNXB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgLXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAtbXMtZmxleC1wYWNrOiBkaXN0cmlidXRlO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBtYXJnaW4tYm90dG9tOiAtMjBweDtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIGltZyB7XHJcbiAgICB3aWR0aDogNzJweDtcclxuICB9XHJcbn1cclxuXHJcbi5wcmVzc0N0cmxUZXh0IHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4ucHJlc3NDdHJsVGV4dEFjdGl2ZSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBtYXJnaW4tdG9wOiAtNXB4O1xyXG59XHJcblxyXG4ubGlua0FkZHJlc3MsXHJcbi5idXlXaXRoQ2FyZCB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDU2cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBjb2xvcjogI2ZmZjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gIGJveC1zaGFkb3c6IDFweCAxcHggNnB4ICM5MjkyOTI7XHJcbiAgY29sb3I6ICMwMDA7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBjb2xvcjogIzAwMDtcclxuICAgIGJhY2tncm91bmQ6ICNlZWU7XHJcbiAgfVxyXG59XHJcblxyXG4ubGlua0FkZHJlc3Mge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBmb250LXNpemU6IDE3cHg7XHJcbn1cclxuXHJcbi5mYS1jb3B5LWluIHtcclxuICBiYWNrZ3JvdW5kOiAjMDAwO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4uYnV5V2l0aENhcmQge1xyXG4gIGJhY2tncm91bmQ6ICNlZWU7XHJcbiAgZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtYm94O1xyXG4gIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICB0ZXh0LWRlY29yYXRpb246IGRhc2hlZDtcclxuICBjb2xvcjogIzAwMDtcclxuICBoZWlnaHQ6IDU2cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB3aWR0aDogZml0LWNvbnRlbnQ7XHJcbiAganVzdGlmeS1jb250ZW50OiBub3JtYWw7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmb250LXNpemU6IDE3cHg7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBmb250LXNpemU6IDEzcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgcGFkZGluZzogMDtcclxuICB3aWR0aDogMTgycHg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gIGJhY2tncm91bmQ6ICNkYmRiZGI7XHJcbiAgY29sb3I6ICM2MjYyNjI7XHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZGJkYmRiO1xyXG4gICAgY29sb3I6ICM2MjYyNjI7XHJcbiAgfVxyXG59XHJcbi5jb21pbmdTb29uIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYm90dG9tOiAxM3B4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICB0ZXh0LXRyYW5zZm9ybTogaW5pdGlhbDtcclxufVxyXG4ueW91ckJhbGFuY2Uge1xyXG4gIGNvbG9yOiAjMDAwO1xyXG59XHJcbi5mcm9tQ2xpZW50LFxyXG4udW5jb25mQmFsYW5jZSB7XHJcbiAgY29sb3I6ICMwMDA7XHJcbn1cclxuLnVuY29uZkJhbGFuY2Uge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5nb2hvbWUtaG9sZGVyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5idXR0b24ge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4ucHNldWRvbGluayB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuXHJcbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDY5MHB4KSB7XHJcbiAgLnRvcFVwTGluayB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIC50b3Age1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgIH1cclxuICB9XHJcbiAgLnN3YXBDb250YWluZXJJbmZvIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAuc3dhcERlcG9zaXRXaW5kb3cge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5saW5rQWRkcmVzcyB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuQGluY2x1ZGUgbWVkaWEtdGFibGV0IHtcclxuICAuc3dhcERlcG9zaXRXaW5kb3cge1xyXG4gICAgb3JkZXI6IDI7XHJcbiAgfVxyXG4gIC5zd2FwQ29udGFpbmVySW5mbyB7XHJcbiAgICBvcmRlcjogMztcclxuICB9XHJcbiAgLnN3YXBJbmZvIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjY2VjZWNlM2I7XHJcbiAgICBjb2xvcjogIzAwMDtcclxuICAgIHBhZGRpbmc6IDdweCAyMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBvcmRlcjogMTtcclxuICB9XHJcbiAgLnN3YXBDb250YWluZXIge1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGFsaWduLWl0ZW1zOiBiYXNlbGluZTtcclxuICB9XHJcbn1cclxuXHJcbkBpbmNsdWRlIG1lZGlhLW1vYmlsZSB7XHJcbiAgLnN3YXBJbmZvIHtcclxuICAgIG9yZGVyOiAxO1xyXG4gIH1cclxuICAuc3dhcERlcG9zaXRXaW5kb3cge1xyXG4gICAgb3JkZXI6IDI7XHJcbiAgfVxyXG4gIC5zd2FwQ29udGFpbmVySW5mbyB7XHJcbiAgICBvcmRlcjogMztcclxuICB9XHJcbiAgLnRyYW5zYWN0aW9uIHtcclxuICAgIGZvbnQtc2l6ZTogOC41cHg7XHJcbiAgICBhIHtcclxuICAgICAgZm9udC1zaXplOiA4LjVweDtcclxuICAgIH1cclxuICB9XHJcbiAgLmxpbmtUcmFuc2FjdGlvbnMge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tbGVmdDogMHB4O1xyXG4gICAgYSB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIH1cclxuICB9XHJcbiAgLnN3YXBEZXBvc2l0V2luZG93IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICAudG9wVXBMaW5rIHtcclxuICAgIHBhZGRpbmc6IDE1cHggMjBweDtcclxuICAgIHBhZGRpbmctYm90dG9tOiA3MHB4O1xyXG4gIH1cclxuICAuc3dhcEluZm8ge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAxNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIGJhY2tncm91bmQ6ICNjZWNlY2UzYjtcclxuICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgcGFkZGluZzogN3B4IDIwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAgLmxpbmtUZXh0IHtcclxuICAgIGZvbnQtc2l6ZTogMTFweDtcclxuICAgIG1hcmdpbi10b3A6IDIwcHg7XHJcbiAgfVxyXG4gIC5xckltZyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMTBweDtcclxuICAgIHRvcDogMHB4O1xyXG4gICAgd2lkdGg6IDIwMHB4O1xyXG4gIH1cclxuXHJcbiAgLnFySW1nID4gZGl2IHtcclxuICAgIGhlaWdodDp1bnNldDtcclxuICB9XHJcblxyXG4gIC5xciB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGVuZDtcclxuICAgIHdpZHRoOiBtYXgtY29udGVudDtcclxuICAgIG1hcmdpbjogMWVtIDA7XHJcbiAgfVxyXG4gIC5zd2FwIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmb250LXNpemU6IDExcHg7XHJcbiAgfVxyXG4gIC5zd2FwTW9iaWxlIHtcclxuICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5mb3JtYXRpb24ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmbGV4LWJhc2lzOiAxMDAlO1xyXG59XHJcblxyXG5oMyB7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG59XHJcblxyXG4uc3dhcEluZm9PcGVuIHtcclxuICBwYWRkaW5nLWJvdHRvbTogNzAwcHg7XHJcbn1cclxuXHJcbi5pY29uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDElO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuIiwiJHByaW1hcnk6IHZhcigtLXByaW1hcnkpO1xyXG4kcHJpbWFyeS1ob3ZlcjogdmFyKC0tcHJpbWFyeS1ob3Zlcik7XHJcbiRhbHRlcm5hdGU6IHZhcigtLWFsdGVybmF0ZSk7XHJcbiRhbHRlcm5hdGUtaG92ZXI6IHZhcigtLWFsdGVybmF0ZS1ob3Zlcik7XHJcblxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBMaWdodCB0aGVtZVxyXG5cclxuJGwtYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdmNztcclxuJGwtY29sb3I6ICMwMDA7XHJcblxyXG4kbC1icmFuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSk7XHJcbiRsLWJyYW5kLWNvbG9yLWhvdmVyOiB2YXIoLS1wcmltYXJ5LWhvdmVyKTtcclxuXHJcbiRsLWJhY2tncm91bmQtZWxlbWVudHM6ICNmZmY7XHJcbiRsLWJveC1zaGFkb3c6IDBweCA0cHggMTZweCByZ2JhKDAsMCwwLDAuMDgpLCAwcHggMXB4IDRweCByZ2JhKDAsMCwwLDAuMDgpO1xyXG5cclxuJGwtcmVhZC1vbmx5OiByZ2IoMjMzLCAyMzMsIDIzMyk7XHJcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIERhcmsgdGhlbWVcclxuXHJcbiRkLWJhY2tncm91bmQtY29sb3I6ICMyMjI0Mjc7XHJcbiRkLWNvbG9yOiAjZmZmO1xyXG5cclxuJGQtYmFja2dyb3VuZC1lbGVtZW50czogIzI0MjQyNTtcclxuJGQtYm94LXNoYWRvdzogMHB4IDRweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC40OSksMHB4IDFweCA0cHggcmdiYSgxMywgMTMsIDEzLCAwLjA2KTtcclxuXHJcbiRkLXJlYWQtb25seTogcmdiKDQ0LCA0NCwgNDQpO1xyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBVbmNoYW5naW5nIGNvbG9yc1xyXG5cclxuJHBhbGUtY29sb3I6ICM4ODgyO1xyXG4kaW5kaWNhdGluZy1jb2xvcjogIzgwODA4MDtcclxuJG5vdGljZS1jb2xvcjogIzhlOWFhMztcclxuJGNvbG9yLWJyYW5kOiAjNjE0NGU1O1xyXG4kY29sb3ItZi1icmlnaHRlc3QgOiAjZmZmO1xyXG4kY29sb3ItZi1lcnJvciA6ICNlMzI5NTA7XHJcbiRjb2xvci1nb29kOiAjNGRkM2FiO1xyXG4kY29sb3ItYmFkOiAjZjU2ZTg1O1xyXG4kY29sb3ItbGluazogIzAwN2JmZjsiLCIkbWVkaWEtZGVza3RvcC1ydWxlICAgICAgICAgICAgICAgICAgICAgICA6IFwiKG1pbi13aWR0aDogXCIgKyAkbWVkaWEtZGVza3RvcC1zdGFydCArIFwiKVwiO1xyXG4kbWVkaWEtdGFibGV0LWxhbmRzY2FwZS1ydWxlICAgICAgICAgICAgICA6IFwiKG1pbi13aWR0aDogXCIgKyAkbWVkaWEtdGFibGV0LWxhbmRzY2FwZS1zdGFydCArIFwiKSBhbmQgKG1heC13aWR0aDogXCIgKyAkbWVkaWEtdGFibGV0LWxhbmRzY2FwZS1lbmQgKyBcIilcIjtcclxuJG1lZGlhLXRhYmxldC1ydWxlICAgICAgICAgICAgICAgICAgICAgICAgOiBcIihtaW4td2lkdGg6IFwiICsgJG1lZGlhLXRhYmxldC1wb3J0cmFpdC1zdGFydCArIFwiKSBhbmQgKG1heC13aWR0aDogXCIgKyAkbWVkaWEtdGFibGV0LWxhbmRzY2FwZS1lbmQgXCIpXCI7XHJcbiRtZWRpYS10YWJsZXQtcG9ydHJhaXQtcnVsZSAgICAgICAgICAgICAgIDogXCIobWluLXdpZHRoOiBcIiArICRtZWRpYS10YWJsZXQtcG9ydHJhaXQtc3RhcnQgKyBcIikgYW5kIChtYXgtd2lkdGg6IFwiICsgJG1lZGlhLXRhYmxldC1wb3J0cmFpdC1lbmQgKyBcIilcIjtcclxuJG1lZGlhLW1vYmlsZS1ydWxlICAgICAgICAgICAgICAgICAgICAgICAgOiBcIihtYXgtd2lkdGg6IFwiICsgJG1lZGlhLW1vYmlsZS1lbmQgKyBcIilcIjtcclxuJG1lZGlhLXRhYmxldC1sYW5kc2NhcGUtYW5kLWhpZ2hlci1ydWxlICAgOiBcIihtaW4td2lkdGg6IFwiICsgJG1lZGlhLXRhYmxldC1sYW5kc2NhcGUtc3RhcnQgKyBcIilcIjtcclxuJG1lZGlhLXRhYmxldC1sYW5kc2NhcGUtYW5kLWxvd2VyLXJ1bGUgICAgOiBcIihtYXgtd2lkdGg6IFwiICsgJG1lZGlhLXRhYmxldC1sYW5kc2NhcGUtZW5kICsgXCIpXCI7XHJcbiRtZWRpYS1leGNlcHQtbW9iaWxlLXJ1bGUgICAgICAgICAgICAgICAgIDogXCIobWluLXdpZHRoOiBcIiArICRtZWRpYS10YWJsZXQtcG9ydHJhaXQtc3RhcnQgKyBcIilcIjtcclxuJG1lZGlhLWV4Y2VwdC1kZXNrdG9wLXJ1bGUgICAgICAgICAgICAgICAgOiBcIihtYXgtd2lkdGg6IFwiICsgJG1lZGlhLXRhYmxldC1sYW5kc2NhcGUtZW5kICsgIFwiKVwiO1xyXG4kbWVkaWEtdGFibGV0LXBvcnRyYWl0LWFuZC1oaWdoZXItcnVsZSAgICA6IFwiKG1pbi13aWR0aDogXCIgKyAkbWVkaWEtdGFibGV0LXBvcnRyYWl0LXN0YXJ0ICsgIFwiKVwiO1xyXG4kbWVkaWEtdGFibGV0LXBvcnRyYWl0LWFuZC1sb3dlci1ydWxlICAgICA6IFwiKG1heC13aWR0aDogXCIgKyAkbWVkaWEtdGFibGV0LXBvcnRyYWl0LWVuZCArICBcIilcIjtcclxuXHJcblxyXG5AbWl4aW4gbWVkaWEtZGVza3RvcCB7XHJcbiAgQG1lZGlhICN7JG1lZGlhLWRlc2t0b3AtcnVsZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWVkaWEtdGFibGV0LWxhbmRzY2FwZSB7XHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldC1sYW5kc2NhcGUtcnVsZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWVkaWEtdGFibGV0IHtcclxuICBAbWVkaWEgI3skbWVkaWEtdGFibGV0LXJ1bGV9IHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIG1lZGlhLXRhYmxldC1wb3J0cmFpdCB7XHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldC1wb3J0cmFpdC1ydWxlfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYS1tb2JpbGUge1xyXG4gIEBtZWRpYSAjeyRtZWRpYS1tb2JpbGUtcnVsZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyAqIGFuZCBoaWdoZXJcclxuXHJcbkBtaXhpbiBtZWRpYS10YWJsZXQtbGFuZHNjYXBlLWFuZC1oaWdoZXIge1xyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXQtbGFuZHNjYXBlLWFuZC1oaWdoZXItcnVsZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWVkaWEtdGFibGV0LXBvcnRyYWl0LWFuZC1oaWdoZXIge1xyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXQtcG9ydHJhaXQtYW5kLWhpZ2hlci1ydWxlfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYS1leGNlcHQtbW9iaWxlIHtcclxuICBAbWVkaWEgI3skbWVkaWEtZXhjZXB0LW1vYmlsZS1ydWxlfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vLyAqIGFuZCBsb3dlclxyXG5cclxuQG1peGluIG1lZGlhLWV4Y2VwdC1kZXNrdG9wIHtcclxuICBAbWVkaWEgI3skbWVkaWEtZXhjZXB0LWRlc2t0b3AtcnVsZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWVkaWEtdGFibGV0LXBvcnRyYWl0LWFuZC1sb3dlciB7XHJcbiAgQG1lZGlhICN7JG1lZGlhLXRhYmxldC1wb3J0cmFpdC1hbmQtbG93ZXItcnVsZX0ge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbWVkaWEtdGFibGV0LWxhbmRzY2FwZS1hbmQtbG93ZXIge1xyXG4gIEBtZWRpYSAjeyRtZWRpYS10YWJsZXQtbGFuZHNjYXBlLWFuZC1sb3dlci1ydWxlfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vLyByZXRpbmFcclxuXHJcbkBtaXhpbiBtZWRpYS1yZXRpbmEge1xyXG4gICRyZXRpbmEtdmFyaWFibGU6IFwib25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuNSksIG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDE0NGRwaSlcIjtcclxuICBAbWVkaWEgI3skcmV0aW5hLXZhcmlhYmxlfSB7IEBjb250ZW50OyB9XHJcbn1cclxuXHJcbkBtaXhpbiBtZWRpYS1yZXRpbmEtM3gge1xyXG4gICRyZXRpbmEtdmFyaWFibGU6IFwib25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIuNSksIG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDI4OGRwaSlcIjtcclxuICBAbWVkaWEgI3skcmV0aW5hLXZhcmlhYmxlfSB7IEBjb250ZW50OyB9XHJcbn1cclxuXHJcbi8vIHdpZGdldFxyXG5AbWl4aW4gbWVkaWEtd2lkZ2V0IHtcclxuICBAbWVkaWEgKG1heC13aWR0aDogOTk5OTlweCkge1xyXG4gICAgQGNvbnRlbnRcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifV0pOwovLyBFeHBvcnRzCl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmxvY2FscyA9IHsKCSJzd2FwIjogImswZEFrams3LXpmNkc1YkhlUTZUVCIsCgkiZGFyayI6ICJfM3A3cUt6S0Z3VWkyLWlRREIxYUE2ayIsCgkic3dhcE1vYmlsZSI6ICJ6YkZJOUc3MFZyQlNuZ0JXV05iTmMiLAoJInN3YXBDb250YWluZXIiOiAiXzM0YXpNZFJ4MnZqSHBZc1RMRWRqZHUiLAoJInN3YXBEZXBvc2l0V2luZG93IjogIl8yX29iMC1WSmRVR2lOYWhEZGdUcEdGIiwKCSJ1bmZpbmlzaGVkSHJlZiI6ICJfMW5URDhjMktCZU5abFlvaUI4U2RQQiIsCgkicmVsb2FkVGV4dCI6ICJfM25fVUlHSUZqdFc5MmttMXhEbk5IeiIsCgkic3dhcENvbnRhaW5lckluZm8iOiAiXzNOZ0VySFJkazF4b29Vc2hCMUxOODgiLAoJImxpbmtUZXh0IjogIl8xNFVhaFRCQ0hvZTJxakRpN2VoWmJCIiwKCSJjYW5jZWxlZCI6ICJaWTZnN3FEZ3Z0djBtOFFTUVVKNkQiLAoJInJlZkhleCI6ICJfMzcwTi1MYm1hUUJDaTZLWl9DUXRBcSIsCgkiaW5jbHVkZWQiOiAiXzFBajhVUWhVdk94U1RoVEQ4Q1VPQTkiLAoJInN3YXBJbmZvIjogIl8xNW1MUzJBVU1MeE51V0FCaHMtVWt2IiwKCSJzd2FwSW5mb01vYmlsZSI6ICJhVmFnX09hWjBvYXlGTmlWbU1HSyIsCgkic3dhcEdvTnVtYmVyIjogIl8xOXVOSGM4X3Z2OW9sYUtDZF9kb2pKIiwKCSJzd2FwV3JhcHBlciI6ICJ6SThiUlR0OTRyYmFUUVZlWGRGTmUiLAoJImJpdGNvaW5TY3JpcHQiOiAiXzNsc0ZsZ3Y4czhoMG85dkxrNHJJSXQiLAoJIm9ubGluZUluZGljYXRvciI6ICJMTFhpNTg0VUF2Q0I3ZmhGeTlHMkYiLAoJIm9ubGluZSI6ICJLUUpuU1BhYzhPbTd2MWtwUFFOZWYiLAoJIm9mZmxpbmUiOiAiXzNGLXZmM1g5Ym1BdlFIT0FVMnpKOGwiLAoJImxvYWRlckhvbGRlciI6ICJFVHFKWlozY19RWEtBUS00SThHbEYiLAoJInRvcFVwTGluayI6ICJfMzJjTFFyWXJmODRyX2FDb1FyM2hNbSIsCgkidG9wIjogIl8yYmU3UHNKX1daLThxX2J6Q042UTM0IiwKCSJxckltZyI6ICJnYkozalNtMk8xaWJVZ0wzbXRYTzciLAoJIm1lc3NhZ2UiOiAiXzNVUzJha2V1QXc0cWE2X2hKVzMwYjQiLAoJImJ0Y01lc3NhZ2UiOiAiXzJEUXR4ZHVGQTd5d0tYMEdweTkza3AiLAoJInFyIjogIl8zaG1NMDFFSG9NREJUR3NnNXl4ZTlQIiwKCSJsaW5rVHJhbnNhY3Rpb25zIjogIl8yRU1mSHJfandCdldreXU0MHlOV25rIiwKCSJzZW5kTWVzc2FnZSI6ICJyZlo3Z1lmNHFuaEIxem16WGozSnUiLAoJImluZm9XcmFwcGVyIjogIl8xVlh3czk3aFR5XzZQbFpBeExSRllrIiwKCSJsb2dIaWRlIjogIl8ydkI0T2VUUDVXOUNPOXJRVmhVVHA5IiwKCSJsb2NrVGltZSI6ICJDR2x1YlFIbTltYld6WUxPYlR2d2UiLAoJImNvcHlUZXh0IjogIl8xTGdtN2VJYkZzU1hEUEFvN1dCUkhYIiwKCSJzd2FwVGV4dCI6ICJfMkNYeURZTTg4UGp5TkVabHBCZEVZSCIsCgkiY2FyZHNDb250YWluZXIiOiAicWxreHFTOGxjY0pVTHJyaWw3YnJCIiwKCSJwcmVzc0N0cmxUZXh0IjogIk1ka1FYNlRQSzdjdWg0cEUzLVNuaSIsCgkicHJlc3NDdHJsVGV4dEFjdGl2ZSI6ICJfM3YzTG9PY0psSmZIYmZTVUp5YjB4UiIsCgkibGlua0FkZHJlc3MiOiAiUXNKZU82bUpfWmRjSW1BOWhIcG0yIiwKCSJidXlXaXRoQ2FyZCI6ICJfM1NzbXRPdktNSU9lQUJqbGVrV0gyVCIsCgkiZmEtY29weS1pbiI6ICJfMTQ2UGh0R0JmUHpiR3pPakRCSFFaaCIsCgkiY29taW5nU29vbiI6ICJfMnBrTm4xTTJlSUhsUTRabVdmVVh1cSIsCgkieW91ckJhbGFuY2UiOiAiXzNPVlUzdEMxeTZvdkdBVkpudXE2WXkiLAoJImZyb21DbGllbnQiOiAiXzJMOHpKdUNsUHhua2s5NjlBVXFFc1kiLAoJInVuY29uZkJhbGFuY2UiOiAiUVU4SFBNMWtsTnZBV1ZjbVY5RHU2IiwKCSJnb2hvbWUtaG9sZGVyIjogInBibGxJengtM08xVlYwRnk2V1FHQyIsCgkiYnV0dG9uIjogInhyX3NXdTQ5anlhOHhhVnluRmZQLSIsCgkicHNldWRvbGluayI6ICJfM1ZtcGxZWS0yWEktd1RLVUFoSTd2cCIsCgkidHJhbnNhY3Rpb24iOiAiXzNDazhDeXlJamZ4YV9weEdVanNMZ08iLAoJImluZm9ybWF0aW9uIjogIl8xbXpIVGN0Q2RlY3lXT296U0tRdGZIIiwKCSJzd2FwSW5mb09wZW4iOiAiXzExS2t0MTJHSTQ1MHBwT1ZGUEV6QTMiLAoJImljb24iOiAiXzJDdEM0NzRCbGNMZmVOOWVRNGNIUlQiCn07CmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fOwo="}]}