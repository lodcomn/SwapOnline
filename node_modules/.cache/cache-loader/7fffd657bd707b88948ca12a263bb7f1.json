{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.orders\\SwapOrders.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.orders\\SwapOrders.ts","mtime":1614850242100},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.orders/SwapOrders.ts"],"names":["debug","BigNumber","Collection","ServiceInterface","util","constants","SwapRoom","aggregation","events","Order","visibleMakers","checkIncomeOrderFormat","order","buyCurrency","typeforce","isCoinName","sellCurrency","format","id","owner","peer","reputation","t","maybe","isNumeric","result","Object","keys","COINS","forEach","key","address","isCoinAddress","publicKey","isPublicKey","sellAmount","buyAmount","exchangeRate","isProcessing","isRequested","isPartial","isTurbo","isHidden","destination","ownerAddress","participantAddress","isValid","check","checkIncomeOrderOwner","fromPeer","checkIncomeOrderWhitelisted","length","includes","checkIncomeOrder","isFormatValid","isOwnerValid","isOwnerWhitelisted","SwapOrders","_persistMyOrders","items","_sendOrdersToPeer","myOrders","getMyOrders","map","item","pullProps","app","services","room","sendMessagePeer","event","data","orders","peerOrders","getPeerOrders","_handleRemove","filteredOrders","filter","getByKey","_handleMultipleCreate","_handleCreate","orderId","_serviceName","_dependsOn","getUniqueId","on","_handleReady","_handleUserOnline","_handleUserOffline","_handleNewOrders","_handleGiveOrders","_handleNewOrder","_handleRemoveOrder","_handleHideOrders","_handleShowOrders","Date","now","orderData","console","log","rest","buy","toUpperCase","sell","roundedBuyAmount","dp","COIN_DATA","precision","roundedSellAmount","append","_create","dispatch","newOrders","push","removeByKey","err","error","env","storage","setItem","getItem","auth","getPublicData","_saveMyOrders","sendMessageRoom","myHiddenOrders","callback","unsubscribe","eventName","handler","subscribe"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport debug from 'debug'\r\nimport BigNumber from 'bignumber.js'\r\nimport SwapApp, { Collection, ServiceInterface, util, constants } from 'swap.app'\r\nimport SwapRoom from 'swap.room'\r\nimport aggregation from './aggregation'\r\nimport events from './events'\r\nimport Order from './Order'\r\nimport visibleMakers from 'common/whitelists/visibleMakers'\r\n\r\n\r\nconst checkIncomeOrderFormat = (order) => {\r\n  // Skip unknown currencies\r\n  if (order && order.buyCurrency && !util.typeforce.isCoinName(order.buyCurrency)) {\r\n    return false\r\n  }\r\n  if (order && order.sellCurrency && !util.typeforce.isCoinName(order.sellCurrency)) {\r\n    return false\r\n  }\r\n\r\n  const format = {\r\n    id: '?String',\r\n    owner: {\r\n      peer: 'String',\r\n      reputation: util.typeforce.t.maybe(util.typeforce.isNumeric),\r\n      ...(() => {\r\n        const result = {}\r\n        Object.keys(constants.COINS).forEach((key) => {\r\n          result[key] = util.typeforce.t.maybe({\r\n            address: util.typeforce.isCoinAddress[constants.COINS[key]],\r\n            publicKey: util.typeforce.isPublicKey[constants.COINS[key]],\r\n          })\r\n        })\r\n        return result\r\n      })(),\r\n    },\r\n    sellCurrency: util.typeforce.isCoinName,\r\n    sellAmount: util.typeforce.isNumeric,\r\n    buyCurrency: util.typeforce.isCoinName,\r\n    buyAmount: util.typeforce.isNumeric,\r\n    exchangeRate: util.typeforce.t.maybe(util.typeforce.isNumeric),\r\n    isProcessing: '?Boolean',\r\n    isRequested: '?Boolean',\r\n    isPartial: '?Boolean',\r\n    isTurbo: '?Boolean',\r\n    isHidden: '?Boolean',\r\n    destination: util.typeforce.t.maybe({\r\n      ownerAddress: '?String',\r\n      participantAddress: '?String',\r\n    }),\r\n  }\r\n\r\n  const isValid = util.typeforce.check(format, order, true)\r\n\r\n  if (!isValid) {\r\n    debug('swap.core:orders')('Wrong income order format. Excepted:', format, 'got:', order)\r\n  }\r\n\r\n  return isValid\r\n}\r\n\r\nconst checkIncomeOrderOwner = ({ owner: { peer } }, fromPeer) =>\r\n  peer === fromPeer\r\n\r\n\r\nconst checkIncomeOrderWhitelisted = ({ owner: { peer } }) => {\r\n  return !visibleMakers.length || visibleMakers.includes(peer)\r\n}\r\n\r\nconst checkIncomeOrder = (order, fromPeer) => {\r\n  const isFormatValid = checkIncomeOrderFormat(order)\r\n  const isOwnerValid = checkIncomeOrderOwner(order, fromPeer)\r\n  const isOwnerWhitelisted = checkIncomeOrderWhitelisted(order)\r\n\r\n  return isFormatValid && isOwnerValid && isOwnerWhitelisted\r\n}\r\n\r\n\r\nclass SwapOrders extends aggregation(ServiceInterface, Collection) {\r\n\r\n  _serviceName: string\r\n  getUniqueId: any\r\n  _dependsOn: any\r\n\r\n  //@\r\n  static get name() {\r\n    return 'orders'\r\n  }\r\n\r\n  constructor() {\r\n    super()\r\n\r\n    this._serviceName = 'orders'\r\n    this._dependsOn   = [ SwapRoom ]\r\n\r\n    this.getUniqueId = () => {}\r\n  }\r\n\r\n  initService() {\r\n    this.app.services.room.on('ready', this._handleReady)\r\n    this.app.services.room.on('user online', this._handleUserOnline)\r\n    this.app.services.room.on('user offline', this._handleUserOffline)\r\n    this.app.services.room.on('new orders', this._handleNewOrders)\r\n    this.app.services.room.on('give orders', this._handleGiveOrders)\r\n    this.app.services.room.on('new order', this._handleNewOrder)\r\n    this.app.services.room.on('remove order', this._handleRemoveOrder)\r\n    this.app.services.room.on('hide orders', this._handleHideOrders)\r\n    this.app.services.room.on('show orders', this._handleShowOrders)\r\n\r\n    this.getUniqueId = (() => {\r\n      let id = Date.now()\r\n      return () => `${this.app.services.room.peer}-${++id}`\r\n    })()\r\n  }\r\n\r\n  _handleReady = () => {\r\n    this._persistMyOrders()\r\n  }\r\n\r\n  _handleHideOrders = ({ fromPeer }) => {\r\n    this.items.forEach((order) => {\r\n      if (order && order.owner && order.owner.peer === fromPeer) {\r\n        order.isHidden = true\r\n      }\r\n    })\r\n  }\r\n\r\n  _handleShowOrders = ({ fromPeer }) => {\r\n    this.items.forEach((order) => {\r\n      if (order && order.owner && order.owner.peer === fromPeer) {\r\n        order.isHidden = false\r\n      }\r\n    })\r\n  }\r\n\r\n  _handleGiveOrders = ({ fromPeer }) => {\r\n    this._sendOrdersToPeer(fromPeer)\r\n  }\r\n\r\n  _sendOrdersToPeer = (peer) => {\r\n    let myOrders = this.getMyOrders()\r\n    if (myOrders.length) {\r\n      // clean orders from other additional props\r\n      myOrders = myOrders.map((item) => util.pullProps(\r\n        item,\r\n        'id',\r\n        'owner',\r\n        'buyCurrency',\r\n        'sellCurrency',\r\n        'buyAmount',\r\n        'exchangeRate',\r\n        'sellAmount',\r\n        'isRequested',\r\n        'isProcessing',\r\n        'isPartial',\r\n        'isTurbo',\r\n        'isHidden',\r\n        'destination',\r\n      ))\r\n\r\n      this.app.services.room.sendMessagePeer(peer, {\r\n        event: 'new orders',\r\n        data: {\r\n          orders: myOrders,\r\n        },\r\n      })\r\n    }\r\n  }\r\n  _handleUserOnline = (peer) => {\r\n    this._sendOrdersToPeer(peer)\r\n    this.app.services.room.sendMessagePeer(peer, {\r\n      event: 'give orders',\r\n      data: {},\r\n    })\r\n  }\r\n\r\n  _handleUserOffline = (peer) => {\r\n    const peerOrders = this.getPeerOrders(peer)\r\n\r\n    if (peerOrders.length) {\r\n      peerOrders.forEach(({ id }) => {\r\n        this._handleRemove(id)\r\n      })\r\n    }\r\n  }\r\n\r\n  _handleNewOrders = ({ fromPeer, orders }) => {\r\n    // ductape to check if such orders already exist\r\n    const filteredOrders = orders.filter(({ id, owner: { peer } }) => (\r\n      !this.getByKey(id) && peer === fromPeer\r\n    ))\r\n\r\n    this._handleMultipleCreate({ orders: filteredOrders, fromPeer })\r\n  }\r\n\r\n  _handleNewOrder = ({ fromPeer, order }) => {\r\n    if (order && order.owner && order.owner.peer === fromPeer) {\r\n      if (checkIncomeOrder(order, fromPeer)) {\r\n        this._handleCreate(order)\r\n      }\r\n    }\r\n  }\r\n\r\n  _handleRemoveOrder = ({ fromPeer, orderId }) => {\r\n    const order = this.getByKey(orderId)\r\n\r\n    if (order && order.owner && order.owner.peer === fromPeer) {\r\n      this._handleRemove(orderId)\r\n    }\r\n  }\r\n\r\n  _persistMyOrders() {\r\n    this.getMyOrders().forEach((orderData) => {\r\n      this._handleCreate(orderData)\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {object} data\r\n   * @param {string} data.id\r\n   * @param {object} data.owner\r\n   * @param {string} data.owner.peer\r\n   * @param {number} data.owner.reputation\r\n   * @param {object} data.owner.<currency>\r\n   * @param {string} data.owner.<currency>.address\r\n   * @param {string} data.owner.<currency>.publicKey\r\n   * @param {string} data.buyCurrency\r\n   * @param {string} data.sellCurrency\r\n   * @param {number} data.buyAmount\r\n   * @param {number} data.sellAmount\r\n   * @param {boolean} data.isProcessing\r\n   * @param {boolean} data.isRequested\r\n   */\r\n  _create(data) {\r\n    console.log('>>> _create() data =', data)\r\n    const { id, buyAmount, sellAmount, buyCurrency, sellCurrency, ...rest } = data\r\n\r\n    const buy = buyCurrency.toUpperCase()\r\n    const sell = sellCurrency.toUpperCase()\r\n    // Error in the bottom line: Cannot read property 'precision' of undefined\r\n    const roundedBuyAmount = new BigNumber(buyAmount).dp(constants.COIN_DATA[buy].precision)\r\n    const roundedSellAmount = new BigNumber(sellAmount).dp(constants.COIN_DATA[sell].precision)\r\n\r\n    const order = new Order(this.app, this, {\r\n      id:           id || this.getUniqueId(),\r\n      buyAmount:    roundedBuyAmount,\r\n      sellAmount:   roundedSellAmount,\r\n      buyCurrency:  buy,\r\n      sellCurrency: sell,\r\n      ...rest,\r\n    })\r\n\r\n    this.append(order, order.id)\r\n\r\n    return order\r\n  }\r\n\r\n  _handleCreate(data) {\r\n    const order = this._create(data)\r\n\r\n    if (order) {\r\n      events.dispatch('new order', order)\r\n    }\r\n  }\r\n\r\n  _handleMultipleCreate({ orders, fromPeer }) {\r\n    const newOrders = []\r\n\r\n    orders.forEach((data) => {\r\n      if (checkIncomeOrder(data, fromPeer)) {\r\n        const order = this._create(data)\r\n\r\n        newOrders.push(order)\r\n      }\r\n    })\r\n\r\n    if (newOrders.length) {\r\n      events.dispatch('new orders', newOrders)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} orderId\r\n   */\r\n  _handleRemove(orderId) {\r\n    try {\r\n      const order = this.getByKey(orderId)\r\n\r\n      if (order) {\r\n        this.removeByKey(orderId)\r\n        events.dispatch('remove order', order)\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  _saveMyOrders() {\r\n    let myOrders = this.items.filter(({ owner: { peer } }) => peer === this.app.services.room.peer)\r\n\r\n    // clean orders from other additional props\r\n    // TODO need to add functionality to sync `requests` for users who going offline / online\r\n    // problem: when I going online and persisting my orders need to show only online users requests,\r\n    // but then user comes online need to change status. Ofc we can leave this bcs developers can do this themselves\r\n    // with filters - skip requests where user is offline, but it looks like not very good\r\n    myOrders = myOrders.map((item) => util.pullProps(\r\n      item,\r\n      'id',\r\n      'owner',\r\n      'buyCurrency',\r\n      'sellCurrency',\r\n      'buyAmount',\r\n      'sellAmount',\r\n      'exchangeRate',\r\n      'participant',\r\n      'requests',\r\n      'isRequested',\r\n      'isProcessing',\r\n      'isPartial',\r\n      'isTurbo',\r\n      'isHidden',\r\n      'destination',\r\n    ))\r\n\r\n    this.app.env.storage.setItem('myOrders', myOrders)\r\n  }\r\n\r\n  getMyOrders() {\r\n    return this.app.env.storage.getItem('myOrders') || []\r\n  }\r\n\r\n  getPeerOrders(peer) {\r\n    return this.items.filter(({ owner }) => peer === owner.peer)\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {object} data\r\n   * @param {string} data.buyCurrency\r\n   * @param {string} data.sellCurrency\r\n   * @param {number} data.buyAmount\r\n   * @param {number} data.sellAmount\r\n   */\r\n  create(data) {\r\n    console.log('>>> create() data =', data)\r\n    const order = this._create({\r\n      ...data,\r\n      owner: this.app.services.auth.getPublicData(),\r\n    })\r\n    console.log('created order:', order)\r\n    this._saveMyOrders()\r\n\r\n    this.app.services.room.sendMessageRoom({\r\n      event: 'new order',\r\n      data: {\r\n        order: util.pullProps(\r\n          order,\r\n          'id',\r\n          'owner',\r\n          'buyCurrency',\r\n          'exchangeRate',\r\n          'sellCurrency',\r\n          'buyAmount',\r\n          'sellAmount',\r\n          'isRequested',\r\n          'isProcessing',\r\n          'isPartial',\r\n          'isTurbo',\r\n          'isHidden',\r\n          'destination',\r\n        ),\r\n      },\r\n    })\r\n\r\n    return order\r\n  }\r\n\r\n  hideMyOrders() {\r\n    this.items.forEach((order) => {\r\n      if (order && order.owner && order.owner.peer === this.app.services.room.peer) {\r\n        order.isHidden = true\r\n      }\r\n    })\r\n    this._saveMyOrders()\r\n    this.app.services.room.sendMessageRoom({\r\n      event: 'hide orders',\r\n      data: {},\r\n    })\r\n  }\r\n\r\n  showMyOrders() {\r\n    this.items.forEach((order) => {\r\n      if (order && order.owner && order.owner.peer === this.app.services.room.peer) {\r\n        order.isHidden = false\r\n      }\r\n    })\r\n    this._saveMyOrders()\r\n    this.app.services.room.sendMessageRoom({\r\n      event: 'show orders',\r\n      data: {},\r\n    })\r\n  }\r\n\r\n  hasHiddenOrders() {\r\n    let myHiddenOrders = this.items.filter(({ isHidden, owner: { peer } }) => (peer === this.app.services.room.peer && isHidden))\r\n    return !!myHiddenOrders.length\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} orderId\r\n   */\r\n  remove(orderId) {\r\n    this.removeByKey(orderId)\r\n    this.app.services.room.sendMessageRoom({\r\n      event: 'remove order',\r\n      data: {\r\n        orderId,\r\n      },\r\n    })\r\n    this._saveMyOrders()\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} event\r\n   * @param {String} peer\r\n   * @param {Object} data\r\n   * @param {function} callback\r\n   */\r\n  requestToPeer(event, peer, data, callback) {\r\n    this.app.services.room.sendMessagePeer(peer, {\r\n      event,\r\n      data,\r\n    })\r\n\r\n    if (!callback) {\r\n      return\r\n    }\r\n\r\n    this.app.services.room.on('accept request', function ({ fromPeer, orderId }) {\r\n      debug('swap.core:orders')('requestToPeer accept request', fromPeer)\r\n      if (peer === fromPeer) {\r\n        this.unsubscribe()\r\n\r\n        debug('swap.core:orders')('requestToPeer IF')\r\n\r\n        callback(orderId)\r\n      }\r\n    })\r\n\r\n    this.app.services.room.on('decline request', function ({ fromPeer }) {\r\n      if (peer === fromPeer) {\r\n        this.unsubscribe()\r\n\r\n        callback(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  on(eventName, handler) {\r\n    events.subscribe(eventName, handler)\r\n    return this\r\n  }\r\n\r\n  off(eventName, handler) {\r\n    events.unsubscribe(eventName, handler)\r\n    return this\r\n  }\r\n}\r\n\r\n\r\nexport default SwapOrders\r\n"]}]}