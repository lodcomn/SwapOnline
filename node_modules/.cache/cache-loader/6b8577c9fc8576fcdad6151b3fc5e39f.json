{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Multisign\\Btc\\Btc.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Multisign\\Btc\\Btc.tsx","mtime":1614852456817},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Multisign/Btc/Btc.tsx"],"names":["React","Fragment","PureComponent","PropTypes","connect","constants","localisedUrl","FormattedMessage","injectIntl","actions","links","getFullOrigin","Button","CSSModules","styles","SwapApp","Btc","btcData","user","data","allowMultiple","props","action","state","privateKey","publicKey","btcmultisig","addBtcMultisigKey","core","markCoinAsVisible","setState","modals","open","MultisignJoinLink","callback","handleGoToWallet","showCloseButton","_data","console","log","fromPeer","peer","shared","services","room","unsubscribe","handleOnlineWalletConnect","clearTimeout","timerWaitOnlineJoin","connectWallet","myPublicKey","waitCreateWallet","pubsubRoom","waitPeer","subscribe","sendMessagePeer","event","checkKey","setTimeout","SaveMnemonicModal","onClose","mnemonic","localStorage","getItem","privateKeyNames","twentywords","mnemonicSaved","history","locale","intl","getAuthData","address","push","txRaw","invoice","isConfirming","signMultiSign","signedTX","broadcastTx","txID","invoices","markInvoice","wallet","walletBalance","addWalletEnabled","match","params","pathname","location","indexOf","toLowerCase","notFound","length","walletData","login_USER","fetchBalance","balance","toString","joinLink","multisign","onReady","dataParts","split","BtcMultisignConfirmTx","txId","home","parseRawTX","txData","debugShowTXB","debugShowInput","debugShowOutput","handleAddWallet","handleSaveMnemonic","JSON","stringify","input","output","handleConfirm","object","isRequired"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React, { Fragment, PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { isMobile } from 'react-device-detect'\r\nimport { connect } from 'redaction'\r\nimport { constants } from 'helpers'\r\nimport { localisedUrl } from 'helpers/locale'\r\nimport { FormattedMessage, injectIntl } from 'react-intl'\r\nimport { withRouter } from 'react-router-dom'\r\nimport actions from 'redux/actions'\r\nimport { links } from 'helpers'\r\nimport { getFullOrigin } from 'helpers/links'\r\nimport Button from 'components/controls/Button/Button'\r\n\r\nimport moment from 'moment'\r\n\r\nimport CSSModules from 'react-css-modules'\r\nimport styles from './Btc.scss'\r\nimport SwapApp from 'swap.app'\r\nimport config from 'app-config'\r\n\r\n@connect(({ user: { btcData } }) => {\r\n  return {\r\n    data: btcData,\r\n  }\r\n})\r\n@injectIntl\r\n@CSSModules(styles, { allowMultiple: true })\r\nexport default class Btc extends PureComponent<any, any> {\r\n  timerWaitOnlineJoin: any\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n    location: PropTypes.object,\r\n    intl: PropTypes.object.isRequired,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    console.log('Btc mulsign connected')\r\n\r\n    const mnemonic = localStorage.getItem(constants.privateKeyNames.twentywords)\r\n    const mnemonicSaved = mnemonic === `-`\r\n\r\n    this.timerWaitOnlineJoin = false\r\n    this.state = {\r\n      action: 'none',\r\n      wallet: {},\r\n      walletBalance: 0,\r\n      publicKey: '',\r\n      mnemonicSaved,\r\n      addWalletEnabled: false,\r\n    }\r\n  }\r\n\r\n  async componentWillMount() {\r\n    let {\r\n      match: {\r\n        params: { action, data, peer },\r\n      },\r\n      intl: { locale },\r\n      history,\r\n      location: { pathname },\r\n      data: { privateKey },\r\n    } = this.props\r\n\r\n    if (\r\n      !action ||\r\n      ['join', 'connect', 'confirm', 'confirminvoice'].indexOf(action.toLowerCase()) === -1\r\n    ) {\r\n      history.push(localisedUrl(locale, links.notFound))\r\n      return\r\n    }\r\n\r\n    action = action.toLowerCase()\r\n\r\n    if (action === 'join' || action === 'connect') {\r\n      if (data && data.length == 66) {\r\n        const publicKey = data\r\n        const walletData = actions.btcmultisig.login_USER(privateKey, publicKey, true)\r\n\r\n        if (!walletData) {\r\n          history.push(localisedUrl(locale, links.notFound))\r\n          return\r\n        }\r\n\r\n        const balance = await actions.btcmultisig.fetchBalance(walletData.address)\r\n        const myPublicKey = this.props.data.publicKey.toString('hex')\r\n\r\n        this.setState({\r\n          action,\r\n          wallet: walletData,\r\n          walletBalance: balance,\r\n          peer,\r\n          privateKey,\r\n          publicKey,\r\n          myPublicKey,\r\n          joinLink: `${getFullOrigin()}${links.multisign}/btc/connect/${myPublicKey}`,\r\n        })\r\n        actions.pubsubRoom.onReady(() => {\r\n          this.setState({\r\n            addWalletEnabled: true,\r\n          })\r\n        })\r\n      } else {\r\n        history.push(localisedUrl(locale, links.notFound))\r\n      }\r\n    }\r\n    if (action === 'confirm' || action === 'confirminvoice') {\r\n      if (data && data.length) {\r\n        let txRaw = data\r\n        let invoice = false\r\n        if (action === 'confirminvoice') {\r\n          const dataParts = data.split('|')\r\n          if (dataParts.length === 2) {\r\n            invoice = dataParts[0]\r\n            txRaw = dataParts[1]\r\n          } else {\r\n            console.log('Bad tx raw and invoiceid data')\r\n          }\r\n        }\r\n        if (txRaw.length === 64) {\r\n          setTimeout(() => {\r\n            actions.modals.open(constants.modals.BtcMultisignConfirmTx, {\r\n              txId: txRaw,\r\n              showCloseButton: true,\r\n              onClose: () => {\r\n                history.push(localisedUrl(locale, links.home))\r\n              },\r\n            })\r\n          }, 100)\r\n        } else {\r\n          try {\r\n            this.setState(\r\n              {\r\n                action,\r\n                txData: await actions.btcmultisig.parseRawTX(txRaw),\r\n                invoice,\r\n                txRaw: txRaw,\r\n              },\r\n              () => {\r\n                setTimeout(() => {\r\n                  actions.modals.open(constants.modals.BtcMultisignConfirmTx, {\r\n                    txData: txRaw,\r\n                    showCloseButton: false,\r\n                    onClose: () => {\r\n                      history.push(localisedUrl(locale, links.home))\r\n                    },\r\n                  })\r\n                }, 100)\r\n              }\r\n            )\r\n          } catch (e) {\r\n            console.log('Bad tx raw data')\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentWillUnmount() {\r\n    SwapApp.shared().services.room.unsubscribe(\r\n      'btc multisig join ready',\r\n      this.handleOnlineWalletConnect\r\n    )\r\n    clearTimeout(this.timerWaitOnlineJoin)\r\n  }\r\n\r\n  connectWallet = (action) => {\r\n    const { privateKey, publicKey } = this.state\r\n    actions.btcmultisig.addBtcMultisigKey(publicKey, true)\r\n\r\n    actions.core.markCoinAsVisible('BTC (Multisig)', true)\r\n\r\n    this.setState({\r\n      action: action === 'join' ? 'linkready' : 'ready',\r\n    })\r\n    if (action === 'join') {\r\n      actions.modals.open(constants.modals.MultisignJoinLink, {\r\n        action: `connect`,\r\n        callback: () => {\r\n          this.handleGoToWallet()\r\n        },\r\n        showCloseButton: false,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleOnlineWalletConnect = async (_data) => {\r\n    console.log('btc multisig join ready', _data)\r\n    const { fromPeer, data } = _data\r\n    const { peer } = this.state\r\n    if (fromPeer === peer) {\r\n      SwapApp.shared().services.room.unsubscribe(\r\n        'btc multisig join ready',\r\n        this.handleOnlineWalletConnect\r\n      )\r\n      clearTimeout(this.timerWaitOnlineJoin)\r\n      this.connectWallet('ready')\r\n    }\r\n  }\r\n\r\n  handleAddWallet = async () => {\r\n    const { action, myPublicKey, publicKey, peer } = this.state\r\n\r\n    //If peer is online - try connect via pubsubRoom\r\n\r\n    this.setState({\r\n      waitCreateWallet: true,\r\n    })\r\n\r\n    actions.pubsubRoom.waitPeer(\r\n      peer,\r\n      () => {\r\n        this.setState({\r\n          action: 'onlinejoin',\r\n        })\r\n        SwapApp.shared().services.room.subscribe(\r\n          'btc multisig join ready',\r\n          this.handleOnlineWalletConnect\r\n        )\r\n        SwapApp.shared().services.room.sendMessagePeer(peer, {\r\n          event: 'btc multisig join',\r\n          data: {\r\n            publicKey: myPublicKey,\r\n            checkKey: publicKey,\r\n          },\r\n        })\r\n        this.timerWaitOnlineJoin = setTimeout(() => {\r\n          SwapApp.shared().services.room.unsubscribe(\r\n            'btc multisig join ready',\r\n            this.handleOnlineWalletConnect\r\n          )\r\n          this.connectWallet(action)\r\n        }, 10000)\r\n      },\r\n      () => {\r\n        this.connectWallet(action)\r\n      },\r\n      10000\r\n    )\r\n  }\r\n\r\n  handleSaveMnemonic = async () => {\r\n    actions.modals.open(constants.modals.SaveMnemonicModal, {\r\n      onClose: () => {\r\n        const mnemonic = localStorage.getItem(constants.privateKeyNames.twentywords)\r\n        const mnemonicSaved = mnemonic === `-`\r\n\r\n        this.setState({\r\n          mnemonicSaved,\r\n        })\r\n      },\r\n    })\r\n  }\r\n\r\n  handleGoToWallet = async () => {\r\n    const {\r\n      history,\r\n      intl: { locale },\r\n    } = this.props\r\n\r\n    const { address } = actions.user.getAuthData('btcMultisigUser')\r\n    history.push(localisedUrl(locale, `/btc/${address}`))\r\n  }\r\n\r\n  handleConfirm = async () => {\r\n    const { txRaw, invoice } = this.state\r\n    this.setState({ isConfirming: true })\r\n    //@\r\n    const signedTX = await actions.btcmultisig.signMultiSign(txRaw)\r\n    const txID = await actions.btcmultisig.broadcastTx(signedTX)\r\n    if (invoice) {\r\n      // @ToDo - payer address\r\n      //@\r\n      await actions.invoices.markInvoice(invoice, 'ready', txID)\r\n    }\r\n    this.setState({\r\n      txID,\r\n      action: 'confirmready',\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      action,\r\n\r\n      wallet,\r\n      walletBalance,\r\n      joinLink,\r\n      addWalletEnabled,\r\n      waitCreateWallet,\r\n\r\n      debugShowTXB,\r\n      debugShowInput,\r\n      debugShowOutput,\r\n\r\n      mnemonicSaved,\r\n    } = this.state\r\n\r\n    return (\r\n      <section>\r\n        {action === 'onlinejoin' && (\r\n          <Fragment>\r\n            <h1>\r\n              <FormattedMessage\r\n                id=\"BTCMS_CreateWalletTitle\"\r\n                defaultMessage=\"Создание BTC-multisignature кошелька\"\r\n              />\r\n            </h1>\r\n            <h3>\r\n              <FormattedMessage\r\n                id=\"BTCMS_WaitOtherSide\"\r\n                defaultMessage=\"Ожидание второй стороны...\"\r\n              />\r\n            </h3>\r\n          </Fragment>\r\n        )}\r\n        {(action === 'join' || action === 'connect') && (\r\n          <Fragment>\r\n            <h1>\r\n              <FormattedMessage\r\n                id=\"BTCMS_CreateWalletTitle\"\r\n                defaultMessage=\"Создание BTC-multisignature кошелька\"\r\n              />\r\n            </h1>\r\n\r\n            <div>\r\n              <label>\r\n                <FormattedMessage id=\"BTCMS_WalletAddress\" defaultMessage=\"Адрес кошелька:\" />\r\n              </label>\r\n              <strong>{wallet.address}</strong>\r\n            </div>\r\n            <div>\r\n              <label>\r\n                <FormattedMessage id=\"BTCMS_WalletBalance\" defaultMessage=\"Баланс\" />\r\n              </label>\r\n              <strong> {walletBalance} BTC</strong>\r\n            </div>\r\n            {mnemonicSaved ? (\r\n              <>\r\n                {addWalletEnabled ? (\r\n                  waitCreateWallet ? (\r\n                    <Button brand>\r\n                      <FormattedMessage\r\n                        id=\"BTCMS_CreateWalletWait\"\r\n                        defaultMessage=\"Создание кошелька... Подождите немного\"\r\n                      />\r\n                    </Button>\r\n                  ) : (\r\n                    <Button brand onClick={this.handleAddWallet}>\r\n                      <FormattedMessage\r\n                        id=\"BTCMS_CreateWalletAdd\"\r\n                        defaultMessage=\"Добавить этот кошелек\"\r\n                      />\r\n                    </Button>\r\n                  )\r\n                ) : (\r\n                  <Button brand>\r\n                    <FormattedMessage\r\n                      id=\"BTCMS_CreateWalletLoading\"\r\n                      defaultMessage=\"Загрузка... Подождите немного\"\r\n                    />\r\n                  </Button>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <div>\r\n                  <strong>\r\n                    <FormattedMessage\r\n                      id=\"BTCMS_YouNeedSaveMnemonic\"\r\n                      defaultMessage=\"Для активации btc-multisig вы должны сохранить 12 слов\"\r\n                    />\r\n                  </strong>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    <FormattedMessage\r\n                      id=\"BTCMS_SaveYourMnemonic\"\r\n                      defaultMessage=\"Пожалуйста сохраните свою секретную фразу.\"\r\n                    />\r\n                  </label>\r\n                </div>\r\n                <Button brand onClick={this.handleSaveMnemonic}>\r\n                  <FormattedMessage\r\n                    id=\"BTCMS_SaveMnemonicButton\"\r\n                    defaultMessage=\"Сохранить секретную фразу\"\r\n                  />\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Fragment>\r\n        )}\r\n        {!mnemonicSaved && (\r\n          <div styleName=\"descritonText\">\r\n            <FormattedMessage\r\n              id=\"BTCMS_CreateWalletLoading_descroptio\"\r\n              defaultMessage=\"Funds sent to this wallet cannot be spent without your confirmation (please save your private 12 words passphrase)\"\r\n            />\r\n          </div>\r\n        )}\r\n        {\r\n          /*action=='confirm' ||*/ action === 'confirminvoice' && (\r\n            <Fragment>\r\n              <h1>\r\n                <FormattedMessage\r\n                  id=\"BTCMS_ConfirmTxTitle\"\r\n                  defaultMessage=\"Подтверждение транзакции\"\r\n                />\r\n              </h1>\r\n              <h3>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ debugShowInput: !debugShowInput })\r\n                  }}\r\n                >\r\n                  <FormattedMessage id=\"BTCMS_ConfirmTxInputs\" defaultMessage=\"Входы транзакции\" />\r\n                </button>\r\n              </h3>\r\n              {debugShowInput && (\r\n                <pre>\r\n                  <code>{JSON.stringify(this.state.txData.input, null, 4)}</code>\r\n                </pre>\r\n              )}\r\n              <h3>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ debugShowOutput: !debugShowOutput })\r\n                  }}\r\n                >\r\n                  <FormattedMessage\r\n                    id=\"BTCMS_ConfirmTxOutputs\"\r\n                    defaultMessage=\"Выходы транзакции\"\r\n                  />\r\n                </button>\r\n              </h3>\r\n              {debugShowOutput && (\r\n                <pre>\r\n                  <code>{JSON.stringify(this.state.txData.output, null, 4)}</code>\r\n                  <code>{JSON.stringify(this.state.txData, null, 4)}</code>\r\n                </pre>\r\n              )}\r\n              <div>\r\n                <Button brand onClick={this.handleConfirm}>\r\n                  <FormattedMessage\r\n                    id=\"BTCMS_ConfirmTxSign\"\r\n                    defaultMessage=\"Подписать транзакцию\"\r\n                  />\r\n                </Button>\r\n              </div>\r\n            </Fragment>\r\n          )\r\n        }\r\n        {action === 'confirmready' && (\r\n          <Fragment>\r\n            <FormattedMessage id=\"BTCMS_ConfirmTxTitle\" defaultMessage=\"Подтверждение транзакции\" />\r\n            <h2>\r\n              <FormattedMessage\r\n                id=\"BTCMS_ConfirmTxReady\"\r\n                defaultMessage=\"Транзакция подписана и отправлена в блокчейн\"\r\n              />\r\n            </h2>\r\n            <div>\r\n              <Button brand onClick={this.handleGoToWallet}>\r\n                <FormattedMessage\r\n                  id=\"BTCMS_ConfirmTxGoToWallet\"\r\n                  defaultMessage=\"Перейти в кошелек\"\r\n                />\r\n              </Button>\r\n            </div>\r\n            <pre>\r\n              <code>{JSON.stringify(this.state.txID, null, 4)}</code>\r\n            </pre>\r\n          </Fragment>\r\n        )}\r\n        {(action === 'linkready' || action === 'ready') && (\r\n          <Fragment>\r\n            <h1>\r\n              <FormattedMessage\r\n                id=\"BTCMS_CreateWalletTitle\"\r\n                defaultMessage=\"Создание BTC-multisignature кошелька\"\r\n              />\r\n            </h1>\r\n            {action === 'linkready' && (\r\n              <h2>\r\n                <FormattedMessage\r\n                  id=\"BTCMS_CreateWalletLinkReady\"\r\n                  defaultMessage=\"Кошелек создан. Отправьте эту ссылку второму владельцу для подтверждения\"\r\n                />\r\n              </h2>\r\n            )}\r\n            {action === 'ready' && (\r\n              <h2>\r\n                <FormattedMessage id=\"BTCMS_CreateWalletReady\" defaultMessage=\"Кошелек создан\" />\r\n              </h2>\r\n            )}\r\n            {action === 'linkready' && <span>{joinLink}</span>}\r\n            <div>\r\n              <Button brand onClick={this.handleGoToWallet}>\r\n                <FormattedMessage\r\n                  id=\"BTCMS_CreateWalletReadyButton\"\r\n                  defaultMessage=\"Готово. Открыть кошелек\"\r\n                />\r\n              </Button>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n"]}]}