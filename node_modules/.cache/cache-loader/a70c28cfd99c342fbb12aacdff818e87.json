{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\DeleteSwapAfterEnd.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\pages\\Swap\\DeleteSwapAfterEnd.tsx","mtime":1614842914199},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CgpmdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09ICJ1bmRlZmluZWQiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSAiZnVuY3Rpb24iKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfQoKaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnOwppbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnOwppbXBvcnQgYWN0aW9ucyBmcm9tICdyZWR1eC9hY3Rpb25zJzsKaW1wb3J0IFN3YXBBcHAgZnJvbSAnc3dhcC5hcHAnOwoKdmFyIERlbGV0ZVN3YXBBZnRlckVuZCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0NvbXBvbmVudCkgewogIF9pbmhlcml0cyhEZWxldGVTd2FwQWZ0ZXJFbmQsIF9Db21wb25lbnQpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKERlbGV0ZVN3YXBBZnRlckVuZCk7CgogIGZ1bmN0aW9uIERlbGV0ZVN3YXBBZnRlckVuZChwcm9wcykgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBEZWxldGVTd2FwQWZ0ZXJFbmQpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgImF1dG9EZWxldGVPcmRlciIsIGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIHN3YXAgPSBfdGhpcy5wcm9wcy5zd2FwOwoKICAgICAgaWYgKHN3YXAuZmxvdy5zdGF0ZS5pc0ZpbmlzaGVkKSB7CiAgICAgICAgdmFyIGRlbGV0ZWRPcmRlciA9IFN3YXBBcHAuc2hhcmVkKCkuc2VydmljZXMub3JkZXJzLmdldEJ5S2V5KHN3YXAuaWQpOwoKICAgICAgICBpZiAoZGVsZXRlZE9yZGVyICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGFjdGlvbnMuY29yZS5kZWxldGVkUGFydGlhbEN1cnJlbmN5KHN3YXAuaWQpOwogICAgICAgIH0KCiAgICAgICAgYWN0aW9ucy5jb3JlLnJlbW92ZU9yZGVyKHN3YXAuaWQpOwogICAgICAgIGFjdGlvbnMuY29yZS5zaG93TXlPcmRlcnMoKTsKICAgICAgfQogICAgfSk7CgogICAgdmFyIF9zd2FwID0gcHJvcHMuc3dhcDsKCiAgICBfc3dhcC5vbignc3RhdGUgdXBkYXRlJywgX3RoaXMuYXV0b0RlbGV0ZU9yZGVyKTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRGVsZXRlU3dhcEFmdGVyRW5kLCBbewogICAga2V5OiAiY29tcG9uZW50V2lsbFVubW91bnQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkgewogICAgICB2YXIgc3dhcCA9IHRoaXMucHJvcHMuc3dhcDsKICAgICAgc3dhcC5vZmYoJ3N0YXRlIHVwZGF0ZScsIHRoaXMuYXV0b0RlbGV0ZU9yZGVyKTsKICAgICAgdGhpcy5hdXRvRGVsZXRlT3JkZXIoKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJyZW5kZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gRGVsZXRlU3dhcEFmdGVyRW5kOwp9KENvbXBvbmVudCk7CgpfZGVmaW5lUHJvcGVydHkoRGVsZXRlU3dhcEFmdGVyRW5kLCAicHJvcFR5cGVzIiwgewogIHN3YXA6IFByb3BUeXBlcy5zaGFwZSh7CiAgICBmbG93OiBQcm9wVHlwZXMuc2hhcGUoewogICAgICBzdGF0ZTogUHJvcFR5cGVzLnNoYXBlKHsKICAgICAgICBzdGVwOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsCiAgICAgICAgaXNGaW5pc2hlZDogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZAogICAgICB9KS5pc1JlcXVpcmVkCiAgICB9KSwKICAgIGlkOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQKICB9KS5pc1JlcXVpcmVkCn0pOwoKZXhwb3J0IGRlZmF1bHQgRGVsZXRlU3dhcEFmdGVyRW5kOw=="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/pages/Swap/DeleteSwapAfterEnd.tsx"],"names":["Component","PropTypes","actions","SwapApp","DeleteSwapAfterEnd","props","swap","flow","state","isFinished","deletedOrder","shared","services","orders","getByKey","id","undefined","core","deletedPartialCurrency","removeOrder","showMyOrders","on","autoDeleteOrder","off","shape","step","number","isRequired","bool","string"],"mappings":";;;;;;;;;;;;AAAA,SAAgBA,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,OAAP,MAAoB,UAApB;;IAGMC,kB;;;;;AAcJ,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,sEAeD,YAAM;AAAA,UACdC,IADc,GACL,MAAKD,KADA,CACdC,IADc;;AAGtB,UAAIA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgBC,UAApB,EAAgC;AAC9B,YAAMC,YAAY,GAAGP,OAAO,CAACQ,MAAR,GAAiBC,QAAjB,CAA0BC,MAA1B,CAAiCC,QAAjC,CAA0CR,IAAI,CAACS,EAA/C,CAArB;;AACA,YAAIL,YAAY,KAAKM,SAArB,EAAgC;AAC9Bd,UAAAA,OAAO,CAACe,IAAR,CAAaC,sBAAb,CAAoCZ,IAAI,CAACS,EAAzC;AACD;;AACDb,QAAAA,OAAO,CAACe,IAAR,CAAaE,WAAb,CAAyBb,IAAI,CAACS,EAA9B;AACAb,QAAAA,OAAO,CAACe,IAAR,CAAaG,YAAb;AACD;AACF,KA1BkB;;AAAA,QAGTd,KAHS,GAGAD,KAHA,CAGTC,IAHS;;AAKjBA,IAAAA,KAAI,CAACe,EAAL,CAAQ,cAAR,EAAwB,MAAKC,eAA7B;;AALiB;AAMlB;;;;WAED,gCAAuB;AAAA,UACbhB,IADa,GACJ,KAAKD,KADD,CACbC,IADa;AAErBA,MAAAA,IAAI,CAACiB,GAAL,CAAS,cAAT,EAAyB,KAAKD,eAA9B;AAEA,WAAKA,eAAL;AACD;;;WAeD,kBAAS;AACP,aAAO,IAAP;AACD;;;;EA5C8BtB,S;;gBAA3BI,kB,eAEe;AACjBE,EAAAA,IAAI,EAAEL,SAAS,CAACuB,KAAV,CAAgB;AACpBjB,IAAAA,IAAI,EAAEN,SAAS,CAACuB,KAAV,CAAgB;AACpBhB,MAAAA,KAAK,EAAEP,SAAS,CAACuB,KAAV,CAAgB;AACrBC,QAAAA,IAAI,EAAExB,SAAS,CAACyB,MAAV,CAAiBC,UADF;AAErBlB,QAAAA,UAAU,EAAER,SAAS,CAAC2B,IAAV,CAAeD;AAFN,OAAhB,EAGJA;AAJiB,KAAhB,CADc;AAOpBZ,IAAAA,EAAE,EAAEd,SAAS,CAAC4B,MAAV,CAAiBF;AAPD,GAAhB,EAQHA;AATc,C;;AA6CrB,eAAevB,kBAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport actions from 'redux/actions'\r\nimport SwapApp from 'swap.app'\r\n\r\n\r\nclass DeleteSwapAfterEnd extends Component<any, any> {\r\n\r\n  static propTypes = {\r\n    swap: PropTypes.shape({\r\n      flow: PropTypes.shape({\r\n        state: PropTypes.shape({\r\n          step: PropTypes.number.isRequired,\r\n          isFinished: PropTypes.bool.isRequired,\r\n        }).isRequired,\r\n      }),\r\n      id: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const { swap } = props\r\n\r\n    swap.on('state update', this.autoDeleteOrder)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { swap } = this.props\r\n    swap.off('state update', this.autoDeleteOrder)\r\n\r\n    this.autoDeleteOrder()\r\n  }\r\n\r\n  autoDeleteOrder = () => {\r\n    const { swap } = this.props\r\n\r\n    if (swap.flow.state.isFinished) {\r\n      const deletedOrder = SwapApp.shared().services.orders.getByKey(swap.id)\r\n      if (deletedOrder !== undefined) {\r\n        actions.core.deletedPartialCurrency(swap.id)\r\n      }\r\n      actions.core.removeOrder(swap.id)\r\n      actions.core.showMyOrders()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default DeleteSwapAfterEnd\r\n"]}]}