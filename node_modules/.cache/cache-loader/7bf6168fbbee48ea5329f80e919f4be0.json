{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.swaps\\NextSwap.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.swaps\\NextSwap.ts","mtime":1614842913771},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzIjsKaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZiI7CgpmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHsgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgc3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMob2JqZWN0KTsgaWYgKGVudW1lcmFibGVPbmx5KSBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfQoKZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpLCB0cnVlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgX2RlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBzb3VyY2Vba2V5XSk7IH0pOyB9IGVsc2UgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7IH0gZWxzZSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBrZXkpKTsgfSk7IH0gfSByZXR1cm4gdGFyZ2V0OyB9CgpmdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfQoKZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gImZ1bmN0aW9uIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH0KCmltcG9ydCBVVFhPQmxvY2tjaGFpbiBmcm9tICcuL1VUWE9CbG9ja2NoYWluJzsKCnZhciBOZXh0U3dhcCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1VUWE9CbG9ja2NoYWluKSB7CiAgX2luaGVyaXRzKE5leHRTd2FwLCBfVVRYT0Jsb2NrY2hhaW4pOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKE5leHRTd2FwKTsKCiAgZnVuY3Rpb24gTmV4dFN3YXAob3B0aW9ucykgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE5leHRTd2FwKTsKCiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBvcHRpb25zKSwge30sIHsKICAgICAgc3dhcE5hbWU6ICJORVhUIiwKICAgICAgYWNjb3VudDogIm5leHQiLAogICAgICBuZXR3b3JrczogewogICAgICAgIG1haW46IHsKICAgICAgICAgIG5hbWU6ICJuZXh0bWFpbiIsCiAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgbWVzc2FnZVByZWZpeDogJ1x4MThOZXh0Y29pbiBTaWduZWQgTWVzc2FnZTpcbicsCiAgICAgICAgICAgIGJlY2gzMjogJ2JjJywKICAgICAgICAgICAgYmlwMzI6IHsKICAgICAgICAgICAgICAicHVibGljIjogMHgwNDg4QjIxRSwKICAgICAgICAgICAgICAicHJpdmF0ZSI6IDB4MDQ4OEFERTQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgcHViS2V5SGFzaDogNzUsCiAgICAgICAgICAgIHNjcmlwdEhhc2g6IDUsCiAgICAgICAgICAgIHdpZjogMTI4CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB0ZXN0OiB7CiAgICAgICAgICBuYW1lOiAibmV4dHRlc3QiLAogICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgIG1lc3NhZ2VQcmVmaXg6ICdceDE4TmV4dGNvaW4gU2lnbmVkIE1lc3NhZ2U6XG4nLAogICAgICAgICAgICBiZWNoMzI6ICdiYycsCiAgICAgICAgICAgIGJpcDMyOiB7CiAgICAgICAgICAgICAgInB1YmxpYyI6IDB4MDQ4OEIyMUUsCiAgICAgICAgICAgICAgInByaXZhdGUiOiAweDA0ODhBREU0CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHB1YktleUhhc2g6IDc1LAogICAgICAgICAgICBzY3JpcHRIYXNoOiA1LAogICAgICAgICAgICB3aWY6IDEyOAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwKICAgICAgc2tpcEZldGNoQ29uZmlkZW5jZTogdHJ1ZSwKICAgICAgc2tpcENoZWNrQ2FuQmVSZXBsYWNlczogdHJ1ZSwKICAgICAgc2tpcExvY2tUaW1lOiB0cnVlLAogICAgICBza2lwUmVjaXBpZW50UHVibGlja0tleTogdHJ1ZSwKICAgICAgcHJvY2Vzc1Vuc3BlbnQ6IGZ1bmN0aW9uIHByb2Nlc3NVbnNwZW50KHVuc3BlbnQpIHsKICAgICAgICB2YXIgdHhpZCA9IHVuc3BlbnQudHhpZCwKICAgICAgICAgICAgdm91dCA9IHVuc3BlbnQub3V0cHV0SW5kZXg7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHR4aWQ6IHR4aWQsCiAgICAgICAgICB2b3V0OiB2b3V0CiAgICAgICAgfTsKICAgICAgfQogICAgfSkpOwogIH0KCiAgcmV0dXJuIE5leHRTd2FwOwp9KFVUWE9CbG9ja2NoYWluKTsKCmV4cG9ydCBkZWZhdWx0IE5leHRTd2FwOw=="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.swaps/NextSwap.ts"],"names":["UTXOBlockchain","NextSwap","options","swapName","account","networks","main","name","params","messagePrefix","bech32","bip32","pubKeyHash","scriptHash","wif","test","skipFetchConfidence","skipCheckCanBeReplaces","skipLockTime","skipRecipientPublickKey","processUnspent","unspent","txid","vout","outputIndex"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,cAAP,MAA2B,kBAA3B;;IAGMC,Q;;;;;AACJ,oBAAYC,OAAZ,EAAqB;AAAA;;AAAA,6DAEdA,OAFc;AAGjBC,MAAAA,QAAQ,QAHS;AAIjBC,MAAAA,OAAO,QAJU;AAKjBC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE;AACJC,UAAAA,IAAI,YADA;AAEJC,UAAAA,MAAM,EAAE;AACNC,YAAAA,aAAa,EAAE,gCADT;AAENC,YAAAA,MAAM,EAAE,IAFF;AAGNC,YAAAA,KAAK,EAAE;AACL,wBAAS,UADJ;AAEL,yBAAS;AAFJ,aAHD;AAONC,YAAAA,UAAU,EAAE,EAPN;AAQNC,YAAAA,UAAU,EAAE,CARN;AASNC,YAAAA,GAAG,EAAE;AATC;AAFJ,SADE;AAeRC,QAAAA,IAAI,EAAE;AACJR,UAAAA,IAAI,YADA;AAEJC,UAAAA,MAAM,EAAE;AACNC,YAAAA,aAAa,EAAE,gCADT;AAENC,YAAAA,MAAM,EAAE,IAFF;AAGNC,YAAAA,KAAK,EAAE;AACL,wBAAS,UADJ;AAEL,yBAAS;AAFJ,aAHD;AAONC,YAAAA,UAAU,EAAE,EAPN;AAQNC,YAAAA,UAAU,EAAE,CARN;AASNC,YAAAA,GAAG,EAAE;AATC;AAFJ;AAfE,OALO;AAmCjBE,MAAAA,mBAAmB,EAAE,IAnCJ;AAoCjBC,MAAAA,sBAAsB,EAAE,IApCP;AAqCjBC,MAAAA,YAAY,EAAE,IArCG;AAsCjBC,MAAAA,uBAAuB,EAAE,IAtCR;AAuCjBC,MAAAA,cAAc,EAAE,wBAACC,OAAD,EAAa;AAAA,YAEzBC,IAFyB,GAIvBD,OAJuB,CAEzBC,IAFyB;AAAA,YAGZC,IAHY,GAIvBF,OAJuB,CAGzBG,WAHyB;AAK3B,eAAO;AACLF,UAAAA,IAAI,EAAJA,IADK;AAELC,UAAAA,IAAI,EAAJA;AAFK,SAAP;AAID;AAhDgB;AAkDpB;;;EAnDoBvB,c;;AAsDvB,eAAeC,QAAf","sourcesContent":["import UTXOBlockchain from './UTXOBlockchain'\r\n\r\n\r\nclass NextSwap extends UTXOBlockchain {\r\n  constructor(options) {\r\n    super({\r\n      ...options,\r\n      swapName: `NEXT`,\r\n      account: `next`,\r\n      networks: {\r\n        main: {\r\n          name: `nextmain`,\r\n          params: {\r\n            messagePrefix: '\\x18Nextcoin Signed Message:\\n',\r\n            bech32: 'bc',\r\n            bip32: {\r\n              public:  0x0488B21E,\r\n              private: 0x0488ADE4,\r\n            },\r\n            pubKeyHash: 75,\r\n            scriptHash: 5,\r\n            wif: 128,\r\n          }\r\n        },\r\n        test: {\r\n          name: `nexttest`,\r\n          params: {\r\n            messagePrefix: '\\x18Nextcoin Signed Message:\\n',\r\n            bech32: 'bc',\r\n            bip32: {\r\n              public:  0x0488B21E,\r\n              private: 0x0488ADE4,\r\n            },\r\n            pubKeyHash: 75,\r\n            scriptHash: 5,\r\n            wif: 128,\r\n          }\r\n        },\r\n      },\r\n      skipFetchConfidence: true,\r\n      skipCheckCanBeReplaces: true,\r\n      skipLockTime: true,\r\n      skipRecipientPublickKey: true,\r\n      processUnspent: (unspent) => {\r\n        const {\r\n          txid,\r\n          outputIndex: vout,\r\n        } = unspent\r\n        return {\r\n          txid,\r\n          vout,\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default NextSwap"]}]}