{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\common\\messaging\\pubsubRoom\\createP2PNode.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\common\\messaging\\pubsubRoom\\createP2PNode.ts","mtime":1614851402151},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/common/messaging/pubsubRoom/createP2PNode.ts"],"names":["Libp2p","wrtc","WebrtcStar","Bootstrap","Gossipsub","KadDHT","MPLEX","SECIO","PeerId","createP2PNode","options","listen","discoveryPeers","peerIdJson","defaultListen","defaultDiscoveryPeers","Promise","resolve","reject","peerId","createFromJSON","create","console","log","_idB58String","p2pNode","addresses","modules","transport","streamMuxer","connEncryption","peerDiscovery","dht","pubsub","config","prototype","Symbol","toStringTag","autoDial","webRTCStar","enabled","bootstrap","interval","list","dialer","maxParallelDials","maxDialsPerPeer","dialTimeout","connectionManager","maxConnections","Infinity","minConnections","pollInterval","defaultPeerValue","maxData","maxSentData","maxReceivedData","maxEventLoopDelay","movingAverageInterval","relay","hop","active","randomWalk"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport Libp2p from 'libp2p'\r\nimport wrtc from 'wrtc'\r\nimport WebrtcStar from 'libp2p-webrtc-star'\r\nimport Bootstrap from 'libp2p-bootstrap'\r\nimport Gossipsub from 'libp2p-gossipsub'\r\nimport KadDHT from 'libp2p-kad-dht'\r\nimport MPLEX from 'libp2p-mplex'\r\nimport SECIO from 'libp2p-secio'\r\nimport PeerId from 'peer-id'\r\n\r\n\r\nconst createP2PNode = (options) => {\r\n  const {\r\n    listen,\r\n    discoveryPeers,\r\n    peerIdJson,\r\n  } = options\r\n\r\n  const defaultListen = [\r\n    //'/ip4/0.0.0.0/tcp/4002',\r\n    '/dns4/webrtc-star-1.swaponline.io/tcp/443/wss/p2p-webrtc-star/',\r\n    //'/dns4/webrtc-star.discovery.libp2p.io/tcp/443/wss/p2p-webrtc-star',\r\n    //'/dns4/secure-beyond-12878.herokuapp.com/tcp/443/wss/p2p-webrtc-star/',\r\n    //'/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star/'\r\n  ]\r\n\r\n  const defaultDiscoveryPeers = [\r\n    '/dns4/ams-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd',\r\n    '/dns4/lon-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3',\r\n    '/dns4/sfo-3.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM',\r\n    '/dns4/sgp-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu',\r\n    '/dns4/nyc-1.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm',\r\n    '/dns4/nyc-2.bootstrap.libp2p.io/tcp/443/wss/p2p/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64',\r\n  ]\r\n\r\n  /*\r\n    ipfs discovery peers\r\n    0: \"/dns4/ams-1.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLer265NRgSp2LA3dPaeykiS1J6DifTC88f5uVQKNAd\"\r\n    1: \"/dns4/lon-1.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLMeWqB7YGVLJN3pNLQpmmEk35v6wYtsMGLzSr5QBU3\"\r\n    2: \"/dns4/sfo-3.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLPppuBtQSGwKDZT2M73ULpjvfd3aZ6ha4oFGL1KrGM\"\r\n    3: \"/dns4/sgp-1.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLSafTMBsPKadTEgaXctDQVcqN88CNLHXMkTNwMKPnu\"\r\n    4: \"/dns4/nyc-1.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLueR4xBeUbY9WZ9xGUUxunbKWcrNFTDAadQJmocnWm\"\r\n    5: \"/dns4/nyc-2.bootstrap.libp2p.io/tcp/443/wss/ipfs/QmSoLV4Bbm51jM9C4gDYZQ9Cy3U6aXMJDAbzgu2fzaDs64\"\r\n    6: \"/dns4/node0.preload.ipfs.io/tcp/443/wss/ipfs/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic\"\r\n    7: \"/dns4/node1.preload.ipfs.io/tcp/443/wss/ipfs/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6\"\r\n  */\r\n\r\n  // Build and return our libp2p node\r\n  return new Promise(async (resolve, reject) => {\r\n    // Generate peerId\r\n    let peerId = null\r\n    if (peerIdJson) {\r\n      try {\r\n        peerId = await PeerId.createFromJSON(peerIdJson)\r\n      } catch (e) {}\r\n    }\r\n\r\n    if (!peerId) {\r\n      peerId = await PeerId.create()\r\n    }\r\n\r\n    console.log('Peer id:', peerId._idB58String)\r\n\r\n    const p2pNode = new Libp2p({\r\n      peerId,\r\n      addresses: {\r\n        listen: (listen || defaultListen),\r\n      },\r\n      modules: {\r\n        transport: [WebrtcStar],\r\n        streamMuxer: [MPLEX],\r\n        connEncryption: [SECIO],\r\n        // @\r\n        peerDiscovery: [Bootstrap],\r\n        dht: KadDHT,\r\n        pubsub: Gossipsub\r\n      },\r\n      config: {\r\n        transport: {\r\n          [WebrtcStar.prototype[Symbol.toStringTag]]: {\r\n            wrtc\r\n          }\r\n        },\r\n        peerDiscovery: {\r\n          autoDial: true,\r\n          // @\r\n          webRTCStar: {\r\n            enabled: true\r\n          },\r\n          bootstrap: {\r\n            enabled: true,\r\n            interval: 10e3,\r\n            list: discoveryPeers || defaultDiscoveryPeers,\r\n          }\r\n        },\r\n        dialer: {\r\n          maxParallelDials: 100,\r\n          maxDialsPerPeer: 100,\r\n          dialTimeout: 30e3\r\n        },\r\n        connectionManager: {\r\n          maxConnections: Infinity,\r\n          minConnections: 0,\r\n          pollInterval: 500,\r\n          defaultPeerValue: 1,\r\n          maxData: Infinity,\r\n          maxSentData: Infinity,\r\n          maxReceivedData: Infinity,\r\n          maxEventLoopDelay: Infinity,\r\n          movingAverageInterval: 1000\r\n        },\r\n        // @\r\n        relay: {\r\n          enabled: true,\r\n          hop: {\r\n            enabled: true,\r\n            active: true,\r\n          }\r\n        },\r\n        dht: {\r\n          enabled: true,\r\n          randomWalk: {\r\n            enabled: true,\r\n          }\r\n        }\r\n      }\r\n    })\r\n    resolve(p2pNode)\r\n  })\r\n}\r\n\r\n\r\nexport default createP2PNode\r\n"]}]}