{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\web3.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\web3.ts","mtime":1614852773567},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfcmVnZW5lcmF0b3JSdW50aW1lIGZyb20gIkBiYWJlbC9ydW50aW1lL3JlZ2VuZXJhdG9yIjsKLy8gQHRzLW5vY2hlY2sKaW1wb3J0IFdlYjMgZnJvbSAnd2ViMyc7CmltcG9ydCBjb25maWcgZnJvbSAnYXBwLWNvbmZpZyc7CmNvbnNvbGUubG9nKCdyZXNldCB3ZWIzJyk7CnZhciB3ZWIzID0gbmV3IFdlYjMobmV3IFdlYjMucHJvdmlkZXJzLkh0dHBQcm92aWRlcihjb25maWcuYmluYW5jZSA/IGNvbmZpZy53ZWIzLmJpbmFuY2VfcHJvdmlkZXIgOiBjb25maWcud2ViMy5wcm92aWRlcikpOwoKdmFyIHNldE1ldGFtYXNrID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocHJvdmlkZXIpIHsKICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIHdlYjMgPSBwcm92aWRlcjsgLy9ACgogICAgICAgICAgICB3ZWIzLmlzTWV0YW1hc2sgPSB0cnVlOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBzZXRNZXRhbWFzayhfeCkgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Cgp2YXIgc2V0UHJvdmlkZXIgPSBmdW5jdGlvbiBzZXRQcm92aWRlcihwcm92aWRlcikgewogIHdlYjMgPSBwcm92aWRlcjsKfTsKCnZhciBzZXREZWZhdWx0UHJvdmlkZXIgPSBmdW5jdGlvbiBzZXREZWZhdWx0UHJvdmlkZXIoKSB7CiAgd2ViMyA9IG5ldyBXZWIzKG5ldyBXZWIzLnByb3ZpZGVycy5IdHRwUHJvdmlkZXIoY29uZmlnLmJpbmFuY2UgPyBjb25maWcud2ViMy5iaW5hbmNlX3Byb3ZpZGVyIDogY29uZmlnLndlYjMucHJvdmlkZXIpKTsgLy9ACgogIHdlYjMuaXNNZXRhbWFzayA9IGZhbHNlOwp9OwoKdmFyIGdldFdlYjMgPSBmdW5jdGlvbiBnZXRXZWIzKCkgewogIC8vQAogIGNvbnNvbGUubG9nKCdnZXQgd2ViMyAtIGlzIG1ldGFtYXNrJywgd2ViMy5pc01ldGFtYXNrKTsKICByZXR1cm4gd2ViMzsKfTsKCmV4cG9ydCB7IHNldE1ldGFtYXNrLCB3ZWIzLCBnZXRXZWIzLCBzZXREZWZhdWx0UHJvdmlkZXIsIHNldFByb3ZpZGVyIH07CmV4cG9ydCBkZWZhdWx0IHdlYjM7"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/helpers/web3.ts"],"names":["Web3","config","console","log","web3","providers","HttpProvider","binance","binance_provider","provider","setMetamask","isMetamask","setProvider","setDefaultProvider","getWeb3"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAMAC,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,IAAIC,IAAI,GAAG,IAAIJ,IAAJ,CACT,IAAIA,IAAI,CAACK,SAAL,CAAeC,YAAnB,CACGL,MAAM,CAACM,OAAR,GACIN,MAAM,CAACG,IAAP,CAAYI,gBADhB,GAEIP,MAAM,CAACG,IAAP,CAAYK,QAHlB,CADS,CAAX;;AAQA,IAAMC,WAAW;AAAA,sEAAG,iBAAOD,QAAP;AAAA;AAAA;AAAA;AAAA;AAClBL,YAAAA,IAAI,GAAGK,QAAP,CADkB,CAElB;;AACAL,YAAAA,IAAI,CAACO,UAAL,GAAkB,IAAlB;;AAHkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXD,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAMA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACH,QAAD,EAAc;AAChCL,EAAAA,IAAI,GAAGK,QAAP;AACD,CAFD;;AAGA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BT,EAAAA,IAAI,GAAG,IAAIJ,IAAJ,CACL,IAAIA,IAAI,CAACK,SAAL,CAAeC,YAAnB,CACGL,MAAM,CAACM,OAAR,GACIN,MAAM,CAACG,IAAP,CAAYI,gBADhB,GAEIP,MAAM,CAACG,IAAP,CAAYK,QAHlB,CADK,CAAP,CAD+B,CAQ/B;;AACAL,EAAAA,IAAI,CAACO,UAAL,GAAkB,KAAlB;AACD,CAVD;;AAYA,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCC,IAAI,CAACO,UAA3C;AACA,SAAOP,IAAP;AACD,CAJD;;AAMA,SACEM,WADF,EAEEN,IAFF,EAGEU,OAHF,EAIED,kBAJF,EAKED,WALF;AAQA,eAAeR,IAAf","sourcesContent":["// @ts-nocheck\r\nimport Web3 from 'web3'\r\nimport config from 'app-config'\r\nimport metamask from 'helpers/metamask'\r\nimport promiEvent from 'web3-core-promievent'\r\n//@\r\nimport { utils as web3utils } from 'web3'\r\n\r\nconsole.log('reset web3')\r\nlet web3 = new Web3(\r\n  new Web3.providers.HttpProvider(\r\n    (config.binance)\r\n      ? config.web3.binance_provider\r\n      : config.web3.provider\r\n  )\r\n)\r\n\r\nconst setMetamask = async (provider) => {\r\n  web3 = provider\r\n  //@\r\n  web3.isMetamask = true\r\n}\r\n\r\nconst setProvider = (provider) => {\r\n  web3 = provider\r\n}\r\nconst setDefaultProvider = () => {\r\n  web3 = new Web3(\r\n    new Web3.providers.HttpProvider(\r\n      (config.binance)\r\n        ? config.web3.binance_provider\r\n        : config.web3.provider\r\n    )\r\n  )\r\n  //@\r\n  web3.isMetamask = false\r\n}\r\n\r\nconst getWeb3 = () => {\r\n  //@\r\n  console.log('get web3 - is metamask', web3.isMetamask)\r\n  return web3\r\n}\r\n\r\nexport {\r\n  setMetamask,\r\n  web3,\r\n  getWeb3,\r\n  setDefaultProvider,\r\n  setProvider,\r\n}\r\n\r\nexport default web3\r\n"]}]}