{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\BalanceForm\\BalanceForm.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\BalanceForm\\BalanceForm.tsx","mtime":1614842913847},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/BalanceForm/BalanceForm.tsx"],"names":["React","useState","useEffect","CSSModules","connect","actions","cx","styles","Button","InlineLoader","constants","BigNumber","config","FormattedMessage","dollar","btc","isDark","localStorage","getItem","BalanceForm","activeFiat","activeCurrency","fiatBalance","currencyBalance","handleReceive","handleWithdraw","currency","handleInvoice","isFetching","showButtons","type","singleWallet","multisigPendingCount","selectedCurrency","setActiveCurrency","isWidgetBuild","isWidget","toLowerCase","active","handleClickCurrency","user","pullActiveCurrency","handleGoToMultisig","multisigTx","goToLastWallet","isFullBuild","isNaN","dp","ROUND_FLOOR","toString","toUpperCase","count","yourBalanceBottomWrapper","modals","dashboardModalsAllowed","ui","dashboardView","allowMultiple"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { Fragment, useState, useEffect } from 'react'\r\nimport CSSModules from 'react-css-modules'\r\nimport { connect } from 'redaction'\r\nimport actions from 'redux/actions'\r\nimport cx from 'classnames'\r\n\r\nimport styles from 'pages/Wallet/Wallet.scss'\r\nimport Button from 'components/controls/Button/Button'\r\nimport InlineLoader from 'components/loaders/InlineLoader/InlineLoader'\r\nimport { links, constants } from 'helpers'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport config from 'app-config'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport dollar from './images/dollar.svg'\r\nimport btc from './images/btcIcon.svg'\r\n\r\nconst isDark = localStorage.getItem(constants.localStorage.isDark)\r\n\r\nfunction BalanceForm({\r\n  activeFiat,\r\n  activeCurrency,\r\n  fiatBalance,\r\n  currencyBalance,\r\n  handleReceive,\r\n  handleWithdraw,\r\n  currency,\r\n  handleInvoice,\r\n  isFetching = false,\r\n  showButtons = true,\r\n  type,\r\n  singleWallet = false,\r\n  multisigPendingCount = 10,\r\n}) {\r\n  const [selectedCurrency, setActiveCurrency] = useState(activeCurrency)\r\n\r\n  const isWidgetBuild = config && config.isWidget\r\n\r\n  useEffect(() => {\r\n    if (type === 'wallet' && activeCurrency !== activeFiat.toLowerCase()) {\r\n      setActiveCurrency('btc')\r\n    } else {\r\n      setActiveCurrency(activeCurrency)\r\n    }\r\n  }, [activeCurrency])\r\n\r\n  const active = activeFiat ? activeFiat.toLowerCase() : 'usd'\r\n\r\n  // @ToDo\r\n  // в Data у валют есть флаги isUserProtected и isSMSProtected\r\n  // нужно по ним проверять, а не по \"служебному\" названию монеты\r\n  // Use flags in currency data (isUserProtected and isSMSProtected)\r\n  // eslint-disable-next-line default-case\r\n  switch (currency) {\r\n    case 'btc (sms-protected)':\r\n    case 'btc (multisig)':\r\n    case 'btc (pin-protected)':\r\n      currency = 'BTC'\r\n      break\r\n  }\r\n\r\n  \r\n  const handleClickCurrency = (currency) => {\r\n    setActiveCurrency(currency)\r\n    actions.user.pullActiveCurrency(currency)\r\n  }\r\n\r\n  const handleGoToMultisig = () => {\r\n    actions.multisigTx.goToLastWallet()\r\n  }\r\n\r\n  return (\r\n    <div styleName={`${isWidgetBuild && !config.isFullBuild ? 'yourBalance widgetBuild' : 'yourBalance'} ${isDark ? 'dark' : ''}`}>\r\n      <div styleName=\"yourBalanceTop\" className=\"data-tut-widget-balance\">\r\n        <p styleName=\"yourBalanceDescr\">\r\n          {singleWallet\r\n            ? <FormattedMessage id=\"YourWalletbalance\" defaultMessage=\"Баланс\" />\r\n            : <FormattedMessage id=\"Yourtotalbalance\" defaultMessage=\"Ваш общий баланс\" />\r\n          }\r\n        </p>\r\n        <div styleName=\"yourBalanceValue\">\r\n          {isFetching && (\r\n            <div styleName=\"loaderHolder\">\r\n              <InlineLoader />\r\n            </div>\r\n          )}\r\n          {selectedCurrency === active ? (\r\n            // eslint-disable-next-line no-restricted-globals\r\n            <p>\r\n              {(activeFiat === 'USD' || activeFiat === 'CAD') && <img src={dollar} alt=\"dollar\" />}\r\n              {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                !isNaN(fiatBalance) ? new BigNumber(fiatBalance).dp(2, BigNumber.ROUND_FLOOR).toString() : ''\r\n              }\r\n            </p>\r\n          ) : (\r\n            <p className=\"data-tut-all-balance\">\r\n              {currency.toUpperCase() === 'BTC' ? <img src={btc} alt=\"btc\" /> : ''}\r\n              {new BigNumber(currencyBalance).dp(6, BigNumber.ROUND_FLOOR).toString()}\r\n            </p>\r\n          )}\r\n        </div>\r\n        <div styleName=\"yourBalanceCurrencies\">\r\n          <button\r\n            styleName={selectedCurrency === active && 'active'}\r\n            onClick={() => handleClickCurrency(active)}\r\n          >\r\n            {/* // eslint-disable-next-line reactintl/contains-hardcoded-copy */}\r\n            {active}\r\n          </button>\r\n          <span />\r\n          <button\r\n            styleName={selectedCurrency === currency && 'active'}\r\n            onClick={() => handleClickCurrency(currency)}\r\n          >\r\n            {currency}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {multisigPendingCount > 0 && (\r\n        <div>\r\n          <p styleName=\"multisigWaitCount\" onClick={handleGoToMultisig}>\r\n            <FormattedMessage\r\n              id=\"Balance_YouAreHaveNotSignegTx\"\r\n              defaultMessage=\"{count} transaction needs your confirmation\"\r\n              values={{\r\n                count: multisigPendingCount,\r\n              }}\r\n            />\r\n          </p>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={cx({\r\n          [styles.yourBalanceBottomWrapper]: true,\r\n        })}\r\n      >\r\n        <div styleName=\"yourBalanceBottom\">\r\n          {showButtons ? (\r\n            <div styleName=\"btns\" className=\"data-tut-withdraw-buttons\">\r\n              <Button blue id=\"depositBtn\" onClick={() => handleReceive('Deposit')}>\r\n                <FormattedMessage id=\"YourtotalbalanceDeposit\" defaultMessage=\"Пополнить\" />\r\n              </Button>\r\n              <Button blue disabled={!currencyBalance} id=\"sendBtn\" onClick={() => handleWithdraw('Send')}>\r\n                <FormattedMessage id=\"YourtotalbalanceSend\" defaultMessage=\"Отправить\" />\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            <Button blue disabled={!currencyBalance} styleName=\"button__invoice\" onClick={() => handleInvoice()}>\r\n              <FormattedMessage id=\"RequestPayment\" defaultMessage=\"Запросить\" />\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(({ modals, ui: { dashboardModalsAllowed } }) => ({\r\n  modals,\r\n  dashboardView: dashboardModalsAllowed,\r\n}))(CSSModules(BalanceForm, styles, { allowMultiple: true }))\r\n"]}]}