{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.orders\\Order.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\core\\swap.orders\\Order.ts","mtime":1614842913762},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/core/swap.orders/Order.ts"],"names":["debug","SwapApp","BigNumber","events","Order","app","parentCollection","data","id","isMy","isTurbo","owner","participant","buyCurrency","exchangeRate","sellCurrency","buyAmount","sellAmount","collection","requests","isRequested","isProcessing","isPartial","isHidden","partialHandler","destination","_attachSwapApp","_update","peer","services","room","_onMount","required","on","orderId","participantMetadata","find","reputation","eth","address","btc","env","swapsExplorer","getVerifiedReputation","err","push","dispatch","updatedOrder","console","log","filteredUpdatedOrder","_autoReplyToPartial","values","Object","keys","forEach","key","_saveMyOrders","changedKey","comparedTo","handler","newOrder","declineRequestForPartial","acceptRequestForPartial","callback","requestOptions","self","destinationAddress","warn","update","auth","getPublicData","sendMessagePeer","event","unsubscribe","participantAddress","participantPeer","updatedRequests","filter","conditionHandler","Error","error","newOrderId","getByKey","ok","newOrderIsGood","sendRequest","accepted","newValues","create","type"],"mappings":"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","sourcesContent":["import debug from 'debug'\r\nimport SwapApp from 'swap.app'\r\nimport BigNumber from 'bignumber.js'\r\nimport events from './events'\r\n\r\n\r\nclass Order {\r\n\r\n  id: string\r\n  isMy: any\r\n  isTurbo: boolean\r\n  owner: any\r\n  participant: any\r\n  buyCurrency: any\r\n  exchangeRate: any\r\n  sellCurrency: any\r\n  buyAmount: any\r\n  sellAmount: any\r\n  collection: any\r\n  requests: any\r\n  isRequested: any\r\n  isProcessing: any\r\n  isPartial: any\r\n  isHidden: any\r\n  partialHandler: any\r\n  destination: any\r\n  app: any\r\n\r\n  /**\r\n   *\r\n   * @param {object}  parent\r\n   * @param {object}  data\r\n   * @param {string}  data.id\r\n   * @param {object}  data.owner\r\n   * @param {string}  data.owner.peer\r\n   * @param {number}  data.owner.reputation\r\n   * @param {object}  data.owner.<currency>\r\n   * @param {string}  data.owner.<currency>.address\r\n   * @param {string}  data.owner.<currency>.publicKey\r\n   * @param {string}  data.buyCurrency\r\n   * @param {string}  data.sellCurrency\r\n   * @param {number}  data.buyAmount\r\n   * @param {number}  data.sellAmount\r\n   */\r\n  constructor(app, parentCollection, data) {\r\n    this.id             = data.id\r\n    this.isMy           = null\r\n    this.isTurbo        = null\r\n    this.owner          = null\r\n    this.participant    = null\r\n    this.buyCurrency    = null\r\n    this.exchangeRate   = null\r\n    this.sellCurrency   = null\r\n    this.buyAmount      = null\r\n    this.sellAmount     = null\r\n\r\n    this.collection       = parentCollection\r\n    this.requests         = [] // income requests\r\n    this.isRequested      = false // outcome request status\r\n    this.isProcessing     = false // if swap isProcessing\r\n    this.isPartial        = false\r\n    this.isHidden         = false\r\n\r\n    this.partialHandler   = {\r\n      buyAmount: () => false,\r\n      sellAmount: () => false,\r\n    }\r\n\r\n    this.destination = null\r\n\r\n\r\n    this._attachSwapApp(app)\r\n\r\n    this._update({\r\n      ...data,\r\n      isMy: data.owner.peer === this.app.services.room.peer,\r\n    })\r\n\r\n    this._onMount()\r\n  }\r\n\r\n  _attachSwapApp(app) {\r\n    SwapApp.required(app)\r\n\r\n    this.app = app\r\n  }\r\n\r\n  _onMount() {\r\n    this.app.services.room.on('request swap', ({ orderId, participant, participantMetadata, destination }) => {\r\n      if (orderId === this.id /*&& this.requests.length < 10*/ && !this.requests.find(({ participant: { peer } }) => peer === participant.peer)) {\r\n        let reputation = 0\r\n\r\n        try {\r\n          // todo: check other blockchains\r\n          if (participant.eth.address === participantMetadata.address || participant.btc.address === participantMetadata.address) {\r\n            reputation = this.app.env.swapsExplorer.getVerifiedReputation(participantMetadata)\r\n          }\r\n        } catch (err) {\r\n          debug('swap.core:order')(err)\r\n        }\r\n\r\n        this.requests.push({\r\n          participant,\r\n          destination,\r\n          reputation,\r\n          isPartial: false,\r\n        })\r\n\r\n        events.dispatch('new order request', {\r\n          orderId,\r\n          participant,\r\n          destination,\r\n          participantMetadata,\r\n        })\r\n      }\r\n    })\r\n\r\n    this.app.services.room.on('request partial fulfilment', ({ orderId, participant, participantMetadata, destination, updatedOrder }) => {\r\n      console.log('<- request partial fulfilment')\r\n      if (orderId === this.id) {\r\n        const { buyAmount, sellAmount } = updatedOrder\r\n\r\n        // todo: add check reputation like as 'request swap'\r\n        let reputation = 0\r\n\r\n        const filteredUpdatedOrder = {\r\n          buyAmount,\r\n          sellAmount,\r\n        }\r\n\r\n        this.requests.push({\r\n          participant,\r\n          destination,\r\n          updatedOrder: filteredUpdatedOrder,\r\n        })\r\n\r\n        events.dispatch('new partial fulfilment request', {\r\n          orderId,\r\n          participant,\r\n          updatedOrder: filteredUpdatedOrder,\r\n        })\r\n\r\n        this._autoReplyToPartial('buyAmount', filteredUpdatedOrder, participant)\r\n        this._autoReplyToPartial('sellAmount', filteredUpdatedOrder, participant)\r\n      }\r\n    })\r\n  }\r\n\r\n  _update(values) {\r\n    Object.keys(values).forEach((key) => {\r\n      this[key] = values[key]\r\n    })\r\n  }\r\n\r\n  update(values) {\r\n    this._update(values)\r\n    this.collection._saveMyOrders()\r\n\r\n    events.dispatch('swap update', this, values)\r\n  }\r\n\r\n  _autoReplyToPartial(changedKey, updatedOrder, participant) {\r\n    console.log('>>> _autoReplyToPartial')\r\n    if (!this.isPartial) {\r\n      return\r\n    }\r\n\r\n    if (!updatedOrder[changedKey]) {\r\n      return\r\n    }\r\n\r\n    updatedOrder[changedKey] = new BigNumber(updatedOrder[changedKey])\r\n\r\n    if (this[changedKey].comparedTo(updatedOrder[changedKey]) === 0) {\r\n      return\r\n    }\r\n\r\n    const handler = this.partialHandler[changedKey]\r\n\r\n    if (typeof handler !== 'function') {\r\n      return\r\n    }\r\n\r\n    if (!participant) return\r\n\r\n    const { peer } = participant\r\n\r\n    const newOrder = handler(updatedOrder, this)\r\n\r\n    if (!newOrder || !newOrder.buyAmount || !newOrder.sellAmount) {\r\n      this.declineRequestForPartial(participant.peer)\r\n    } else {\r\n      const { buyAmount, sellAmount } = newOrder\r\n\r\n      this.acceptRequestForPartial({ buyAmount, sellAmount }, participant.peer)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param callback - awaiting for response - accept / decline\r\n   */\r\n  sendRequest(callback, requestOptions) {\r\n    const self = this\r\n\r\n    const {\r\n      address: destinationAddress,\r\n      participantMetadata,\r\n    } = requestOptions\r\n\r\n    if (this.app.services.room.peer === this.owner.peer) {\r\n      console.warn('You are the owner of this Order. You can\\'t send request to yourself.')\r\n      return\r\n    }\r\n\r\n    if (this.isRequested) {\r\n      console.warn('You have already requested this swap.')\r\n      return\r\n    }\r\n\r\n    this.update({\r\n      isRequested: true,\r\n    })\r\n\r\n    const participant = this.app.services.auth.getPublicData()\r\n\r\n    this.app.services.room.sendMessagePeer(this.owner.peer, {\r\n      event: 'request swap',\r\n      data: {\r\n        orderId: this.id,\r\n        participant,\r\n        participantMetadata,\r\n        destination: {\r\n          address: destinationAddress,\r\n        },\r\n      },\r\n    })\r\n\r\n    this.app.services.room.on('accept swap request', function ({ orderId }) {\r\n      if (orderId === self.id) {\r\n        this.unsubscribe()\r\n\r\n        self.update({\r\n          isProcessing: true,\r\n          isRequested: false,\r\n          destination: {\r\n            ...self.destination,\r\n            participantAddress: destinationAddress,\r\n          },\r\n        })\r\n\r\n        callback(true)\r\n      }\r\n    })\r\n\r\n    this.app.services.room.on('decline swap request', function ({ orderId }) {\r\n      if (orderId === self.id) {\r\n        this.unsubscribe()\r\n\r\n        self.update({\r\n          isRequested: false,\r\n        })\r\n\r\n        // TODO think about preventing user from sent requests every N seconds\r\n        callback(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  acceptRequest(participantPeer) {\r\n    const { participant, destination } = this.requests.find(({ participant: { peer } }) => peer === participantPeer)\r\n\r\n    const { address } = destination\r\n\r\n    this.update({\r\n      isRequested: false,\r\n      isProcessing: true,\r\n      participant,\r\n      destination: {\r\n        ...this.destination,\r\n        participantAddress: address,\r\n      },\r\n      requests: [],\r\n    })\r\n\r\n    this.app.services.room.sendMessagePeer(participantPeer, {\r\n      event: 'accept swap request',\r\n      data: {\r\n        orderId: this.id,\r\n      },\r\n    })\r\n  }\r\n\r\n  declineRequest(participantPeer) {\r\n    const updatedRequests = this.requests.filter(({ participant: { peer } }) => {\r\n      return peer !== participantPeer\r\n    })\r\n\r\n    this.update({\r\n      isRequested: false,\r\n      requests: updatedRequests,\r\n    })\r\n\r\n    this.app.services.room.sendMessagePeer(participantPeer, {\r\n      event: 'decline swap request',\r\n      data: {\r\n        orderId: this.id,\r\n      },\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param updatedOrder.buyAmount - optional String\r\n   * @param updatedOrder.sellAmount - optional String\r\n   * @param callback - callback will receive updated order\r\n   * @param conditionHandler - autoreply to new order proposal\r\n   */\r\n  sendRequestForPartial(updatedOrder, requestOptions, callback, conditionHandler) {\r\n    console.log('>>> sendRequestForPartial')\r\n    console.log('updatedOrder', updatedOrder)\r\n    console.log('requestOptions', requestOptions)\r\n    if (!this.isPartial) {\r\n      throw new Error(`Cant request partial fulfilment for order ${this.id}`)\r\n    }\r\n\r\n    const { buyAmount, sellAmount } = updatedOrder\r\n    updatedOrder = { buyAmount, sellAmount }\r\n\r\n    if (!updatedOrder) {\r\n      throw new Error(`No buyAmount, sellAmount given. Exit partial`)\r\n    }\r\n\r\n    const self = this\r\n\r\n    if (this.app.services.room.peer === this.owner.peer) {\r\n      console.error('You are the owner of this Order. You can\\'t send request to yourself.')\r\n      return\r\n    }\r\n\r\n    const {\r\n      address: destinationAddress,\r\n      participantMetadata,\r\n    } = requestOptions\r\n\r\n    const participant = this.app.services.auth.getPublicData()\r\n\r\n    //console.log('-> request partial fulfilment')\r\n\r\n    this.app.services.room.sendMessagePeer(this.owner.peer, {\r\n      event: 'request partial fulfilment',\r\n      data: {\r\n        orderId: this.id,\r\n        participant,\r\n        participantMetadata,\r\n        destination: {\r\n          address: destinationAddress,\r\n        },\r\n        updatedOrder,\r\n      },\r\n    })\r\n\r\n    this.app.services.room.on('accept partial fulfilment', function ({ orderId, newOrderId, newOrder }) {\r\n      console.log('<- accept partial fulfilment')\r\n      if (orderId === self.id) {\r\n        this.unsubscribe()\r\n        //console.log('orderId', orderId)\r\n        //console.log('newOrderId', newOrderId)\r\n        // locate new order\r\n        //console.log('collection = ', self.collection)\r\n        const newOrder = self.collection.getByKey(newOrderId)\r\n\r\n        if (!newOrder) {\r\n          console.error('Party created no order with id =', newOrderId)\r\n          return callback(null, false)\r\n        }\r\n\r\n        // check that values match updatedOrder and old order\r\n        const ok = newOrder.buyCurrency === self.buyCurrency\r\n                && newOrder.sellCurrency === self.sellCurrency\r\n\r\n        if (!ok) {\r\n          return callback(newOrder, false)\r\n        }\r\n\r\n        // if condition to check is not given,\r\n        // we need logic on client app side\r\n        if (typeof conditionHandler !== 'function') {\r\n          // TODO: pass destination and participantMetadata\r\n          return callback(newOrder)\r\n        }\r\n\r\n        // else, we can start swap automatically\r\n        const newOrderIsGood = conditionHandler(self, newOrder)\r\n\r\n        if (newOrderIsGood) {\r\n          // request that new order\r\n          newOrder.sendRequest(accepted => callback(newOrder, accepted), requestOptions)\r\n        } else {\r\n          callback(newOrder, false)\r\n        }\r\n      }\r\n    })\r\n\r\n    this.app.services.room.on('decline partial fulfilment', function ({ orderId }) {\r\n      console.log('<- decline partial fulfilment')\r\n      if (orderId === self.id) {\r\n        this.unsubscribe()\r\n\r\n        // TODO think about preventing user from sent requests every N seconds\r\n        callback(null, false)\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Object} newValues - { buyAmount, sellAmount } - new order values\r\n   * @param {String} participantPeer - participant peer id\r\n   */\r\n  acceptRequestForPartial(newValues, participantPeer) {\r\n    console.log('>>> acceptRequestForPartial() newValues =', newValues)\r\n    const { buyCurrency, sellCurrency, isTurbo } = this\r\n    const { buyAmount, sellAmount } = newValues\r\n\r\n    const updatedRequests = this.requests.filter(({ participant: { peer } }) => {\r\n      return peer !== participantPeer\r\n    })\r\n\r\n    this.update({\r\n      isRequested: false,\r\n      requests: updatedRequests,\r\n    })\r\n\r\n    console.log('Create new partial order...')\r\n\r\n    const newOrder = this.collection.create({\r\n      buyAmount,\r\n      sellAmount,\r\n      buyCurrency,\r\n      sellCurrency,\r\n      isTurbo\r\n    })\r\n\r\n    console.log('new order = ', newOrder)\r\n    console.log('and collection = ', this.collection)\r\n    console.log('send to peer ', {\r\n      orderId: this.id,\r\n      newOrderId: newOrder.id,\r\n    })\r\n\r\n    console.log('-> accept partial fulfilment')\r\n\r\n    this.app.services.room.sendMessagePeer(participantPeer, {\r\n      event: 'accept partial fulfilment',\r\n      data: {\r\n        orderId: this.id,\r\n        newOrderId: newOrder.id,\r\n      },\r\n    })\r\n  }\r\n\r\n  declineRequestForPartial(participantPeer) {\r\n    // TODO this removes all requests, we need to remove only one referenced\r\n    const updatedRequests = this.requests.filter(({ participant: { peer } }) => {\r\n      return peer !== participantPeer\r\n    })\r\n\r\n    this.update({\r\n      isRequested: false,\r\n      requests: updatedRequests,\r\n    })\r\n\r\n    this.app.services.room.sendMessagePeer(participantPeer, {\r\n      event: 'decline partial fulfilment',\r\n      data: {\r\n        orderId: this.id,\r\n      },\r\n    })\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {String} type - ['buyAmount','sellAmount']\r\n   * @param {function} handler - function to be called on partial request to that order\r\n   */\r\n  setRequestHandlerForPartial(type, handler) {\r\n    if (!this.isMy) {\r\n      throw new Error(`RequestHandlerError: Not an owner`)\r\n    }\r\n    if (type !== 'buyAmount' && type !== 'sellAmount') {\r\n      throw new Error(`RequestHandlerError: Key = '${type}' is not in ['buyAmount','sellAmount']`)\r\n    }\r\n\r\n    this.partialHandler[type] = handler\r\n\r\n    return this\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Order\r\n"]}]}