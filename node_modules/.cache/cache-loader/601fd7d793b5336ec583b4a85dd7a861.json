{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\stats.swaponline.ts","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\helpers\\stats.swaponline.ts","mtime":1614842914118},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjsKCnZhciBfdGVtcGxhdGVPYmplY3QsIF90ZW1wbGF0ZU9iamVjdDI7CgppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICJAYmFiZWwvcnVudGltZS9yZWdlbmVyYXRvciI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IHJlcXVlc3QsIGdxbCB9IGZyb20gJ2dyYXBocWwtcmVxdWVzdCc7CnZhciBhZGRVc2VyTXV0ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdCB8fCAoX3RlbXBsYXRlT2JqZWN0ID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICAjIGlucHV0IFdhbGxldERhdGFJbnB1dCB7XG4gICMgICBzeW1ib2w6IFN0cmluZyFcbiAgIyAgIHR5cGU6IFN0cmluZ1xuXG4gICMgICBhZGRyZXNzOiBTdHJpbmchXG4gICMgICBiYWxhbmNlOiBGbG9hdFxuXG4gICMgICBwdWJsaWNfa2V5OiBTdHJpbmchXG5cbiAgIyAgICMgdW5lc2Vzc2FyeSBmaWVsZHNcbiAgIyAgIG5vdW5jZTogSW50XG4gICMgICBzaWduYXR1cmVzX3JlcXVpcmVkOiBJbnRcbiAgIyAgIHNpZ25hdG9yaWVzOiBbU3RyaW5nXVxuICAjIH1cblxuICAjIFwiXCJcIkRhdGEgY29uc3VtZWQgZnJvbSB1c2VyJ3MgYWN0aXZpdHlcIlwiXCJcbiAgIyBpbnB1dCBVc2VyRGF0YUlucHV0IHtcbiAgIyAgIGxvY2FsZTogU3RyaW5nXG4gICMgICB1c2VyX2Rlc2NyaXB0aW9uOiBTdHJpbmdcbiAgIyAgIGdpZnRfcmVmZXJyZXI6IFN0cmluZ1xuICAjICAgZ2lmdDogQm9vbGVhblxuICAjICAgZ2lmdF9kYXRlOiBTdHJpbmdcbiAgIyAgIGlwOiBTdHJpbmdcbiAgIyAgIG1lc3NhZ2luZ190b2tlbjogU3RyaW5nXG4gICMgICB3aWRnZXRfdXJsOiBTdHJpbmdcbiAgIyAgIHdhbGxldHM6IFtXYWxsZXREYXRhSW5wdXRdXG4gICMgfVxuXG4gIG11dGF0aW9uIGFkZFVzZXJNdXRhdGlvbihcbiAgICAkY3JlYXRlZEJ5OiBTdHJpbmchLFxuICAgICRkb21haW46IFN0cmluZyFcbiAgICAkZGF0YTogVXNlckRhdGFJbnB1dFxuICApe1xuICAgIGFkZFVzZXIoY3JlYXRlZF9ieTogJGNyZWF0ZWRCeSwgZG9tYWluOiAkZG9tYWluLCBkYXRhOiAkZGF0YSkge1xuICAgICAgaWRcbiAgICAgIGNyZWF0ZWRfYnlcbiAgICAgIGNyZWF0ZWRfYXRcbiAgICAgIHVwZGF0ZWRfYXRcbiAgICAgIGRvbWFpbl9hdF9jcmVhdGlvblxuICAgICAgZG9tYWluX2xhc3RfYWNjZXNzZWRfZnJvbVxuICAgICAgZGF0YSB7XG4gICAgICAgIGxvY2FsZVxuICAgICAgICB1c2VyX2Rlc2NyaXB0aW9uXG4gICAgICAgIGlwXG4gICAgICAgIG1lc3NhZ2luZ190b2tlblxuICAgICAgICB3aWRnZXRfdXJsXG4gICAgICAgIHdhbGxldHMge1xuICAgICAgICAgIHN5bWJvbFxuICAgICAgICAgIHR5cGVcbiAgICAgICAgICBhZGRyZXNzXG4gICAgICAgICAgYmFsYW5jZVxuICAgICAgICAgIHB1YmxpY19rZXlcbiAgICAgICAgICBub3VuY2VcbiAgICAgICAgICBzaWduYXRvcmllc1xuICAgICAgICAgIHNpZ25hdHVyZXNfcmVxdWlyZWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuIl0pKSk7CnZhciB1cGRVc2VyTXV0ID0gZ3FsKF90ZW1wbGF0ZU9iamVjdDIgfHwgKF90ZW1wbGF0ZU9iamVjdDIgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIG11dGF0aW9uIHVwZFVzZXJNdXRhdGlvbihcbiAgICAkY3JlYXRlZEJ5OiBTdHJpbmchLFxuICAgICRkb21haW46IFN0cmluZyFcbiAgICAkZGF0YTogVXNlckRhdGFJbnB1dFxuICApe1xuICAgIHVwZGF0ZVVzZXIoY3JlYXRlZF9ieTogJGNyZWF0ZWRCeSwgZG9tYWluOiAkZG9tYWluLCBkYXRhOiAkZGF0YSkge1xuICAgICAgaWRcbiAgICAgIGNyZWF0ZWRfYnlcbiAgICAgIGNyZWF0ZWRfYXRcbiAgICAgIHVwZGF0ZWRfYXRcbiAgICAgIGRvbWFpbl9hdF9jcmVhdGlvblxuICAgICAgZG9tYWluX2xhc3RfYWNjZXNzZWRfZnJvbVxuICAgICAgZGF0YSB7XG4gICAgICAgIGxvY2FsZVxuICAgICAgICB1c2VyX2Rlc2NyaXB0aW9uXG4gICAgICAgIGlwXG4gICAgICAgIG1lc3NhZ2luZ190b2tlblxuICAgICAgICB3aWRnZXRfdXJsXG4gICAgICAgIHdhbGxldHMge1xuICAgICAgICAgIHN5bWJvbFxuICAgICAgICAgIHR5cGVcbiAgICAgICAgICBhZGRyZXNzXG4gICAgICAgICAgYmFsYW5jZVxuICAgICAgICAgIHB1YmxpY19rZXlcbiAgICAgICAgICBub3VuY2VcbiAgICAgICAgICBzaWduYXRvcmllc1xuICAgICAgICAgIHNpZ25hdHVyZXNfcmVxdWlyZWRcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuIl0pKSk7Ci8qKg0KICoNCiAqIEBwYXJhbSB7ZXRoQWRkcmVzc30gY3JlYXRlZEJ5DQogKiBAcGFyYW0ge2RvbWFpbn0gZG9tYWluDQogKiBAcGFyYW0ge2pzb259IGRhdGENCiAqLwoKdmFyIHNlcnZlckJhc2VVcmwgPSAnaHR0cDovL2xvY2FsaG9zdDo1MDUwL2dyYXBocWwnOwoKaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHsKICBzZXJ2ZXJCYXNlVXJsID0gJ2h0dHBzOi8vc3RhdC5zd2Fwb25saW5lLmlvL2dyYXBocWwnOwp9Cgp2YXIgYWRkVXNlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKGNyZWF0ZWRCeSwgZG9tYWluLCBkYXRhKSB7CiAgICB2YXIgcmVzOwogICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gcmVxdWVzdChzZXJ2ZXJCYXNlVXJsLCBhZGRVc2VyTXV0LCB7CiAgICAgICAgICAgICAgY3JlYXRlZEJ5OiBjcmVhdGVkQnksCiAgICAgICAgICAgICAgZG9tYWluOiBkb21haW4sCiAgICAgICAgICAgICAgZGF0YTogZGF0YQogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3Igb24gYWRkIHVzZXIgdG8gc3RhdC5zd2Fwb25saW5lOicsIF9jb250ZXh0LnQwKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBhZGRVc2VyKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Ci8qKg0KICoNCiAqIEBwYXJhbSB7ZXRoQWRkcmVzc30gY3JlYXRlZEJ5DQogKiBAcGFyYW0ge2RvbWFpbn0gZG9tYWluDQogKiBAcGFyYW0ge2pzb259IGRhdGENCiAqLwoKCnZhciB1cGRhdGVVc2VyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihjcmVhdGVkQnksIGRvbWFpbiwgZGF0YSkgewogICAgdmFyIHJlcywgX3JlczsKCiAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgIHJldHVybiByZXF1ZXN0KHNlcnZlckJhc2VVcmwsIHVwZFVzZXJNdXQsIHsKICAgICAgICAgICAgICBjcmVhdGVkQnk6IGNyZWF0ZWRCeSwKICAgICAgICAgICAgICBkb21haW46IGRvbWFpbiwKICAgICAgICAgICAgICBkYXRhOiBkYXRhCiAgICAgICAgICAgIH0pOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA3OwogICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CgogICAgICAgICAgICBpZiAoISghX2NvbnRleHQyLnQwLnJlc3BvbnNlLmRhdGEgJiYgX2NvbnRleHQyLnQwLnJlc3BvbnNlLmVycm9yc1swXS5tZXNzYWdlID09PSAnVGhpcyB1c2VyIGRvZXMgbm90IGV4aXN0cycgJiYgX2NvbnRleHQyLnQwLnJlc3BvbnNlLmVycm9yc1swXS5leHRlbnNpb25zLmNvZGUgPT09ICdVTkFVVEhFTlRJQ0FURUQnKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTU7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNvbnNvbGUud2FybignRXJyb3Igb24gdXBkYXRlIHVzZXIgdG8gc3RhdC5zd2Fwb25saW5lLCB0cnlpbmcgdG8gYWRkIHVzZXIgaW5zdGVhZC4uLicsIF9jb250ZXh0Mi50MCk7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTM7CiAgICAgICAgICAgIHJldHVybiBhZGRVc2VyKGNyZWF0ZWRCeSwgZG9tYWluLCBkYXRhKTsKCiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICBfcmVzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfcmVzKTsKCiAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBvbiB1cGRhdGUgdXNlciB0byBzdGF0LnN3YXBvbmxpbmU6JywgX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XV0pOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVVzZXIoX3g0LCBfeDUsIF94NikgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwoKdmFyIGdldElQSW5mbyA9IGZ1bmN0aW9uIGdldElQSW5mbygpIHsKICB0cnkgewogICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cHM6Ly9qc29uLmdlb2lwbG9va3VwLmlvJykudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjYW1lbGNhc2UKICAgICAgdmFyIF9yZXN1bHQkZGF0YSA9IHJlc3VsdC5kYXRhLAogICAgICAgICAgaXAgPSBfcmVzdWx0JGRhdGEuaXAsCiAgICAgICAgICBjb3VudHJ5X2NvZGUgPSBfcmVzdWx0JGRhdGEuY291bnRyeV9jb2RlOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY2FtZWxjYXNlCgogICAgICBpZiAoIWlwIHx8ICFjb3VudHJ5X2NvZGUpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgaXA6ICdqc29uLmdlb2lwbG9va3VwLmlvIGRpZG5cJ3QgcmVzcG9uZCB3aXRoIGEgcmVzdWx0LCBzbyBzZXR0aW5nIGxvY2FsZSBFTiBieSBkZWZhdWx0JywKICAgICAgICAgIGxvY2FsZTogJ0VOJwogICAgICAgIH07CiAgICAgIH0KCiAgICAgIHJldHVybiB7CiAgICAgICAgaXA6IGlwLAogICAgICAgIGxvY2FsZTogY291bnRyeV9jb2RlCiAgICAgIH07CiAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcignZ2V0SVBJbmZvOicsIGVycm9yKTsKICAgICAgcmV0dXJuIHsKICAgICAgICBpcDogJ05vbmUnLAogICAgICAgIGxvY2FsZTogJ0VOJwogICAgICB9OwogICAgfSk7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogIH0KCiAgcmV0dXJuIHsKICAgIGlwOiAnTm9uZScsCiAgICBsb2NhbGU6ICdFTicKICB9Owp9OwoKZXhwb3J0IGRlZmF1bHQgewogIGFkZFVzZXI6IGFkZFVzZXIsCiAgdXBkYXRlVXNlcjogdXBkYXRlVXNlciwKICBnZXRJUEluZm86IGdldElQSW5mbwp9Ow=="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/helpers/stats.swaponline.ts"],"names":["axios","request","gql","addUserMut","updUserMut","serverBaseUrl","process","env","NODE_ENV","addUser","createdBy","domain","data","res","console","error","updateUser","response","errors","message","extensions","code","warn","getIPInfo","get","then","result","ip","country_code","locale"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { request, gql } from 'graphql-request'\r\n\r\n\r\nconst addUserMut = gql`\r\n  # input WalletDataInput {\r\n  #   symbol: String!\r\n  #   type: String\r\n\r\n  #   address: String!\r\n  #   balance: Float\r\n\r\n  #   public_key: String!\r\n\r\n  #   # unesessary fields\r\n  #   nounce: Int\r\n  #   signatures_required: Int\r\n  #   signatories: [String]\r\n  # }\r\n\r\n  # \"\"\"Data consumed from user's activity\"\"\"\r\n  # input UserDataInput {\r\n  #   locale: String\r\n  #   user_description: String\r\n  #   gift_referrer: String\r\n  #   gift: Boolean\r\n  #   gift_date: String\r\n  #   ip: String\r\n  #   messaging_token: String\r\n  #   widget_url: String\r\n  #   wallets: [WalletDataInput]\r\n  # }\r\n\r\n  mutation addUserMutation(\r\n    $createdBy: String!,\r\n    $domain: String!\r\n    $data: UserDataInput\r\n  ){\r\n    addUser(created_by: $createdBy, domain: $domain, data: $data) {\r\n      id\r\n      created_by\r\n      created_at\r\n      updated_at\r\n      domain_at_creation\r\n      domain_last_accessed_from\r\n      data {\r\n        locale\r\n        user_description\r\n        ip\r\n        messaging_token\r\n        widget_url\r\n        wallets {\r\n          symbol\r\n          type\r\n          address\r\n          balance\r\n          public_key\r\n          nounce\r\n          signatories\r\n          signatures_required\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst updUserMut = gql`\r\n  mutation updUserMutation(\r\n    $createdBy: String!,\r\n    $domain: String!\r\n    $data: UserDataInput\r\n  ){\r\n    updateUser(created_by: $createdBy, domain: $domain, data: $data) {\r\n      id\r\n      created_by\r\n      created_at\r\n      updated_at\r\n      domain_at_creation\r\n      domain_last_accessed_from\r\n      data {\r\n        locale\r\n        user_description\r\n        ip\r\n        messaging_token\r\n        widget_url\r\n        wallets {\r\n          symbol\r\n          type\r\n          address\r\n          balance\r\n          public_key\r\n          nounce\r\n          signatories\r\n          signatures_required\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n/**\r\n *\r\n * @param {ethAddress} createdBy\r\n * @param {domain} domain\r\n * @param {json} data\r\n */\r\n\r\nlet serverBaseUrl = 'http://localhost:5050/graphql'\r\nif (process.env.NODE_ENV === 'production') {\r\n  serverBaseUrl = 'https://stat.swaponline.io/graphql'\r\n}\r\n\r\nconst addUser = async (createdBy, domain, data) => {\r\n  try {\r\n    const res = await request(serverBaseUrl, addUserMut, { createdBy, domain, data })\r\n    return res\r\n  } catch (error) {\r\n    console.error('Error on add user to stat.swaponline:', error)\r\n  }\r\n}\r\n\r\n/**\r\n *\r\n * @param {ethAddress} createdBy\r\n * @param {domain} domain\r\n * @param {json} data\r\n */\r\n\r\nconst updateUser = async (createdBy, domain, data) => {\r\n  try {\r\n    const res = await request(serverBaseUrl, updUserMut, { createdBy, domain, data })\r\n    return res\r\n  } catch (error) {\r\n    if (\r\n      !error.response.data &&\r\n      error.response.errors[0].message === 'This user does not exists' &&\r\n      error.response.errors[0].extensions.code === 'UNAUTHENTICATED'\r\n    ) {\r\n      console.warn('Error on update user to stat.swaponline, trying to add user instead...', error)\r\n      const res = await addUser(createdBy, domain, data)\r\n      return res\r\n    }\r\n    console.error('Error on update user to stat.swaponline:', error)\r\n  }\r\n}\r\n\r\nconst getIPInfo = () => {\r\n  try {\r\n    return axios\r\n      .get('https://json.geoiplookup.io')\r\n      .then((result) => {\r\n        // eslint-disable-next-line camelcase\r\n        const { ip, country_code } = result.data\r\n        // eslint-disable-next-line camelcase\r\n        if (!ip || !country_code) {\r\n          return ({\r\n            ip: 'json.geoiplookup.io didn\\'t respond with a result, so setting locale EN by default',\r\n            locale: 'EN',\r\n          })\r\n        }\r\n        return ({\r\n          ip,\r\n          locale: country_code,\r\n        })\r\n      })\r\n      .catch((error) => {\r\n        console.error('getIPInfo:', error)\r\n\r\n        return {\r\n          ip: 'None',\r\n          locale: 'EN',\r\n        }\r\n      })\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n  return {\r\n    ip: 'None',\r\n    locale: 'EN',\r\n  }\r\n}\r\n\r\nexport default {\r\n  addUser,\r\n  updateUser,\r\n  getIPInfo,\r\n}\r\n"]}]}