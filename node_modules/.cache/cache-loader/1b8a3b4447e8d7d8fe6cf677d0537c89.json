{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\containers\\Core\\Core.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\containers\\Core\\Core.tsx","mtime":1614842914088},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKCnZhciBfZGVjLCBfY2xhc3MsIF90ZW1wOwoKZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9CgppbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7CmltcG9ydCBTd2FwQXBwIGZyb20gJ3N3YXAuYXBwJzsKaW1wb3J0IGFjdGlvbnMgZnJvbSAncmVkdXgvYWN0aW9ucyc7CmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWRhY3Rpb24nOwppbXBvcnQgeyBvbkluaXQgfSBmcm9tICdpbnN0YW5jZXMvbmV3U3dhcCc7CnZhciBDb3JlID0gKF9kZWMgPSBjb25uZWN0KGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIHB1YnN1YlJvb20gPSBfcmVmLnB1YnN1YlJvb207CiAgcmV0dXJuIHsKICAgIHB1YnN1YlJvb206IHB1YnN1YlJvb20KICB9Owp9KSwgX2RlYyhfY2xhc3MgPSAoX3RlbXAgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHsKICBfaW5oZXJpdHMoQ29yZSwgX0NvbXBvbmVudCk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQ29yZSk7CgogIGZ1bmN0aW9uIENvcmUoKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIENvcmUpOwoKICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldOwogICAgfQoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwuYXBwbHkoX3N1cGVyLCBbdGhpc10uY29uY2F0KGFyZ3MpKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJzdGF0ZSIsIHsKICAgICAgb3JkZXJzOiBbXQogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAic2V0UHVic3ViIiwgZnVuY3Rpb24gKCkgewogICAgICB2YXIgc2V0dXBQdWJTdWJSb29tID0gZnVuY3Rpb24gc2V0dXBQdWJTdWJSb29tKCkgewogICAgICAgIHRyeSB7CiAgICAgICAgICB2YXIgcHVic3ViUm9vbSA9IF90aGlzLnByb3BzLnB1YnN1YlJvb207CiAgICAgICAgICBpZiAocHVic3ViUm9vbS5pc09ubGluZSkgcmV0dXJuOwoKICAgICAgICAgIGlmICghU3dhcEFwcC5zaGFyZWQoKS5zZXJ2aWNlcy5yb29tLmNvbm5lY3Rpb24pIHsKICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJTd2FwUm9vbSBub3QgcmVhZHkiKTsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgaXNPbmxpbmUgPSBTd2FwQXBwLnNoYXJlZCgpLnNlcnZpY2VzLnJvb20uY29ubmVjdGlvbi5pc09ubGluZSgpOwogICAgICAgICAgdmFyIHBlZXIgPSBTd2FwQXBwLnNoYXJlZCgpLnNlcnZpY2VzLnJvb20ucGVlcjsKCiAgICAgICAgICBfdGhpcy51cGRhdGVPcmRlcnMoKTsKCiAgICAgICAgICBhY3Rpb25zLmNvcmUuaW5pdFBhcnRpYWxPcmRlcnMoKTsKCiAgICAgICAgICBpZiAoYWN0aW9ucy5jb3JlLmhhc0hpZGRlbk9yZGVycygpKSB7CiAgICAgICAgICAgIGFjdGlvbnMuY29yZS5zaG93TXlPcmRlcnMoKTsKICAgICAgICAgIH0KCiAgICAgICAgICBTd2FwQXBwLnNoYXJlZCgpLnNlcnZpY2VzLnJvb20uY29ubmVjdGlvbi5vbigncGVlciBqb2luZWQnLCBhY3Rpb25zLnB1YnN1YlJvb20udXNlckpvaW5lZCkub24oJ3BlZXIgbGVmdCcsIGFjdGlvbnMucHVic3ViUm9vbS51c2VyTGVmdCk7IC8vIEJUQyBNdWx0aXNpZ24KCiAgICAgICAgICBTd2FwQXBwLnNoYXJlZCgpLnNlcnZpY2VzLnJvb20ub24oJ2J0YyBtdWx0aXNpZyBqb2luJywgYWN0aW9ucy5idGNtdWx0aXNpZy5vblVzZXJNdWx0aXNpZ0pvaW4pOwogICAgICAgICAgY2xlYXJJbnRlcnZhbChwdWJzdWJMb2FkaW5nSW50ZXJ2YWwpOwogICAgICAgICAgYWN0aW9ucy5wdWJzdWJSb29tLnNldCh7CiAgICAgICAgICAgIGlzT25saW5lOiBpc09ubGluZSwKICAgICAgICAgICAgcGVlcjogcGVlcgogICAgICAgICAgfSk7CiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUud2FybigncHVic3ViUm9vbSBzZXR1cDonLCBlcnJvcik7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgU3dhcEFwcC5zaGFyZWQoKS5zZXJ2aWNlcy5yb29tLm9uKCdyZWFkeScsIHNldHVwUHViU3ViUm9vbSk7CiAgICAgIHZhciBwdWJzdWJMb2FkaW5nSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChzZXR1cFB1YlN1YlJvb20sIDUwMDApOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAidXBkYXRlT3JkZXJzIiwgZnVuY3Rpb24gKCkgewogICAgICB2YXIgb3JkZXJzID0gU3dhcEFwcC5zaGFyZWQoKS5zZXJ2aWNlcy5vcmRlcnMuaXRlbXM7CgogICAgICBfdGhpcy5zZXRTdGF0ZShmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG9yZGVyczogb3JkZXJzCiAgICAgICAgfTsKICAgICAgfSk7CgogICAgICBhY3Rpb25zLmNvcmUudXBkYXRlQ29yZSgpOwogICAgfSk7CgogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKENvcmUsIFt7CiAgICBrZXk6ICJjb21wb25lbnREaWRNb3VudCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgb25Jbml0KGZ1bmN0aW9uICgpIHsKICAgICAgICBhY3Rpb25zLmNvcmUuZ2V0U3dhcEhpc3RvcnkoKTsKICAgICAgICBTd2FwQXBwLnNoYXJlZCgpLnNlcnZpY2VzLm9yZGVycy5vbignbmV3IG9yZGVycycsIF90aGlzMi51cGRhdGVPcmRlcnMpLm9uKCduZXcgb3JkZXInLCBfdGhpczIudXBkYXRlT3JkZXJzKS5vbignb3JkZXIgdXBkYXRlJywgX3RoaXMyLnVwZGF0ZU9yZGVycykub24oJ3JlbW92ZSBvcmRlcicsIF90aGlzMi51cGRhdGVPcmRlcnMpLm9uKCduZXcgb3JkZXIgcmVxdWVzdCcsIF90aGlzMi51cGRhdGVPcmRlcnMpOwoKICAgICAgICBfdGhpczIuc2V0UHVic3ViKCk7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImNvbXBvbmVudFdpbGxVbm1vdW50IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHsKICAgICAgU3dhcEFwcC5zaGFyZWQoKS5zZXJ2aWNlcy5vcmRlcnMub2ZmKCduZXcgb3JkZXJzJywgdGhpcy51cGRhdGVPcmRlcnMpLm9mZignbmV3IG9yZGVyJywgdGhpcy51cGRhdGVPcmRlcnMpLm9mZignb3JkZXIgdXBkYXRlJywgdGhpcy51cGRhdGVPcmRlcnMpLm9mZigncmVtb3ZlIG9yZGVyJywgdGhpcy51cGRhdGVPcmRlcnMpLm9mZignbmV3IG9yZGVyIHJlcXVlc3QnLCB0aGlzLnVwZGF0ZU9yZGVycyk7CgogICAgICBpZiAoU3dhcEFwcC5zaGFyZWQoKS5zZXJ2aWNlcy5yb29tLmNvbm5lY3Rpb24pIHsKICAgICAgICBjb25zb2xlLmxvZygnbGVhdmUgcm9vbScpOwogICAgICAgIFN3YXBBcHAuc2hhcmVkKCkuc2VydmljZXMucm9vbS5jb25uZWN0aW9uLnJlbW92ZUxpc3RlbmVyKCdwZWVyIGpvaW5lZCcsIGFjdGlvbnMucHVic3ViUm9vbS51c2VySm9pbmVkKS5yZW1vdmVMaXN0ZW5lcigncGVlciBsZWZ0JywgYWN0aW9ucy5wdWJzdWJSb29tLnVzZXJMZWZ0KTsKICAgICAgICBTd2FwQXBwLnNoYXJlZCgpLnNlcnZpY2VzLnJvb20uY29ubmVjdGlvbi5sZWF2ZSgpOwogICAgICB9CiAgICB9CiAgfSwgewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIENvcmU7Cn0oQ29tcG9uZW50KSwgX3RlbXApKSB8fCBfY2xhc3MpOwpleHBvcnQgeyBDb3JlIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/containers/Core/Core.tsx"],"names":["Component","SwapApp","actions","connect","onInit","Core","pubsubRoom","orders","setupPubSubRoom","props","isOnline","shared","services","room","connection","Error","peer","updateOrders","core","initPartialOrders","hasHiddenOrders","showMyOrders","on","userJoined","userLeft","btcmultisig","onUserMultisigJoin","clearInterval","pubsubLoadingInterval","set","error","console","warn","setInterval","items","setState","updateCore","getSwapHistory","setPubsub","off","log","removeListener","leave"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport SwapApp from 'swap.app'\r\nimport actions from 'redux/actions'\r\nimport { connect } from 'redaction'\r\nimport metamask from 'helpers/metamask'\r\nimport { onInit } from 'instances/newSwap'\r\n\r\n\r\n@connect(({ pubsubRoom }) => ({ pubsubRoom }))\r\nexport default class Core extends Component<any, any> {\r\n\r\n  state = {\r\n    orders: [],\r\n  }\r\n\r\n  componentDidMount() {\r\n    onInit(() => {\r\n      actions.core.getSwapHistory()\r\n      SwapApp.shared().services.orders\r\n        .on('new orders', this.updateOrders)\r\n        .on('new order', this.updateOrders)\r\n        .on('order update', this.updateOrders)\r\n        .on('remove order', this.updateOrders)\r\n        .on('new order request', this.updateOrders)\r\n      this.setPubsub()\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    SwapApp.shared().services.orders\r\n      .off('new orders', this.updateOrders)\r\n      .off('new order', this.updateOrders)\r\n      .off('order update', this.updateOrders)\r\n      .off('remove order', this.updateOrders)\r\n      .off('new order request', this.updateOrders)\r\n    if (SwapApp.shared().services.room.connection) {\r\n      console.log('leave room')\r\n      SwapApp.shared().services.room.connection\r\n        .removeListener('peer joined', actions.pubsubRoom.userJoined)\r\n        .removeListener('peer left', actions.pubsubRoom.userLeft)\r\n      SwapApp.shared().services.room.connection.leave()\r\n    }\r\n  }\r\n\r\n  setPubsub = () => {\r\n    const setupPubSubRoom = () => {\r\n      try {\r\n        const { pubsubRoom } = this.props\r\n\r\n        if (pubsubRoom.isOnline) return\r\n\r\n        if (!SwapApp.shared().services.room.connection) {\r\n          throw new Error(`SwapRoom not ready`)\r\n        }\r\n\r\n        const isOnline = SwapApp.shared().services.room.connection.isOnline()\r\n        const { peer } = SwapApp.shared().services.room\r\n\r\n        this.updateOrders()\r\n\r\n        actions.core.initPartialOrders()\r\n\r\n        if (actions.core.hasHiddenOrders()) {\r\n          actions.core.showMyOrders()\r\n        }\r\n\r\n        SwapApp.shared().services.room.connection\r\n          .on('peer joined', actions.pubsubRoom.userJoined)\r\n          .on('peer left', actions.pubsubRoom.userLeft)\r\n\r\n        // BTC Multisign\r\n        SwapApp.shared().services.room.on('btc multisig join', actions.btcmultisig.onUserMultisigJoin)\r\n\r\n        clearInterval(pubsubLoadingInterval)\r\n\r\n        actions.pubsubRoom.set({\r\n          isOnline,\r\n          peer,\r\n        })\r\n      } catch (error) {\r\n        console.warn('pubsubRoom setup:', error)\r\n      }\r\n    }\r\n\r\n    SwapApp.shared().services.room.on('ready', setupPubSubRoom)\r\n\r\n    const pubsubLoadingInterval = setInterval(setupPubSubRoom, 5000)\r\n  }\r\n\r\n  updateOrders = () => {\r\n    const orders = SwapApp.shared().services.orders.items\r\n    this.setState(() => ({\r\n      orders,\r\n    }))\r\n    actions.core.updateCore()\r\n  }\r\n\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n"]}]}