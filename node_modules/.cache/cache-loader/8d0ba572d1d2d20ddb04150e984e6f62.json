{"remainingRequest":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js??ref--9-1!C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\SaveKeysModal\\SaveKeysModal.tsx","dependencies":[{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\src\\front\\shared\\components\\modals\\SaveKeysModal\\SaveKeysModal.tsx","mtime":1614850707052},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alexei\\MultiCurrencyWallet\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHMiOwppbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5IjsKCnZhciBfZGVjLCBfY2xhc3MsIF9jbGFzczIsIF90ZW1wOwoKZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH0KCmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9CgovLyBAdHMtbm9jaGVjawppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnOwppbXBvcnQgY3NzTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7CmltcG9ydCBhY3Rpb25zIGZyb20gJ3JlZHV4L2FjdGlvbnMnOwppbXBvcnQgeyBmaXhCb2R5T3ZlcmZsb3csIGNyZWF0ZVBvcnRhbCB9IGZyb20gJ2hlbHBlcnMvZG9tVXRpbHMnOwppbXBvcnQgU2F2ZUtleXMgZnJvbSAnY29tcG9uZW50cy9TYXZlS2V5cy9TYXZlS2V5cyc7CmltcG9ydCBQcml2YXRlS2V5c01vZGFsIGZyb20gJ2NvbXBvbmVudHMvbW9kYWxzL1ByaXZhdGVLZXlzTW9kYWwvUHJpdmF0ZUtleXNNb2RhbCc7CmltcG9ydCBNb2RhbCBmcm9tICdjb21wb25lbnRzL21vZGFsL01vZGFsL01vZGFsJzsKaW1wb3J0IGxpbmtzIGZyb20gJ2hlbHBlcnMvbGlua3MnOwppbXBvcnQgQ29uZmlybSBmcm9tICdjb21wb25lbnRzL0NvbmZpcm0vQ29uZmlybSc7CmltcG9ydCB7IGNvbnN0YW50cyB9IGZyb20gJ2hlbHBlcnMnOwppbXBvcnQgc3R5bGVzIGZyb20gJy4vU2F2ZUtleXNNb2RhbC5zY3NzJzsKaW1wb3J0IHsgRm9ybWF0dGVkTWVzc2FnZSwgaW5qZWN0SW50bCwgZGVmaW5lTWVzc2FnZXMgfSBmcm9tICdyZWFjdC1pbnRsJzsKdmFyIHZpZXdzID0gewogIHNhdmVLZXlzOiAnc2F2ZUtleXMnLAogIGNvbmZpcm06ICdjb25maXJtJywKICBhcHByb3ZlOiAnYXBwcm92ZScKfTsKdmFyIHRpdGxlID0gZGVmaW5lTWVzc2FnZXMoewogIEFyZXlvdXN1cmU6IHsKICAgIGlkOiAnQXJleW91c3VyZScsCiAgICBkZWZhdWx0TWVzc2FnZTogJ0FyZSB5b3Ugc3VyZSA/JwogIH0KfSk7CnZhciBsYW5nTGFiZWxzID0gZGVmaW5lTWVzc2FnZXMoewogIHRpdGxlOiB7CiAgICBpZDogIlNhdmVLZXlzTW9kYWxfVGl0bGUiLAogICAgZGVmYXVsdE1lc3NhZ2U6ICJcdTA0MkRcdTA0M0FcdTA0NDFcdTA0M0ZcdTA0M0VcdTA0NDBcdTA0NDIgXHUwNDNGXHUwNDQwXHUwNDM4XHUwNDMyXHUwNDMwXHUwNDQyXHUwNDNEXHUwNDRCXHUwNDQ1IFx1MDQzQVx1MDQzQlx1MDQ0RVx1MDQ0N1x1MDQzNVx1MDQzOSIKICB9Cn0pOwp2YXIgU2F2ZUtleXNNb2RhbCA9IChfZGVjID0gY3NzTW9kdWxlcyhzdHlsZXMsIHsKICBhbGxvd011bHRpcGxlOiB0cnVlCn0pLCBpbmplY3RJbnRsKF9jbGFzcyA9IF9kZWMoX2NsYXNzID0gKF90ZW1wID0gX2NsYXNzMiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkgewogIF9pbmhlcml0cyhTYXZlS2V5c01vZGFsLCBfUmVhY3QkQ29tcG9uZW50KTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihTYXZlS2V5c01vZGFsKTsKCiAgZnVuY3Rpb24gU2F2ZUtleXNNb2RhbCgpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU2F2ZUtleXNNb2RhbCk7CgogICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgICB9CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbC5hcHBseShfc3VwZXIsIFt0aGlzXS5jb25jYXQoYXJncykpOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgInByb3BzIiwgdm9pZCAwKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJzdGF0ZSIsIHsKICAgICAgdmlldzogX3RoaXMucHJvcHMudmlldwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiY29tcG9uZW50V2lsbE1vdW50IiwgZnVuY3Rpb24gKCkgewogICAgICBmaXhCb2R5T3ZlcmZsb3codHJ1ZSk7CiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJjb21wb25lbnRXaWxsVW5tb3VudCIsIGZ1bmN0aW9uICgpIHsKICAgICAgZml4Qm9keU92ZXJmbG93KGZhbHNlKTsKICAgIH0pOwoKICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgImNoYW5nZVZpZXciLCBmdW5jdGlvbiAodmlldykgewogICAgICByZXR1cm4gX3RoaXMuc2V0U3RhdGUoewogICAgICAgIHZpZXc6IHZpZXcKICAgICAgfSk7CiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJoYW5kbGVDb25maXJtIiwgZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5jaGFuZ2VWaWV3KHZpZXdzLmFwcHJvdmUpOwogICAgfSk7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiaGFuZGxlRG93bmxvYWQiLCBmdW5jdGlvbiAoKSB7CiAgICAgIGFjdGlvbnMudXNlci5kb3dubG9hZFByaXZhdGVLZXlzKCk7CiAgICB9KTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJoYW5kbGVDbG9zZSIsIGZ1bmN0aW9uICgpIHsKICAgICAgd2luZG93LmxvY2F0aW9uLmFzc2lnbihsaW5rcy5oYXNoSG9tZSk7CiAgICB9KTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoU2F2ZUtleXNNb2RhbCwgW3sKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciB2aWV3ID0gdGhpcy5zdGF0ZS52aWV3OwogICAgICB2YXIgaW50bCA9IHRoaXMucHJvcHMuaW50bDsKICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE1vZGFsLCB7CiAgICAgICAgbmFtZTogIlNhdmVLZXlzTW9kYWwiLAogICAgICAgIHRpdGxlOiAiIi5jb25jYXQoaW50bC5mb3JtYXRNZXNzYWdlKGxhbmdMYWJlbHMudGl0bGUpKSwKICAgICAgICBvbkNsb3NlOiB0aGlzLmhhbmRsZUNsb3NlLAogICAgICAgIHNob3dDbG9zZUJ1dHRvbjogdHJ1ZQogICAgICB9LCBwcm9jZXNzLmVudi5URVNUTkVUICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJkaXYiLCB7CiAgICAgICAgc3R5bGVOYW1lOiAidGVzdG5ldFNraXAiCiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJhIiwgewogICAgICAgIGhyZWY6ICIjIiwKICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkgewogICAgICAgICAgLy9ACiAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShjb25zdGFudHMubG9jYWxTdG9yYWdlLnRlc3RuZXRTa2lwUEtDaGVjaywgdHJ1ZSk7CgogICAgICAgICAgX3RoaXMyLmZvcmNlVXBkYXRlKCk7CiAgICAgICAgfQogICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChGb3JtYXR0ZWRNZXNzYWdlLCB7CiAgICAgICAgaWQ6ICJTYXZlS2V5c01vZGFsIiwKICAgICAgICBkZWZhdWx0TWVzc2FnZTogIlRlc3RuZXQ6IERvbmB0IGFzayBhZ2FpbiIKICAgICAgfSkpKSwgdmlldyA9PT0gdmlld3Muc2F2ZUtleXMgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU2F2ZUtleXMsIHsKICAgICAgICBpc0Rvd25sb2FkOiB0aGlzLmhhbmRsZURvd25sb2FkLAogICAgICAgIGlzQ2hhbmdlOiBmdW5jdGlvbiBpc0NoYW5nZSgpIHsKICAgICAgICAgIF90aGlzMi5jaGFuZ2VWaWV3KHZpZXdzLmNvbmZpcm0pOwoKICAgICAgICAgIF90aGlzMi5oYW5kbGVDbG9zZSgpOwogICAgICAgIH0KICAgICAgfSksIHZpZXcgPT09IHZpZXdzLmNvbmZpcm0gJiYgY3JlYXRlUG9ydGFsKCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb25maXJtLCB7CiAgICAgICAgcm9vdENsYXNzTmFtZTogc3R5bGVzLmFyZVlvdVN1cmUsCiAgICAgICAgdGl0bGU6IGludGwuZm9ybWF0TWVzc2FnZSh0aXRsZS5BcmV5b3VzdXJlKSwKICAgICAgICBpc0NvbmZpcm06IGZ1bmN0aW9uIGlzQ29uZmlybSgpIHsKICAgICAgICAgIHJldHVybiBfdGhpczIuaGFuZGxlQ29uZmlybSgpOwogICAgICAgIH0sCiAgICAgICAgaXNSZWplY3Q6IGZ1bmN0aW9uIGlzUmVqZWN0KCkgewogICAgICAgICAgcmV0dXJuIF90aGlzMi5jaGFuZ2VWaWV3KHZpZXdzLnNhdmVLZXlzKTsKICAgICAgICB9LAogICAgICAgIGFuaW1hdGlvbjogdmlldyA9PT0gdmlld3MuY29uZmlybQogICAgICB9KSksIHZpZXcgPT09IHZpZXdzLmFwcHJvdmUgJiYgY3JlYXRlUG9ydGFsKCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChQcml2YXRlS2V5c01vZGFsLCBudWxsKSkpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFNhdmVLZXlzTW9kYWw7Cn0oUmVhY3QuQ29tcG9uZW50KSwgX2RlZmluZVByb3BlcnR5KF9jbGFzczIsICJwcm9wVHlwZXMiLCB7CiAgdmlldzogUHJvcFR5cGVzLnN0cmluZwp9KSwgX2RlZmluZVByb3BlcnR5KF9jbGFzczIsICJkZWZhdWx0UHJvcHMiLCB7CiAgdmlldzogdmlld3Muc2F2ZUtleXMKfSksIF90ZW1wKSkgfHwgX2NsYXNzKSB8fCBfY2xhc3MpOwpleHBvcnQgeyBTYXZlS2V5c01vZGFsIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["C:/Users/Alexei/MultiCurrencyWallet/src/front/shared/components/modals/SaveKeysModal/SaveKeysModal.tsx"],"names":["React","PropTypes","cssModules","actions","fixBodyOverflow","createPortal","SaveKeys","PrivateKeysModal","Modal","links","Confirm","constants","styles","FormattedMessage","injectIntl","defineMessages","views","saveKeys","confirm","approve","title","Areyousure","id","defaultMessage","langLabels","SaveKeysModal","allowMultiple","view","props","setState","changeView","user","downloadPrivateKeys","window","location","assign","hashHome","state","intl","formatMessage","handleClose","process","env","TESTNET","localStorage","setItem","testnetSkipPKCheck","forceUpdate","handleDownload","areYouSure","handleConfirm","Component","string"],"mappings":"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","sourcesContent":["// @ts-nocheck\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cssModules from 'react-css-modules'\r\n\r\nimport actions from 'redux/actions'\r\nimport { fixBodyOverflow, createPortal } from 'helpers/domUtils'\r\n\r\nimport SaveKeys from 'components/SaveKeys/SaveKeys'\r\nimport PrivateKeysModal from 'components/modals/PrivateKeysModal/PrivateKeysModal'\r\nimport Modal from 'components/modal/Modal/Modal'\r\nimport links from 'helpers/links'\r\n\r\nimport Confirm from 'components/Confirm/Confirm'\r\nimport { constants } from 'helpers'\r\nimport styles from './SaveKeysModal.scss'\r\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl'\r\n\r\n\r\nconst views = {\r\n  saveKeys: 'saveKeys',\r\n  confirm: 'confirm',\r\n  approve: 'approve',\r\n}\r\n\r\nconst title = defineMessages({\r\n  Areyousure: {\r\n    id: 'Areyousure',\r\n    defaultMessage: 'Are you sure ?',\r\n  },\r\n})\r\n\r\nconst langLabels = defineMessages({\r\n  title: {\r\n    id: `SaveKeysModal_Title`,\r\n    defaultMessage: `Экспорт приватных ключей`,\r\n  }\r\n})\r\n\r\n@injectIntl\r\n@cssModules(styles, { allowMultiple: true })\r\nexport default class SaveKeysModal extends React.Component<any, any> {\r\n\r\n  props: any\r\n\r\n  static propTypes = {\r\n    view: PropTypes.string,\r\n  }\r\n\r\n  static defaultProps = {\r\n    view: views.saveKeys,\r\n  }\r\n\r\n  state = {\r\n    view: this.props.view,\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    fixBodyOverflow(true)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    fixBodyOverflow(false)\r\n  }\r\n\r\n  changeView = (view) => this.setState({ view })\r\n\r\n  handleConfirm = () => {\r\n    this.changeView(views.approve)\r\n  }\r\n\r\n  handleDownload = () => {\r\n    actions.user.downloadPrivateKeys()\r\n  }\r\n\r\n  handleClose = () => {\r\n    window.location.assign(links.hashHome)\r\n  }\r\n\r\n  render() {\r\n    const { view } = this.state\r\n    const { intl } = this.props\r\n    return (\r\n      <Modal name=\"SaveKeysModal\" title={`${intl.formatMessage(langLabels.title)}`} onClose={this.handleClose} showCloseButton>\r\n        {\r\n          process.env.TESTNET && (\r\n            <div styleName=\"testnetSkip\">\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => {\r\n                  //@\r\n                  localStorage.setItem(constants.localStorage.testnetSkipPKCheck, true)\r\n                  this.forceUpdate()\r\n                }}>\r\n                <FormattedMessage id=\"SaveKeysModal\" defaultMessage=\"Testnet: Don`t ask again\" />\r\n              </a>\r\n            </div>\r\n          )\r\n        }\r\n        {\r\n          view === views.saveKeys &&\r\n          <SaveKeys\r\n            isDownload={this.handleDownload}\r\n            isChange={() => {\r\n              this.changeView(views.confirm)\r\n              this.handleClose()\r\n            }}\r\n          />\r\n        }\r\n        {\r\n          view === views.confirm &&\r\n          createPortal(\r\n            <Confirm\r\n              rootClassName={styles.areYouSure}\r\n              title={intl.formatMessage(title.Areyousure)}\r\n              isConfirm={() => this.handleConfirm()}\r\n              isReject={() => this.changeView(views.saveKeys)}\r\n              animation={view === views.confirm}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          view === views.approve &&\r\n          createPortal(<PrivateKeysModal />)\r\n        }\r\n\r\n      </Modal >\r\n    )\r\n  }\r\n}\r\n"]}]}