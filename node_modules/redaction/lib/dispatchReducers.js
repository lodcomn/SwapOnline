"use strict";

exports.__esModule = true;
exports.resolveDispatch = exports["default"] = void 0;
var dispatch;
var waitList = [];

var wrapReducers = function wrapReducers(reducers, rootKey) {
  var dispatchedReducers = {};

  for (var nodeName in reducers) {
    if (!reducers.hasOwnProperty(nodeName)) continue;
    dispatchedReducers[nodeName] = {};

    var _loop = function _loop(methodName) {
      if (!reducers[nodeName].hasOwnProperty(methodName)) return "continue";
      if (methodName === 'default') return "continue";
      if (methodName === 'initialState') return "continue";
      var type = nodeName + "." + methodName;
      var rootType = "" + (rootKey ? rootKey + "." : '') + type;

      var dispatchedReducer = function dispatchedReducer(payload) {
        var method = function method(dispatch) {
          return dispatch({
            type: type,
            rootType: rootType,
            payload: payload
          });
        };

        if (dispatch) {
          method(dispatch);
        } else {
          waitList.push(method);
        }
      };

      dispatchedReducers[nodeName][methodName] = dispatchedReducer;
      dispatchedReducers[nodeName][methodName].type = type;
    };

    for (var methodName in reducers[nodeName]) {
      var _ret = _loop(methodName);

      if (_ret === "continue") continue;
    }
  }

  return dispatchedReducers;
};

var resolveDispatch = function resolveDispatch(_dispatch) {
  while (waitList.length) {
    var action = waitList.shift();
    action(_dispatch);
  }

  dispatch = _dispatch;
};

exports.resolveDispatch = resolveDispatch;
var _default = wrapReducers;
exports["default"] = _default;